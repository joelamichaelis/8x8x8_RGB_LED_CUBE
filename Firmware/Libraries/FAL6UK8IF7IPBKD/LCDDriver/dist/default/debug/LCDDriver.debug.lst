

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Sep 30 22:27:37 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           	psect	idataCOMRAM
    80  010B98                     __pidataCOMRAM:
    81                           	opt stack 0
    82                           
    83                           ;initializer for _hex
    84  010B98  30                 	db	48
    85  010B99  31                 	db	49
    86  010B9A  32                 	db	50
    87  010B9B  33                 	db	51
    88  010B9C  34                 	db	52
    89  010B9D  35                 	db	53
    90  010B9E  36                 	db	54
    91  010B9F  37                 	db	55
    92  010BA0  38                 	db	56
    93  010BA1  39                 	db	57
    94  010BA2  41                 	db	65
    95  010BA3  42                 	db	66
    96  010BA4  43                 	db	67
    97  010BA5  44                 	db	68
    98  010BA6  45                 	db	69
    99  010BA7  46                 	db	70
   100  010BA8  00                 	db	0
   101                           
   102                           ;initializer for LCDsetCursor@F120
   103  010BA9  0000               	dw	0
   104  010BAB  0040               	dw	64
   105  010BAD  0014               	dw	20
   106  010BAF  0054               	dw	84
   107                           
   108                           ;initializer for _bell
   109  010BB1  04                 	db	4
   110  010BB2  0E                 	db	14
   111  010BB3  0E                 	db	14
   112  010BB4  0E                 	db	14
   113  010BB5  1F                 	db	31
   114  010BB6  00                 	db	0
   115  010BB7  04                 	db	4
   116  010BB8  00                 	db	0
   117                           
   118                           	psect	idataBANK0
   119  010834                     __pidataBANK0:
   120                           	opt stack 0
   121                           
   122                           ;initializer for _charmap
   123  010834  4B                 	db	low _bell
   124  010835  00                 	db	high _bell
   125  010836  B1                 	db	low _note
   126  010837  00                 	db	high _note
   127  010838  91                 	db	low _clock
   128  010839  00                 	db	high _clock
   129  01083A  A9                 	db	low _heart
   130  01083B  00                 	db	high _heart
   131  01083C  A1                 	db	low _duck
   132  01083D  00                 	db	high _duck
   133  01083E  89                 	db	low _check
   134  01083F  00                 	db	high _check
   135  010840  99                 	db	low _cross
   136  010841  00                 	db	high _cross
   137  010842  B9                 	db	low _retarrow
   138  010843  00                 	db	high _retarrow
   139                           
   140                           ;initializer for autoIncrement@F16655
   141  010844  4E                 	db	78
   142  010845  6F                 	db	111
   143  010846  20                 	db	32
   144  010847  41                 	db	65
   145  010848  75                 	db	117
   146  010849  74                 	db	116
   147  01084A  6F                 	db	111
   148  01084B  73                 	db	115
   149  01084C  63                 	db	99
   150  01084D  72                 	db	114
   151  01084E  6F                 	db	111
   152  01084F  6C                 	db	108
   153  010850  6C                 	db	108
   154  010851  00                 	db	0
   155                           
   156                           ;initializer for autoIncrement@F16653
   157  010852  41                 	db	65
   158  010853  75                 	db	117
   159  010854  74                 	db	116
   160  010855  6F                 	db	111
   161  010856  73                 	db	115
   162  010857  63                 	db	99
   163  010858  72                 	db	114
   164  010859  6F                 	db	111
   165  01085A  6C                 	db	108
   166  01085B  6C                 	db	108
   167  01085C  00                 	db	0
   168                           
   169                           ;initializer for _check
   170  01085D  00                 	db	0
   171  01085E  01                 	db	1
   172  01085F  03                 	db	3
   173  010860  16                 	db	22
   174  010861  1C                 	db	28
   175  010862  08                 	db	8
   176  010863  00                 	db	0
   177  010864  00                 	db	0
   178                           
   179                           ;initializer for _clock
   180  010865  00                 	db	0
   181  010866  0E                 	db	14
   182  010867  15                 	db	21
   183  010868  17                 	db	23
   184  010869  11                 	db	17
   185  01086A  0E                 	db	14
   186  01086B  00                 	db	0
   187  01086C  00                 	db	0
   188                           
   189                           ;initializer for _cross
   190  01086D  00                 	db	0
   191  01086E  1B                 	db	27
   192  01086F  0E                 	db	14
   193  010870  04                 	db	4
   194  010871  0E                 	db	14
   195  010872  1B                 	db	27
   196  010873  00                 	db	0
   197  010874  00                 	db	0
   198                           
   199                           ;initializer for _duck
   200  010875  00                 	db	0
   201  010876  0C                 	db	12
   202  010877  1D                 	db	29
   203  010878  0F                 	db	15
   204  010879  0F                 	db	15
   205  01087A  06                 	db	6
   206  01087B  00                 	db	0
   207  01087C  00                 	db	0
   208                           
   209                           ;initializer for _heart
   210  01087D  00                 	db	0
   211  01087E  0A                 	db	10
   212  01087F  1F                 	db	31
   213  010880  1F                 	db	31
   214  010881  0E                 	db	14
   215  010882  04                 	db	4
   216  010883  00                 	db	0
   217  010884  00                 	db	0
   218                           
   219                           ;initializer for _note
   220  010885  02                 	db	2
   221  010886  03                 	db	3
   222  010887  02                 	db	2
   223  010888  0E                 	db	14
   224  010889  1E                 	db	30
   225  01088A  0C                 	db	12
   226  01088B  00                 	db	0
   227  01088C  00                 	db	0
   228                           
   229                           ;initializer for _retarrow
   230  01088D  01                 	db	1
   231  01088E  01                 	db	1
   232  01088F  05                 	db	5
   233  010890  09                 	db	9
   234  010891  1F                 	db	31
   235  010892  08                 	db	8
   236  010893  04                 	db	4
   237  010894  00                 	db	0
   238                           
   239                           	psect	nvCOMRAM
   240  000059                     __pnvCOMRAM:
   241                           	opt stack 0
   242  000059                     __numlines:
   243                           	opt stack 0
   244  000059                     	ds	1
   245  0000                     _PORTCbits	set	3970
   246  0000                     _TRISCbits	set	3988
   247  0000                     _TRISA1	set	31889
   248  0000                     _TRISA2	set	31890
   249  0000                     _TRISA3	set	31891
   250  0000                     _TRISA4	set	31892
   251  0000                     _TRISA5	set	31893
   252  0000                     _TRISB0	set	31896
   253  0000                     _TRISB1	set	31897
   254  0000                     _TRISB2	set	31898
   255  0000                     _TRISB4	set	31900
   256  0000                     _TRISB5	set	31901
   257  0000                     _TRISC1	set	31905
   258  0000                     _TRISC2	set	31906
   259  0000                     _TMR1	set	4046
   260  0000                     _ADCON1bits	set	4033
   261  0000                     _PIR1bits	set	3998
   262  0000                     _SSPADD	set	4040
   263  0000                     _SSPBUF	set	4041
   264  0000                     _SSPCON1	set	4038
   265  0000                     _SSPCON1bits	set	4038
   266  0000                     _SSPCON2	set	4037
   267  0000                     _SSPCON2bits	set	4037
   268  0000                     _SSPSTAT	set	4039
   269  0000                     _SSPSTATbits	set	4039
   270  0000                     _T1CONbits	set	4045
   271  0000                     _INTCON2bits	set	4081
   272                           
   273                           	psect	mediumconst
   274  00FEAA                     __pmediumconst:
   275                           	opt stack 0
   276  00FEAA  00                 	db	0
   277  00FEAB                     STR_27:
   278  00FEAB  30                 	db	48	;'0'
   279  00FEAC  31                 	db	49	;'1'
   280  00FEAD  32                 	db	50	;'2'
   281  00FEAE  33                 	db	51	;'3'
   282  00FEAF  34                 	db	52	;'4'
   283  00FEB0  35                 	db	53	;'5'
   284  00FEB1  36                 	db	54	;'6'
   285  00FEB2  37                 	db	55	;'7'
   286  00FEB3  38                 	db	56	;'8'
   287  00FEB4  39                 	db	57	;'9'
   288  00FEB5  41                 	db	65	;'A'
   289  00FEB6  42                 	db	66	;'B'
   290  00FEB7  43                 	db	67	;'C'
   291  00FEB8  44                 	db	68	;'D'
   292  00FEB9  45                 	db	69	;'E'
   293  00FEBA  46                 	db	70	;'F'
   294  00FEBB  47                 	db	71	;'G'
   295  00FEBC  48                 	db	72	;'H'
   296  00FEBD  49                 	db	73	;'I'
   297  00FEBE  4A                 	db	74	;'J'
   298  00FEBF  00                 	db	0
   299  00FEC0                     STR_25:
   300  00FEC0  43                 	db	67	;'C'
   301  00FEC1  75                 	db	117	;'u'
   302  00FEC2  72                 	db	114	;'r'
   303  00FEC3  73                 	db	115	;'s'
   304  00FEC4  6F                 	db	111	;'o'
   305  00FEC5  72                 	db	114	;'r'
   306  00FEC6  20                 	db	32
   307  00FEC7  48                 	db	72	;'H'
   308  00FEC8  6F                 	db	111	;'o'
   309  00FEC9  6D                 	db	109	;'m'
   310  00FECA  65                 	db	101	;'e'
   311  00FECB  20                 	db	32
   312  00FECC  26                 	db	38
   313  00FECD  20                 	db	32
   314  00FECE  42                 	db	66	;'B'
   315  00FECF  6C                 	db	108	;'l'
   316  00FED0  69                 	db	105	;'i'
   317  00FED1  6E                 	db	110	;'n'
   318  00FED2  6B                 	db	107	;'k'
   319  00FED3  00                 	db	0
   320  00FED4                     STR_28:
   321  00FED4  50                 	db	80	;'P'
   322  00FED5  72                 	db	114	;'r'
   323  00FED6  69                 	db	105	;'i'
   324  00FED7  6E                 	db	110	;'n'
   325  00FED8  74                 	db	116	;'t'
   326  00FED9  20                 	db	32
   327  00FEDA  72                 	db	114	;'r'
   328  00FEDB  69                 	db	105	;'i'
   329  00FEDC  67                 	db	103	;'g'
   330  00FEDD  68                 	db	104	;'h'
   331  00FEDE  74                 	db	116	;'t'
   332  00FEDF  20                 	db	32
   333  00FEE0  74                 	db	116	;'t'
   334  00FEE1  6F                 	db	111	;'o'
   335  00FEE2  20                 	db	32
   336  00FEE3  6C                 	db	108	;'l'
   337  00FEE4  65                 	db	101	;'e'
   338  00FEE5  66                 	db	102	;'f'
   339  00FEE6  74                 	db	116	;'t'
   340  00FEE7  00                 	db	0
   341  00FEE8                     STR_26:
   342  00FEE8  50                 	db	80	;'P'
   343  00FEE9  72                 	db	114	;'r'
   344  00FEEA  69                 	db	105	;'i'
   345  00FEEB  6E                 	db	110	;'n'
   346  00FEEC  74                 	db	116	;'t'
   347  00FEED  20                 	db	32
   348  00FEEE  6C                 	db	108	;'l'
   349  00FEEF  65                 	db	101	;'e'
   350  00FEF0  66                 	db	102	;'f'
   351  00FEF1  74                 	db	116	;'t'
   352  00FEF2  20                 	db	32
   353  00FEF3  74                 	db	116	;'t'
   354  00FEF4  6F                 	db	111	;'o'
   355  00FEF5  20                 	db	32
   356  00FEF6  72                 	db	114	;'r'
   357  00FEF7  69                 	db	105	;'i'
   358  00FEF8  67                 	db	103	;'g'
   359  00FEF9  68                 	db	104	;'h'
   360  00FEFA  74                 	db	116	;'t'
   361  00FEFB  00                 	db	0
   362  00FEFC                     STR_36:
   363  00FEFC  42                 	db	66	;'B'
   364  00FEFD  65                 	db	101	;'e'
   365  00FEFE  6C                 	db	108	;'l'
   366  00FEFF  6C                 	db	108	;'l'
   367  00FF00  20                 	db	32
   368  00FF01  63                 	db	99	;'c'
   369  00FF02  68                 	db	104	;'h'
   370  00FF03  61                 	db	97	;'a'
   371  00FF04  72                 	db	114	;'r'
   372  00FF05  20                 	db	32
   373  00FF06  48                 	db	72	;'H'
   374  00FF07  65                 	db	101	;'e'
   375  00FF08  78                 	db	120	;'x'
   376  00FF09  20                 	db	32
   377  00FF0A  72                 	db	114	;'r'
   378  00FF0B  65                 	db	101	;'e'
   379  00FF0C  70                 	db	112	;'p'
   380  00FF0D  3B                 	db	59	;';'
   381  00FF0E  00                 	db	0
   382  00FF0F                     STR_30:
   383  00FF0F  41                 	db	65	;'A'
   384  00FF10  64                 	db	100	;'d'
   385  00FF11  64                 	db	100	;'d'
   386  00FF12  72                 	db	114	;'r'
   387  00FF13  20                 	db	32
   388  00FF14  43                 	db	67	;'C'
   389  00FF15  6F                 	db	111	;'o'
   390  00FF16  75                 	db	117	;'u'
   391  00FF17  6E                 	db	110	;'n'
   392  00FF18  74                 	db	116	;'t'
   393  00FF19  65                 	db	101	;'e'
   394  00FF1A  72                 	db	114	;'r'
   395  00FF1B  20                 	db	32
   396  00FF1C  3A                 	db	58	;':'
   397  00FF1D  20                 	db	32
   398  00FF1E  00                 	db	0
   399  00FF1F                     STR_12:
   400  00FF1F  20                 	db	32
   401  00FF20  20                 	db	32
   402  00FF21  20                 	db	32
   403  00FF22  20                 	db	32
   404  00FF23  20                 	db	32
   405  00FF24  20                 	db	32
   406  00FF25  20                 	db	32
   407  00FF26  20                 	db	32
   408  00FF27  20                 	db	32
   409  00FF28  20                 	db	32
   410  00FF29  20                 	db	32
   411  00FF2A  20                 	db	32
   412  00FF2B  20                 	db	32
   413  00FF2C  00                 	db	0
   414  00FF2D                     STR_13:
   415  00FF2D  42                 	db	66	;'B'
   416  00FF2E  61                 	db	97	;'a'
   417  00FF2F  63                 	db	99	;'c'
   418  00FF30  6B                 	db	107	;'k'
   419  00FF31  6C                 	db	108	;'l'
   420  00FF32  69                 	db	105	;'i'
   421  00FF33  67                 	db	103	;'g'
   422  00FF34  68                 	db	104	;'h'
   423  00FF35  74                 	db	116	;'t'
   424  00FF36  20                 	db	32
   425  00FF37  4F                 	db	79	;'O'
   426  00FF38  6E                 	db	110	;'n'
   427  00FF39  20                 	db	32
   428  00FF3A  00                 	db	0
   429  00FF3B                     STR_10:
   430  00FF3B  42                 	db	66	;'B'
   431  00FF3C  61                 	db	97	;'a'
   432  00FF3D  63                 	db	99	;'c'
   433  00FF3E  6B                 	db	107	;'k'
   434  00FF3F  6C                 	db	108	;'l'
   435  00FF40  69                 	db	105	;'i'
   436  00FF41  67                 	db	103	;'g'
   437  00FF42  68                 	db	104	;'h'
   438  00FF43  74                 	db	116	;'t'
   439  00FF44  20                 	db	32
   440  00FF45  4F                 	db	79	;'O'
   441  00FF46  66                 	db	102	;'f'
   442  00FF47  66                 	db	102	;'f'
   443  00FF48  00                 	db	0
   444  00FF49                     STR_32:
   445  00FF49  42                 	db	66	;'B'
   446  00FF4A  75                 	db	117	;'u'
   447  00FF4B  73                 	db	115	;'s'
   448  00FF4C  79                 	db	121	;'y'
   449  00FF4D  20                 	db	32
   450  00FF4E  46                 	db	70	;'F'
   451  00FF4F  6C                 	db	108	;'l'
   452  00FF50  61                 	db	97	;'a'
   453  00FF51  67                 	db	103	;'g'
   454  00FF52  20                 	db	32
   455  00FF53  3A                 	db	58	;':'
   456  00FF54  20                 	db	32
   457  00FF55  00                 	db	0
   458  00FF56                     STR_3:
   459  00FF56  53                 	db	83	;'S'
   460  00FF57  63                 	db	99	;'c'
   461  00FF58  72                 	db	114	;'r'
   462  00FF59  6F                 	db	111	;'o'
   463  00FF5A  6C                 	db	108	;'l'
   464  00FF5B  6C                 	db	108	;'l'
   465  00FF5C  20                 	db	32
   466  00FF5D  4C                 	db	76	;'L'
   467  00FF5E  65                 	db	101	;'e'
   468  00FF5F  66                 	db	102	;'f'
   469  00FF60  74                 	db	116	;'t'
   470  00FF61  20                 	db	32
   471  00FF62  00                 	db	0
   472  00FF63                     STR_9:
   473  00FF63  42                 	db	66	;'B'
   474  00FF64  61                 	db	97	;'a'
   475  00FF65  63                 	db	99	;'c'
   476  00FF66  6B                 	db	107	;'k'
   477  00FF67  6C                 	db	108	;'l'
   478  00FF68  69                 	db	105	;'i'
   479  00FF69  67                 	db	103	;'g'
   480  00FF6A  68                 	db	104	;'h'
   481  00FF6B  74                 	db	116	;'t'
   482  00FF6C  20                 	db	32
   483  00FF6D  4F                 	db	79	;'O'
   484  00FF6E  6E                 	db	110	;'n'
   485  00FF6F  00                 	db	0
   486  00FF70                     STR_1:
   487  00FF70  53                 	db	83	;'S'
   488  00FF71  63                 	db	99	;'c'
   489  00FF72  72                 	db	114	;'r'
   490  00FF73  6F                 	db	111	;'o'
   491  00FF74  6C                 	db	108	;'l'
   492  00FF75  6C                 	db	108	;'l'
   493  00FF76  20                 	db	32
   494  00FF77  52                 	db	82	;'R'
   495  00FF78  69                 	db	105	;'i'
   496  00FF79  67                 	db	103	;'g'
   497  00FF7A  68                 	db	104	;'h'
   498  00FF7B  74                 	db	116	;'t'
   499  00FF7C  00                 	db	0
   500  00FF7D                     STR_6:
   501  00FF7D  44                 	db	68	;'D'
   502  00FF7E  69                 	db	105	;'i'
   503  00FF7F  73                 	db	115	;'s'
   504  00FF80  70                 	db	112	;'p'
   505  00FF81  6C                 	db	108	;'l'
   506  00FF82  61                 	db	97	;'a'
   507  00FF83  79                 	db	121	;'y'
   508  00FF84  20                 	db	32
   509  00FF85  4F                 	db	79	;'O'
   510  00FF86  6E                 	db	110	;'n'
   511  00FF87  20                 	db	32
   512  00FF88  00                 	db	0
   513  00FF89                     STR_24:
   514  00FF89  43                 	db	67	;'C'
   515  00FF8A  75                 	db	117	;'u'
   516  00FF8B  72                 	db	114	;'r'
   517  00FF8C  73                 	db	115	;'s'
   518  00FF8D  6F                 	db	111	;'o'
   519  00FF8E  72                 	db	114	;'r'
   520  00FF8F  20                 	db	32
   521  00FF90  48                 	db	72	;'H'
   522  00FF91  6F                 	db	111	;'o'
   523  00FF92  6D                 	db	109	;'m'
   524  00FF93  65                 	db	101	;'e'
   525  00FF94  00                 	db	0
   526  00FF95                     STR_8:
   527  00FF95  44                 	db	68	;'D'
   528  00FF96  69                 	db	105	;'i'
   529  00FF97  73                 	db	115	;'s'
   530  00FF98  70                 	db	112	;'p'
   531  00FF99  6C                 	db	108	;'l'
   532  00FF9A  61                 	db	97	;'a'
   533  00FF9B  79                 	db	121	;'y'
   534  00FF9C  20                 	db	32
   535  00FF9D  4F                 	db	79	;'O'
   536  00FF9E  66                 	db	102	;'f'
   537  00FF9F  66                 	db	102	;'f'
   538  00FFA0  00                 	db	0
   539  00FFA1                     STR_20:
   540  00FFA1  43                 	db	67	;'C'
   541  00FFA2  75                 	db	117	;'u'
   542  00FFA3  72                 	db	114	;'r'
   543  00FFA4  73                 	db	115	;'s'
   544  00FFA5  6F                 	db	111	;'o'
   545  00FFA6  72                 	db	114	;'r'
   546  00FFA7  20                 	db	32
   547  00FFA8  4F                 	db	79	;'O'
   548  00FFA9  66                 	db	102	;'f'
   549  00FFAA  66                 	db	102	;'f'
   550  00FFAB  00                 	db	0
   551  00FFAC                     STR_23:
   552  00FFAC  42                 	db	66	;'B'
   553  00FFAD  6C                 	db	108	;'l'
   554  00FFAE  69                 	db	105	;'i'
   555  00FFAF  6E                 	db	110	;'n'
   556  00FFB0  6B                 	db	107	;'k'
   557  00FFB1  20                 	db	32
   558  00FFB2  4F                 	db	79	;'O'
   559  00FFB3  66                 	db	102	;'f'
   560  00FFB4  66                 	db	102	;'f'
   561  00FFB5  00                 	db	0
   562  00FFB6                     STR_21:
   563  00FFB6  43                 	db	67	;'C'
   564  00FFB7  75                 	db	117	;'u'
   565  00FFB8  72                 	db	114	;'r'
   566  00FFB9  73                 	db	115	;'s'
   567  00FFBA  6F                 	db	111	;'o'
   568  00FFBB  72                 	db	114	;'r'
   569  00FFBC  20                 	db	32
   570  00FFBD  4F                 	db	79	;'O'
   571  00FFBE  6E                 	db	110	;'n'
   572  00FFBF  00                 	db	0
   573  00FFC0                     STR_22:
   574  00FFC0  42                 	db	66	;'B'
   575  00FFC1  6C                 	db	108	;'l'
   576  00FFC2  69                 	db	105	;'i'
   577  00FFC3  6E                 	db	110	;'n'
   578  00FFC4  6B                 	db	107	;'k'
   579  00FFC5  20                 	db	32
   580  00FFC6  4F                 	db	79	;'O'
   581  00FFC7  6E                 	db	110	;'n'
   582  00FFC8  00                 	db	0
   583  00FFC9                     STR_19:
   584  00FFC9  50                 	db	80	;'P'
   585  00FFCA  72                 	db	114	;'r'
   586  00FFCB  69                 	db	105	;'i'
   587  00FFCC  6E                 	db	110	;'n'
   588  00FFCD  74                 	db	116	;'t'
   589  00FFCE  20                 	db	32
   590  00FFCF  61                 	db	97	;'a'
   591  00FFD0  74                 	db	116	;'t'
   592  00FFD1  00                 	db	0
   593  00FFD2                     STR_4:
   594  00FFD2  3C                 	db	60	;'<'
   595  00FFD3  2D                 	db	45
   596  00FFD4  2D                 	db	45
   597  00FFD5  2D                 	db	45
   598  00FFD6  2D                 	db	45
   599  00FFD7  00                 	db	0
   600  00FFD8                     STR_15:
   601  00FFD8  40                 	db	64	;'@'
   602  00FFD9  3A                 	db	58	;':'
   603  00FFDA  30                 	db	48	;'0'
   604  00FFDB  2C                 	db	44
   605  00FFDC  30                 	db	48	;'0'
   606  00FFDD  00                 	db	0
   607  00FFDE                     STR_16:
   608  00FFDE  40                 	db	64	;'@'
   609  00FFDF  3A                 	db	58	;':'
   610  00FFE0  31                 	db	49	;'1'
   611  00FFE1  2C                 	db	44
   612  00FFE2  31                 	db	49	;'1'
   613  00FFE3  00                 	db	0
   614  00FFE4                     STR_17:
   615  00FFE4  40                 	db	64	;'@'
   616  00FFE5  3A                 	db	58	;':'
   617  00FFE6  32                 	db	50	;'2'
   618  00FFE7  2C                 	db	44
   619  00FFE8  32                 	db	50	;'2'
   620  00FFE9  00                 	db	0
   621  00FFEA                     STR_18:
   622  00FFEA  40                 	db	64	;'@'
   623  00FFEB  3A                 	db	58	;':'
   624  00FFEC  33                 	db	51	;'3'
   625  00FFED  2C                 	db	44
   626  00FFEE  33                 	db	51	;'3'
   627  00FFEF  00                 	db	0
   628  00FFF0                     STR_2:
   629  00FFF0  2D                 	db	45
   630  00FFF1  2D                 	db	45
   631  00FFF2  2D                 	db	45
   632  00FFF3  2D                 	db	45
   633  00FFF4  3E                 	db	62	;'>'
   634  00FFF5  00                 	db	0
   635  00FFF6                     STR_34:
   636  00FFF6  51                 	db	81	;'Q'
   637  00FFF7  20                 	db	32
   638  00FFF8  3D                 	db	61	;'='
   639  00FFF9  20                 	db	32
   640  00FFFA  00                 	db	0
   641  00FFFB                     STR_31:
   642  00FFFB  30                 	db	48	;'0'
   643  00FFFC  78                 	db	120	;'x'
   644  00FFFD  00                 	db	0
   645  0000                     
   646                           ; #config settings
   647  00FFFE  00                 	db	0	; dummy byte at the end
   648  0000                     
   649                           	psect	cinit
   650  010896                     __pcinit:
   651                           	opt stack 0
   652  010896                     start_initialization:
   653                           	opt stack 0
   654  010896                     __initialization:
   655                           	opt stack 0
   656                           
   657                           ; Clear objects allocated to COMRAM (6 bytes)
   658  010896  6A58               	clrf	(__pbssCOMRAM+5)& (0+255),c
   659  010898  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
   660  01089A  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   661  01089C  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   662  01089E  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   663  0108A0  6A53               	clrf	__pbssCOMRAM& (0+255),c
   664                           
   665                           ; Initialize objects allocated to BANK0 (97 bytes)
   666                           ; load TBLPTR registers with __pidataBANK0
   667  0108A2  0E34               	movlw	low __pidataBANK0
   668  0108A4  6EF6               	movwf	tblptrl,c
   669  0108A6  0E08               	movlw	high __pidataBANK0
   670  0108A8  6EF7               	movwf	tblptrh,c
   671  0108AA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   672  0108AC  6EF8               	movwf	tblptru,c
   673  0108AE  EE00  F060         	lfsr	0,__pdataBANK0
   674  0108B2  EE10 F061          	lfsr	1,97
   675  0108B6                     copy_data0:
   676  0108B6  0009               	tblrd		*+
   677  0108B8  CFF5 FFEE          	movff	tablat,postinc0
   678  0108BC  50E5               	movf	postdec1,w,c
   679  0108BE  50E1               	movf	fsr1l,w,c
   680  0108C0  E1FA               	bnz	copy_data0
   681                           
   682                           ; Initialize objects allocated to COMRAM (33 bytes)
   683                           ; load TBLPTR registers with __pidataCOMRAM
   684  0108C2  0E98               	movlw	low __pidataCOMRAM
   685  0108C4  6EF6               	movwf	tblptrl,c
   686  0108C6  0E0B               	movlw	high __pidataCOMRAM
   687  0108C8  6EF7               	movwf	tblptrh,c
   688  0108CA  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   689  0108CC  6EF8               	movwf	tblptru,c
   690  0108CE  EE00  F032         	lfsr	0,__pdataCOMRAM
   691  0108D2  EE10 F021          	lfsr	1,33
   692  0108D6                     copy_data1:
   693  0108D6  0009               	tblrd		*+
   694  0108D8  CFF5 FFEE          	movff	tablat,postinc0
   695  0108DC  50E5               	movf	postdec1,w,c
   696  0108DE  50E1               	movf	fsr1l,w,c
   697  0108E0  E1FA               	bnz	copy_data1
   698  0108E2                     end_of_initialization:
   699                           	opt stack 0
   700  0108E2                     __end_of__initialization:
   701                           	opt stack 0
   702  0108E2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   703  0108E4  6EF8               	movwf	tblptru,c
   704  0108E6  0100               	movlb	0
   705  0108E8  EFCC  F086         	goto	_main	;jump to C main() function
   706                           tblptru	equ	0xFF8
   707                           tblptrh	equ	0xFF7
   708                           tblptrl	equ	0xFF6
   709                           tablat	equ	0xFF5
   710                           postinc0	equ	0xFEE
   711                           postdec1	equ	0xFE5
   712                           fsr1l	equ	0xFE1
   713                           
   714                           	psect	bssCOMRAM
   715  000053                     __pbssCOMRAM:
   716                           	opt stack 0
   717  000053                     __backlightval:
   718                           	opt stack 0
   719  000053                     	ds	1
   720  000054                     __displaycontrol:
   721                           	opt stack 0
   722  000054                     	ds	1
   723  000055                     __displayfunction:
   724                           	opt stack 0
   725  000055                     	ds	1
   726  000056                     __entrymodeset:
   727                           	opt stack 0
   728  000056                     	ds	1
   729  000057                     __functionset:
   730                           	opt stack 0
   731  000057                     	ds	1
   732  000058                     _x:
   733                           	opt stack 0
   734  000058                     	ds	1
   735                           tblptru	equ	0xFF8
   736                           tblptrh	equ	0xFF7
   737                           tblptrl	equ	0xFF6
   738                           tablat	equ	0xFF5
   739                           postinc0	equ	0xFEE
   740                           postdec1	equ	0xFE5
   741                           fsr1l	equ	0xFE1
   742                           
   743                           	psect	dataCOMRAM
   744  000032                     __pdataCOMRAM:
   745                           	opt stack 0
   746  000032                     _hex:
   747                           	opt stack 0
   748  000032                     	ds	17
   749  000043                     LCDsetCursor@F120:
   750                           	opt stack 0
   751  000043                     	ds	8
   752  00004B                     _bell:
   753                           	opt stack 0
   754  00004B                     	ds	8
   755                           tblptru	equ	0xFF8
   756                           tblptrh	equ	0xFF7
   757                           tblptrl	equ	0xFF6
   758                           tablat	equ	0xFF5
   759                           postinc0	equ	0xFEE
   760                           postdec1	equ	0xFE5
   761                           fsr1l	equ	0xFE1
   762                           
   763                           	psect	dataBANK0
   764  000060                     __pdataBANK0:
   765                           	opt stack 0
   766  000060                     _charmap:
   767                           	opt stack 0
   768  000060                     	ds	16
   769  000070                     autoIncrement@F16655:
   770                           	opt stack 0
   771  000070                     	ds	14
   772  00007E                     autoIncrement@F16653:
   773                           	opt stack 0
   774  00007E                     	ds	11
   775  000089                     _check:
   776                           	opt stack 0
   777  000089                     	ds	8
   778  000091                     _clock:
   779                           	opt stack 0
   780  000091                     	ds	8
   781  000099                     _cross:
   782                           	opt stack 0
   783  000099                     	ds	8
   784  0000A1                     _duck:
   785                           	opt stack 0
   786  0000A1                     	ds	8
   787  0000A9                     _heart:
   788                           	opt stack 0
   789  0000A9                     	ds	8
   790  0000B1                     _note:
   791                           	opt stack 0
   792  0000B1                     	ds	8
   793  0000B9                     _retarrow:
   794                           	opt stack 0
   795  0000B9                     	ds	8
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           postinc0	equ	0xFEE
   801                           postdec1	equ	0xFE5
   802                           fsr1l	equ	0xFE1
   803                           
   804                           	psect	cstackCOMRAM
   805  000001                     __pcstackCOMRAM:
   806                           	opt stack 0
   807  000001                     ??_IdleI2C:
   808  000001                     OpenI2C@slew:
   809                           	opt stack 0
   810  000001                     DelayMicroseconds@delayTime:
   811                           	opt stack 0
   812  000001                     DelayMilliseconds@delayTime:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x0
   816  000001                     	ds	1
   817  000002                     OpenI2C@sync_mode:
   818                           	opt stack 0
   819  000002                     WriteI2C@data_out:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x1
   823  000002                     	ds	1
   824  000003                     ??_DelayMicroseconds:
   825  000003                     I2C_Write_Byte_Single_Reg@info:
   826                           	opt stack 0
   827  000003                     I2C_Read_Byte_Single_Reg@device:
   828                           	opt stack 0
   829  000003                     DelayMilliseconds@x:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x2
   833  000003                     	ds	1
   834  000004                     I2C_Write_Byte_Single_Reg@device:
   835                           	opt stack 0
   836  000004                     I2C_Read_Byte_Single_Reg@b:
   837                           	opt stack 0
   838                           
   839                           ; 1 bytes @ 0x3
   840  000004                     	ds	1
   841  000005                     LCDwritePCF8574@value:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x4
   845  000005                     	ds	1
   846  000006                     LCDpulseEnableNeg@_data:
   847                           	opt stack 0
   848  000006                     LCDpulseEnablePos@_data:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x5
   852  000006                     	ds	1
   853  000007                     LCDwrite4bits@nibEnRsMode:
   854                           	opt stack 0
   855  000007                     LCDread4bits@b:
   856                           	opt stack 0
   857                           
   858                           ; 1 bytes @ 0x6
   859  000007                     	ds	1
   860  000008                     LCDsend@RsMode:
   861                           	opt stack 0
   862  000008                     LCDread4bits@RsEnMode:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x7
   866  000008                     	ds	1
   867  000009                     ??_LCDreceive:
   868  000009                     LCDsend@highnib:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x8
   872  000009                     	ds	1
   873  00000A                     LCDsend@lownib:
   874                           	opt stack 0
   875  00000A                     LCDreceive@highnib:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x9
   879  00000A                     	ds	1
   880  00000B                     LCDsend@value:
   881                           	opt stack 0
   882  00000B                     LCDreceive@lownib:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0xA
   886  00000B                     	ds	1
   887  00000C                     LCDcommandWrite@value:
   888                           	opt stack 0
   889  00000C                     LCDdataWrite@value:
   890                           	opt stack 0
   891  00000C                     LCDreceive@RsMode:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0xB
   895  00000C                     	ds	1
   896  00000D                     LCD_Write_Char@message:
   897                           	opt stack 0
   898  00000D                     LCDsetCursor@row:
   899                           	opt stack 0
   900  00000D                     LCDreadDDRam@address:
   901                           	opt stack 0
   902  00000D                     LCDreadCGRam@address:
   903                           	opt stack 0
   904  00000D                     LCD_Write_Str@message:
   905                           	opt stack 0
   906  00000D                     LCDcreateChar@charmap:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0xC
   910  00000D                     	ds	1
   911  00000E                     LCDsetCursor@row_offsets:
   912                           	opt stack 0
   913                           
   914                           ; 8 bytes @ 0xD
   915  00000E                     	ds	1
   916  00000F                     LCDcreateChar@location:
   917                           	opt stack 0
   918  00000F                     LCD_Write_Str@message_ptr:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0xE
   922  00000F                     	ds	1
   923  000010                     LCDcreateChar@i:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0xF
   927  000010                     	ds	1
   928  000011                     
   929                           ; 0 bytes @ 0x10
   930  000011                     	ds	5
   931  000016                     LCDsetCursor@col:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x15
   935  000016                     	ds	1
   936  000017                     ??_controlMemoryReading:
   937  000017                     displayLeftRightScroll@x:
   938                           	opt stack 0
   939  000017                     displayOnOff@x:
   940                           	opt stack 0
   941  000017                     backLightControl@x:
   942                           	opt stack 0
   943  000017                     putHexString@r:
   944                           	opt stack 0
   945  000017                     autoIncrement@NoAutoscroll:
   946                           	opt stack 0
   947                           
   948                           ; 14 bytes @ 0x16
   949  000017                     	ds	1
   950  000018                     displayLeftRightScroll@x_721:
   951                           	opt stack 0
   952  000018                     putHexString@hexval:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x17
   956  000018                     	ds	1
   957  000019                     ??_putHexString:
   958  000019                     controlMemoryReading@x:
   959                           	opt stack 0
   960                           
   961                           ; 1 bytes @ 0x18
   962  000019                     	ds	2
   963  00001B                     putHexString@c:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x1A
   967  00001B                     	ds	1
   968  00001C                     ??_dataMemoryReading:
   969                           
   970                           ; 0 bytes @ 0x1B
   971  00001C                     	ds	2
   972  00001E                     dataMemoryReading@r:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x1D
   976  00001E                     	ds	1
   977  00001F                     dataMemoryReading@c:
   978                           	opt stack 0
   979                           
   980                           ; 1 bytes @ 0x1E
   981  00001F                     	ds	1
   982  000020                     dataMemoryReading@x:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x1F
   986  000020                     	ds	1
   987  000021                     dataMemoryReading@p:
   988                           	opt stack 0
   989                           
   990                           ; 1 bytes @ 0x20
   991  000021                     	ds	1
   992  000022                     dataMemoryReading@i:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x21
   996  000022                     	ds	3
   997  000025                     autoIncrement@Autoscroll:
   998                           	opt stack 0
   999                           
  1000                           ; 11 bytes @ 0x24
  1001  000025                     	ds	11
  1002  000030                     autoIncrement@p:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x2F
  1006  000030                     	ds	2
  1007  000032                     tblptru	equ	0xFF8
  1008                           tblptrh	equ	0xFF7
  1009                           tblptrl	equ	0xFF6
  1010                           tablat	equ	0xFF5
  1011                           postinc0	equ	0xFEE
  1012                           postdec1	equ	0xFE5
  1013                           fsr1l	equ	0xFE1
  1014                           
  1015                           ; 0 bytes @ 0x31
  1016 ;;
  1017 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1018 ;;
  1019 ;; *************** function _main *****************
  1020 ;; Defined at:
  1021 ;;		line 76 in file "main.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;		None               void
  1028 ;; Registers used:
  1029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels required when called:   12
  1041 ;; This function calls:
  1042 ;;		_SYSTEM_Initialize
  1043 ;;		_exerciseDisplay
  1044 ;; This function is called by:
  1045 ;;		Startup code after reset
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text0
  1050  010D98                     __ptext0:
  1051                           	opt stack 0
  1052  010D98                     _main:
  1053                           	opt stack 19
  1054                           
  1055                           ;main.c: 79: SYSTEM_Initialize();
  1056                           
  1057                           ;incstack = 0
  1058  010D98  EC14  F086         	call	_SYSTEM_Initialize	;wreg free
  1059  010D9C                     l2644:
  1060                           
  1061                           ;main.c: 82: exerciseDisplay();
  1062  010D9C  EC94  F085         	call	_exerciseDisplay	;wreg free
  1063  010DA0  D7FD               	goto	l2644
  1064  010DA2                     __end_of_main:
  1065                           	opt stack 0
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           postinc0	equ	0xFEE
  1071                           postdec1	equ	0xFE5
  1072                           fsr1l	equ	0xFE1
  1073                           
  1074 ;; *************** function _exerciseDisplay *****************
  1075 ;; Defined at:
  1076 ;;		line 88 in file "main.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;		None               void
  1083 ;; Registers used:
  1084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1094 ;;Total ram usage:        0 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:   11
  1097 ;; This function calls:
  1098 ;;		_autoIncrement
  1099 ;;		_backLightControl
  1100 ;;		_controlMemoryReading
  1101 ;;		_cursorControl
  1102 ;;		_dataMemoryReading
  1103 ;;		_displayLeftRightScroll
  1104 ;;		_displayOnOff
  1105 ;;		_printAt
  1106 ;;		_printLeftAndRight
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text1
  1113  010B28                     __ptext1:
  1114                           	opt stack 0
  1115  010B28                     _exerciseDisplay:
  1116                           	opt stack 19
  1117                           
  1118                           ;main.c: 90: autoIncrement();
  1119                           
  1120                           ;incstack = 0
  1121  010B28  EC3A  F081         	call	_autoIncrement	;wreg free
  1122                           
  1123                           ;main.c: 91: displayLeftRightScroll();
  1124  010B2C  EC6D  F082         	call	_displayLeftRightScroll	;wreg free
  1125                           
  1126                           ;main.c: 92: displayOnOff();
  1127  010B30  EC62  F083         	call	_displayOnOff	;wreg free
  1128                           
  1129                           ;main.c: 93: backLightControl();
  1130  010B34  ECA5  F081         	call	_backLightControl	;wreg free
  1131                           
  1132                           ;main.c: 94: printAt();
  1133  010B38  ECA3  F083         	call	_printAt	;wreg free
  1134                           
  1135                           ;main.c: 95: cursorControl();
  1136  010B3C  EC0A  F082         	call	_cursorControl	;wreg free
  1137                           
  1138                           ;main.c: 96: printLeftAndRight();
  1139  010B40  ECE0  F083         	call	_printLeftAndRight	;wreg free
  1140                           
  1141                           ;main.c: 97: controlMemoryReading();
  1142  010B44  ECA0  F080         	call	_controlMemoryReading	;wreg free
  1143                           
  1144                           ;main.c: 98: dataMemoryReading();
  1145  010B48  EC00  F080         	call	_dataMemoryReading	;wreg free
  1146  010B4C  0012               	return		;funcret
  1147  010B4E                     __end_of_exerciseDisplay:
  1148                           	opt stack 0
  1149                           tblptru	equ	0xFF8
  1150                           tblptrh	equ	0xFF7
  1151                           tblptrl	equ	0xFF6
  1152                           tablat	equ	0xFF5
  1153                           postinc0	equ	0xFEE
  1154                           postdec1	equ	0xFE5
  1155                           fsr1l	equ	0xFE1
  1156                           
  1157 ;; *************** function _printLeftAndRight *****************
  1158 ;; Defined at:
  1159 ;;		line 273 in file "main.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;		None               void
  1166 ;; Registers used:
  1167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    9
  1180 ;; This function calls:
  1181 ;;		_DelayMilliseconds
  1182 ;;		_LCD_Write_Str
  1183 ;;		_LCDblinkOff
  1184 ;;		_LCDclear
  1185 ;;		_LCDcursorOff
  1186 ;;		_LCDleftToRight
  1187 ;;		_LCDrightToLeft
  1188 ;;		_LCDsetCursor
  1189 ;; This function is called by:
  1190 ;;		_exerciseDisplay
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text2
  1195  0107C0                     __ptext2:
  1196                           	opt stack 0
  1197  0107C0                     _printLeftAndRight:
  1198                           	opt stack 20
  1199                           
  1200                           ;main.c: 275: LCDclear();
  1201                           
  1202                           ;incstack = 0
  1203  0107C0  EC29  F086         	call	_LCDclear	;wreg free
  1204                           
  1205                           ;main.c: 276: LCDcursorOff();
  1206  0107C4  ECAE  F086         	call	_LCDcursorOff	;wreg free
  1207                           
  1208                           ;main.c: 277: LCDblinkOff();
  1209  0107C8  ECB4  F086         	call	_LCDblinkOff	;wreg free
  1210                           
  1211                           ;main.c: 279: LCDleftToRight();
  1212  0107CC  EC8A  F086         	call	_LCDleftToRight	;wreg free
  1213                           
  1214                           ;main.c: 280: LCD_Write_Str("Print left to right");
  1215  0107D0  0EE8               	movlw	low STR_26
  1216  0107D2  6E0D               	movwf	LCD_Write_Str@message,c
  1217  0107D4  0EFE               	movlw	high STR_26
  1218  0107D6  6E0E               	movwf	LCD_Write_Str@message+1,c
  1219  0107D8  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1220                           
  1221                           ;main.c: 281: LCDsetCursor(0,1);
  1222  0107DC  0E01               	movlw	1
  1223  0107DE  6E0D               	movwf	LCDsetCursor@row,c
  1224  0107E0  0E00               	movlw	0
  1225  0107E2  ECDC  F084         	call	_LCDsetCursor
  1226                           
  1227                           ;main.c: 282: LCD_Write_Str("0123456789ABCDEFGHIJ");
  1228  0107E6  0EAB               	movlw	low STR_27
  1229  0107E8  6E0D               	movwf	LCD_Write_Str@message,c
  1230  0107EA  0EFE               	movlw	high STR_27
  1231  0107EC  6E0E               	movwf	LCD_Write_Str@message+1,c
  1232  0107EE  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1233                           
  1234                           ;main.c: 283: LCDsetCursor(0,2);
  1235  0107F2  0E02               	movlw	2
  1236  0107F4  6E0D               	movwf	LCDsetCursor@row,c
  1237  0107F6  0E00               	movlw	0
  1238  0107F8  ECDC  F084         	call	_LCDsetCursor
  1239                           
  1240                           ;main.c: 284: LCD_Write_Str("Print right to left");
  1241  0107FC  0ED4               	movlw	low STR_28
  1242  0107FE  6E0D               	movwf	LCD_Write_Str@message,c
  1243  010800  0EFE               	movlw	high STR_28
  1244  010802  6E0E               	movwf	LCD_Write_Str@message+1,c
  1245  010804  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1246                           
  1247                           ;main.c: 285: LCDrightToLeft();
  1248  010808  EC84  F086         	call	_LCDrightToLeft	;wreg free
  1249                           
  1250                           ;main.c: 286: LCDsetCursor(19,4);
  1251  01080C  0E04               	movlw	4
  1252  01080E  6E0D               	movwf	LCDsetCursor@row,c
  1253  010810  0E13               	movlw	19
  1254  010812  ECDC  F084         	call	_LCDsetCursor
  1255                           
  1256                           ;main.c: 287: LCD_Write_Str("0123456789ABCDEFGHIJ");
  1257  010816  0EAB               	movlw	low STR_27
  1258  010818  6E0D               	movwf	LCD_Write_Str@message,c
  1259  01081A  0EFE               	movlw	high STR_27
  1260  01081C  6E0E               	movwf	LCD_Write_Str@message+1,c
  1261  01081E  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1262                           
  1263                           ;main.c: 288: LCDleftToRight();
  1264  010822  EC8A  F086         	call	_LCDleftToRight	;wreg free
  1265                           
  1266                           ;main.c: 289: DelayMilliseconds(5000);
  1267  010826  0E13               	movlw	19
  1268  010828  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  1269  01082A  0E88               	movlw	136
  1270  01082C  6E01               	movwf	DelayMilliseconds@delayTime,c
  1271  01082E  EC13  F085         	call	_DelayMilliseconds	;wreg free
  1272  010832  0012               	return		;funcret
  1273  010834                     __end_of_printLeftAndRight:
  1274                           	opt stack 0
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           postinc0	equ	0xFEE
  1280                           postdec1	equ	0xFE5
  1281                           fsr1l	equ	0xFE1
  1282                           
  1283 ;; *************** function _LCDrightToLeft *****************
  1284 ;; Defined at:
  1285 ;;		line 338 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    8
  1306 ;; This function calls:
  1307 ;;		_LCDcommandWrite
  1308 ;; This function is called by:
  1309 ;;		_printLeftAndRight
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text3
  1314  010D08                     __ptext3:
  1315                           	opt stack 0
  1316  010D08                     _LCDrightToLeft:
  1317                           	opt stack 20
  1318                           
  1319                           ;LCD_I2C_PCF8574.c: 339: _entrymodeset &= ~0x02;
  1320                           
  1321                           ;incstack = 0
  1322  010D08  9256               	bcf	__entrymodeset,1,c
  1323                           
  1324                           ;LCD_I2C_PCF8574.c: 341: LCDcommandWrite(0x04 | _entrymodeset);
  1325  010D0A  5056               	movf	__entrymodeset,w,c
  1326  010D0C  0904               	iorlw	4
  1327  010D0E  EC7D  F086         	call	_LCDcommandWrite
  1328  010D12  0012               	return		;funcret
  1329  010D14                     __end_of_LCDrightToLeft:
  1330                           	opt stack 0
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           postinc0	equ	0xFEE
  1336                           postdec1	equ	0xFE5
  1337                           fsr1l	equ	0xFE1
  1338                           
  1339 ;; *************** function _LCDleftToRight *****************
  1340 ;; Defined at:
  1341 ;;		line 331 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;		None               void
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1359 ;;Total ram usage:        0 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    8
  1362 ;; This function calls:
  1363 ;;		_LCDcommandWrite
  1364 ;; This function is called by:
  1365 ;;		_printLeftAndRight
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text4
  1370  010D14                     __ptext4:
  1371                           	opt stack 0
  1372  010D14                     _LCDleftToRight:
  1373                           	opt stack 20
  1374                           
  1375                           ;LCD_I2C_PCF8574.c: 332: _entrymodeset |= 0x02;
  1376                           
  1377                           ;incstack = 0
  1378  010D14  8256               	bsf	__entrymodeset,1,c
  1379                           
  1380                           ;LCD_I2C_PCF8574.c: 334: LCDcommandWrite(0x04 | _entrymodeset);
  1381  010D16  5056               	movf	__entrymodeset,w,c
  1382  010D18  0904               	iorlw	4
  1383  010D1A  EC7D  F086         	call	_LCDcommandWrite
  1384  010D1E  0012               	return		;funcret
  1385  010D20                     __end_of_LCDleftToRight:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           postinc0	equ	0xFEE
  1392                           postdec1	equ	0xFE5
  1393                           fsr1l	equ	0xFE1
  1394                           
  1395 ;; *************** function _printAt *****************
  1396 ;; Defined at:
  1397 ;;		line 225 in file "main.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;		None               void
  1404 ;; Registers used:
  1405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    9
  1418 ;; This function calls:
  1419 ;;		_DelayMilliseconds
  1420 ;;		_LCD_Write_Str
  1421 ;;		_LCDclear
  1422 ;;		_LCDcursorOff
  1423 ;;		_LCDsetCursor
  1424 ;; This function is called by:
  1425 ;;		_exerciseDisplay
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text5
  1430  010746                     __ptext5:
  1431                           	opt stack 0
  1432  010746                     _printAt:
  1433                           	opt stack 20
  1434                           
  1435                           ;main.c: 227: LCDclear();
  1436                           
  1437                           ;incstack = 0
  1438  010746  EC29  F086         	call	_LCDclear	;wreg free
  1439                           
  1440                           ;main.c: 228: LCDcursorOff();
  1441  01074A  ECAE  F086         	call	_LCDcursorOff	;wreg free
  1442                           
  1443                           ;main.c: 230: LCD_Write_Str("@:0,0");
  1444  01074E  0ED8               	movlw	low STR_15
  1445  010750  6E0D               	movwf	LCD_Write_Str@message,c
  1446  010752  0EFF               	movlw	high STR_15
  1447  010754  6E0E               	movwf	LCD_Write_Str@message+1,c
  1448  010756  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1449                           
  1450                           ;main.c: 231: LCDsetCursor(1,1);
  1451  01075A  0E01               	movlw	1
  1452  01075C  6E0D               	movwf	LCDsetCursor@row,c
  1453  01075E  0E01               	movlw	1
  1454  010760  ECDC  F084         	call	_LCDsetCursor
  1455                           
  1456                           ;main.c: 232: LCD_Write_Str("@:1,1");
  1457  010764  0EDE               	movlw	low STR_16
  1458  010766  6E0D               	movwf	LCD_Write_Str@message,c
  1459  010768  0EFF               	movlw	high STR_16
  1460  01076A  6E0E               	movwf	LCD_Write_Str@message+1,c
  1461  01076C  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1462                           
  1463                           ;main.c: 233: LCDsetCursor(2,2);
  1464  010770  0E02               	movlw	2
  1465  010772  6E0D               	movwf	LCDsetCursor@row,c
  1466  010774  0E02               	movlw	2
  1467  010776  ECDC  F084         	call	_LCDsetCursor
  1468                           
  1469                           ;main.c: 234: LCD_Write_Str("@:2,2");
  1470  01077A  0EE4               	movlw	low STR_17
  1471  01077C  6E0D               	movwf	LCD_Write_Str@message,c
  1472  01077E  0EFF               	movlw	high STR_17
  1473  010780  6E0E               	movwf	LCD_Write_Str@message+1,c
  1474  010782  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1475                           
  1476                           ;main.c: 235: LCDsetCursor(3,3);
  1477  010786  0E03               	movlw	3
  1478  010788  6E0D               	movwf	LCDsetCursor@row,c
  1479  01078A  0E03               	movlw	3
  1480  01078C  ECDC  F084         	call	_LCDsetCursor
  1481                           
  1482                           ;main.c: 236: LCD_Write_Str("@:3,3");
  1483  010790  0EEA               	movlw	low STR_18
  1484  010792  6E0D               	movwf	LCD_Write_Str@message,c
  1485  010794  0EFF               	movlw	high STR_18
  1486  010796  6E0E               	movwf	LCD_Write_Str@message+1,c
  1487  010798  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1488                           
  1489                           ;main.c: 237: LCDsetCursor(12,0);
  1490  01079C  0E00               	movlw	0
  1491  01079E  6E0D               	movwf	LCDsetCursor@row,c
  1492  0107A0  0E0C               	movlw	12
  1493  0107A2  ECDC  F084         	call	_LCDsetCursor
  1494                           
  1495                           ;main.c: 238: LCD_Write_Str("Print at");
  1496  0107A6  0EC9               	movlw	low STR_19
  1497  0107A8  6E0D               	movwf	LCD_Write_Str@message,c
  1498  0107AA  0EFF               	movlw	high STR_19
  1499  0107AC  6E0E               	movwf	LCD_Write_Str@message+1,c
  1500  0107AE  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1501                           
  1502                           ;main.c: 239: DelayMilliseconds(3000);
  1503  0107B2  0E0B               	movlw	11
  1504  0107B4  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  1505  0107B6  0EB8               	movlw	184
  1506  0107B8  6E01               	movwf	DelayMilliseconds@delayTime,c
  1507  0107BA  EC13  F085         	call	_DelayMilliseconds	;wreg free
  1508  0107BE  0012               	return		;funcret
  1509  0107C0                     __end_of_printAt:
  1510                           	opt stack 0
  1511                           tblptru	equ	0xFF8
  1512                           tblptrh	equ	0xFF7
  1513                           tblptrl	equ	0xFF6
  1514                           tablat	equ	0xFF5
  1515                           postinc0	equ	0xFEE
  1516                           postdec1	equ	0xFE5
  1517                           fsr1l	equ	0xFE1
  1518                           
  1519 ;; *************** function _displayOnOff *****************
  1520 ;; Defined at:
  1521 ;;		line 167 in file "main.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  x               1   22[COMRAM] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;		None               void
  1528 ;; Registers used:
  1529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1539 ;;Total ram usage:        1 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    9
  1542 ;; This function calls:
  1543 ;;		_DelayMilliseconds
  1544 ;;		_LCD_Write_Str
  1545 ;;		_LCDblinkOff
  1546 ;;		_LCDclear
  1547 ;;		_LCDcursorOff
  1548 ;;		_LCDdisplayOff
  1549 ;;		_LCDdisplayOn
  1550 ;;		_LCDhome
  1551 ;;		_LCDsetCursor
  1552 ;; This function is called by:
  1553 ;;		_exerciseDisplay
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text6
  1558  0106C4                     __ptext6:
  1559                           	opt stack 0
  1560  0106C4                     _displayOnOff:
  1561                           	opt stack 20
  1562                           
  1563                           ;main.c: 169: LCDclear();
  1564                           
  1565                           ;incstack = 0
  1566  0106C4  EC29  F086         	call	_LCDclear	;wreg free
  1567                           
  1568                           ;main.c: 170: LCDcursorOff();
  1569  0106C8  ECAE  F086         	call	_LCDcursorOff	;wreg free
  1570                           
  1571                           ;main.c: 171: LCDblinkOff();
  1572  0106CC  ECB4  F086         	call	_LCDblinkOff	;wreg free
  1573                           
  1574                           ;main.c: 172: for (unsigned char x = 0; x < 6; x++)
  1575  0106D0  0E00               	movlw	0
  1576  0106D2  6E17               	movwf	displayOnOff@x,c
  1577  0106D4                     l2306:
  1578  0106D4  0E05               	movlw	5
  1579  0106D6  6417               	cpfsgt	displayOnOff@x,c
  1580  0106D8  D001               	goto	l423
  1581  0106DA  0012               	return	
  1582  0106DC                     l423:
  1583                           
  1584                           ;main.c: 173: {
  1585                           ;main.c: 174: if (x%2) {
  1586  0106DC  A017               	btfss	displayOnOff@x,0,c
  1587  0106DE  D013               	goto	l2318
  1588                           
  1589                           ;main.c: 175: LCDhome();
  1590  0106E0  EC1F  F086         	call	_LCDhome	;wreg free
  1591                           
  1592                           ;main.c: 176: LCD_Write_Str("           ");
  1593  0106E4  0E21               	movlw	low (STR_12+2)
  1594  0106E6  6E0D               	movwf	LCD_Write_Str@message,c
  1595  0106E8  0EFF               	movlw	high (STR_12+2)
  1596  0106EA  6E0E               	movwf	LCD_Write_Str@message+1,c
  1597  0106EC  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1598                           
  1599                           ;main.c: 177: LCDhome();
  1600  0106F0  EC1F  F086         	call	_LCDhome	;wreg free
  1601                           
  1602                           ;main.c: 178: LCD_Write_Str("Display On ");
  1603  0106F4  0E7D               	movlw	low STR_6
  1604  0106F6  6E0D               	movwf	LCD_Write_Str@message,c
  1605  0106F8  0EFF               	movlw	high STR_6
  1606  0106FA  6E0E               	movwf	LCD_Write_Str@message+1,c
  1607  0106FC  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1608                           
  1609                           ;main.c: 179: LCDdisplayOn();
  1610  010700  ECC0  F086         	call	_LCDdisplayOn	;wreg free
  1611                           
  1612                           ;main.c: 180: } else {
  1613  010704  D018               	goto	l2326
  1614  010706                     l2318:
  1615                           
  1616                           ;main.c: 181: LCDsetCursor(0,0);
  1617  010706  0E00               	movlw	0
  1618  010708  6E0D               	movwf	LCDsetCursor@row,c
  1619  01070A  0E00               	movlw	0
  1620  01070C  ECDC  F084         	call	_LCDsetCursor
  1621                           
  1622                           ;main.c: 182: LCD_Write_Str("           ");
  1623  010710  0E21               	movlw	low (STR_12+2)
  1624  010712  6E0D               	movwf	LCD_Write_Str@message,c
  1625  010714  0EFF               	movlw	high (STR_12+2)
  1626  010716  6E0E               	movwf	LCD_Write_Str@message+1,c
  1627  010718  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1628                           
  1629                           ;main.c: 183: LCDsetCursor(0,0);
  1630  01071C  0E00               	movlw	0
  1631  01071E  6E0D               	movwf	LCDsetCursor@row,c
  1632  010720  0E00               	movlw	0
  1633  010722  ECDC  F084         	call	_LCDsetCursor
  1634                           
  1635                           ;main.c: 184: LCD_Write_Str("Display Off");
  1636  010726  0E95               	movlw	low STR_8
  1637  010728  6E0D               	movwf	LCD_Write_Str@message,c
  1638  01072A  0EFF               	movlw	high STR_8
  1639  01072C  6E0E               	movwf	LCD_Write_Str@message+1,c
  1640  01072E  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1641                           
  1642                           ;main.c: 185: LCDdisplayOff();
  1643  010732  ECC6  F086         	call	_LCDdisplayOff	;wreg free
  1644  010736                     l2326:
  1645                           
  1646                           ;main.c: 186: }
  1647                           ;main.c: 187: DelayMilliseconds(750);
  1648  010736  0E02               	movlw	2
  1649  010738  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  1650  01073A  0EEE               	movlw	238
  1651  01073C  6E01               	movwf	DelayMilliseconds@delayTime,c
  1652  01073E  EC13  F085         	call	_DelayMilliseconds	;wreg free
  1653  010742  2A17               	incf	displayOnOff@x,f,c
  1654  010744  D7C7               	goto	l2306
  1655  010746                     __end_of_displayOnOff:
  1656                           	opt stack 0
  1657                           tblptru	equ	0xFF8
  1658                           tblptrh	equ	0xFF7
  1659                           tblptrl	equ	0xFF6
  1660                           tablat	equ	0xFF5
  1661                           postinc0	equ	0xFEE
  1662                           postdec1	equ	0xFE5
  1663                           fsr1l	equ	0xFE1
  1664                           
  1665 ;; *************** function _displayLeftRightScroll *****************
  1666 ;; Defined at:
  1667 ;;		line 136 in file "main.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  x               1   23[COMRAM] unsigned char 
  1672 ;;  x               1   22[COMRAM] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;		None               void
  1675 ;; Registers used:
  1676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1686 ;;Total ram usage:        2 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    9
  1689 ;; This function calls:
  1690 ;;		_DelayMilliseconds
  1691 ;;		_LCD_Write_Str
  1692 ;;		_LCDblinkOff
  1693 ;;		_LCDclear
  1694 ;;		_LCDcursorOff
  1695 ;;		_LCDscrollDisplayLeft
  1696 ;;		_LCDscrollDisplayRight
  1697 ;;		_LCDsetCursor
  1698 ;; This function is called by:
  1699 ;;		_exerciseDisplay
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text7
  1704  0104DA                     __ptext7:
  1705                           	opt stack 0
  1706  0104DA                     _displayLeftRightScroll:
  1707                           	opt stack 20
  1708                           
  1709                           ;main.c: 138: LCDclear();
  1710                           
  1711                           ;incstack = 0
  1712  0104DA  EC29  F086         	call	_LCDclear	;wreg free
  1713                           
  1714                           ;main.c: 139: LCDcursorOff();
  1715  0104DE  ECAE  F086         	call	_LCDcursorOff	;wreg free
  1716                           
  1717                           ;main.c: 140: LCDblinkOff();
  1718  0104E2  ECB4  F086         	call	_LCDblinkOff	;wreg free
  1719                           
  1720                           ;main.c: 141: LCDsetCursor(0,0);
  1721  0104E6  0E00               	movlw	0
  1722  0104E8  6E0D               	movwf	LCDsetCursor@row,c
  1723  0104EA  0E00               	movlw	0
  1724  0104EC  ECDC  F084         	call	_LCDsetCursor
  1725                           
  1726                           ;main.c: 142: LCD_Write_Str("Scroll Right");
  1727  0104F0  0E70               	movlw	low STR_1
  1728  0104F2  6E0D               	movwf	LCD_Write_Str@message,c
  1729  0104F4  0EFF               	movlw	high STR_1
  1730  0104F6  6E0E               	movwf	LCD_Write_Str@message+1,c
  1731  0104F8  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1732                           
  1733                           ;main.c: 143: LCDsetCursor(0,1);
  1734  0104FC  0E01               	movlw	1
  1735  0104FE  6E0D               	movwf	LCDsetCursor@row,c
  1736  010500  0E00               	movlw	0
  1737  010502  ECDC  F084         	call	_LCDsetCursor
  1738                           
  1739                           ;main.c: 144: LCD_Write_Str("---->");
  1740  010506  0EF0               	movlw	low STR_2
  1741  010508  6E0D               	movwf	LCD_Write_Str@message,c
  1742  01050A  0EFF               	movlw	high STR_2
  1743  01050C  6E0E               	movwf	LCD_Write_Str@message+1,c
  1744  01050E  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1745                           
  1746                           ;main.c: 145: for (unsigned char x = 0; x< 8; x++)
  1747  010512  0E00               	movlw	0
  1748  010514  6E17               	movwf	displayLeftRightScroll@x,c
  1749  010516                     l2268:
  1750  010516  0E07               	movlw	7
  1751  010518  6417               	cpfsgt	displayLeftRightScroll@x,c
  1752  01051A  D001               	goto	l2272
  1753  01051C  D00A               	goto	l2278
  1754  01051E                     l2272:
  1755                           
  1756                           ;main.c: 146: {
  1757                           ;main.c: 147: LCDscrollDisplayRight();
  1758  01051E  EC68  F086         	call	_LCDscrollDisplayRight	;wreg free
  1759                           
  1760                           ;main.c: 148: DelayMilliseconds(500);
  1761  010522  0E01               	movlw	1
  1762  010524  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  1763  010526  0EF4               	movlw	244
  1764  010528  6E01               	movwf	DelayMilliseconds@delayTime,c
  1765  01052A  EC13  F085         	call	_DelayMilliseconds	;wreg free
  1766  01052E  2A17               	incf	displayLeftRightScroll@x,f,c
  1767  010530  D7F2               	goto	l2268
  1768  010532                     l2278:
  1769                           
  1770                           ;main.c: 149: }
  1771                           ;main.c: 151: LCDclear();
  1772  010532  EC29  F086         	call	_LCDclear	;wreg free
  1773                           
  1774                           ;main.c: 152: LCDsetCursor(8,0);
  1775  010536  0E00               	movlw	0
  1776  010538  6E0D               	movwf	LCDsetCursor@row,c
  1777  01053A  0E08               	movlw	8
  1778  01053C  ECDC  F084         	call	_LCDsetCursor
  1779                           
  1780                           ;main.c: 153: LCD_Write_Str("Scroll Left ");
  1781  010540  0E56               	movlw	low STR_3
  1782  010542  6E0D               	movwf	LCD_Write_Str@message,c
  1783  010544  0EFF               	movlw	high STR_3
  1784  010546  6E0E               	movwf	LCD_Write_Str@message+1,c
  1785  010548  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1786                           
  1787                           ;main.c: 154: LCDsetCursor(8,1);
  1788  01054C  0E01               	movlw	1
  1789  01054E  6E0D               	movwf	LCDsetCursor@row,c
  1790  010550  0E08               	movlw	8
  1791  010552  ECDC  F084         	call	_LCDsetCursor
  1792                           
  1793                           ;main.c: 155: LCD_Write_Str("<----");
  1794  010556  0ED2               	movlw	low STR_4
  1795  010558  6E0D               	movwf	LCD_Write_Str@message,c
  1796  01055A  0EFF               	movlw	high STR_4
  1797  01055C  6E0E               	movwf	LCD_Write_Str@message+1,c
  1798  01055E  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  1799                           
  1800                           ;main.c: 156: for (unsigned char x = 0; x< 8; x++)
  1801  010562  0E00               	movlw	0
  1802  010564  6E18               	movwf	displayLeftRightScroll@x_721,c
  1803  010566                     l2290:
  1804  010566  0E07               	movlw	7
  1805  010568  6418               	cpfsgt	displayLeftRightScroll@x_721,c
  1806  01056A  D001               	goto	l2294
  1807  01056C  D00A               	goto	l2300
  1808  01056E                     l2294:
  1809                           
  1810                           ;main.c: 157: {
  1811                           ;main.c: 158: LCDscrollDisplayLeft();
  1812  01056E  EC6F  F086         	call	_LCDscrollDisplayLeft	;wreg free
  1813                           
  1814                           ;main.c: 159: DelayMilliseconds(500);
  1815  010572  0E01               	movlw	1
  1816  010574  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  1817  010576  0EF4               	movlw	244
  1818  010578  6E01               	movwf	DelayMilliseconds@delayTime,c
  1819  01057A  EC13  F085         	call	_DelayMilliseconds	;wreg free
  1820  01057E  2A18               	incf	displayLeftRightScroll@x_721,f,c
  1821  010580  D7F2               	goto	l2290
  1822  010582                     l2300:
  1823                           
  1824                           ;main.c: 160: }
  1825                           ;main.c: 162: DelayMilliseconds(5000);
  1826  010582  0E13               	movlw	19
  1827  010584  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  1828  010586  0E88               	movlw	136
  1829  010588  6E01               	movwf	DelayMilliseconds@delayTime,c
  1830  01058A  EC13  F085         	call	_DelayMilliseconds	;wreg free
  1831  01058E  0012               	return		;funcret
  1832  010590                     __end_of_displayLeftRightScroll:
  1833                           	opt stack 0
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           postinc0	equ	0xFEE
  1839                           postdec1	equ	0xFE5
  1840                           fsr1l	equ	0xFE1
  1841                           
  1842 ;; *************** function _LCDscrollDisplayRight *****************
  1843 ;; Defined at:
  1844 ;;		line 323 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;		None               void
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;Total ram usage:        0 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    8
  1865 ;; This function calls:
  1866 ;;		_LCDcommandWrite
  1867 ;; This function is called by:
  1868 ;;		_displayLeftRightScroll
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text8
  1873  010CD0                     __ptext8:
  1874                           	opt stack 0
  1875  010CD0                     _LCDscrollDisplayRight:
  1876                           	opt stack 20
  1877                           
  1878                           ;LCD_I2C_PCF8574.c: 324: _displaycontrol |= 0x04;
  1879                           
  1880                           ;incstack = 0
  1881  010CD0  8454               	bsf	__displaycontrol,2,c
  1882                           
  1883                           ;LCD_I2C_PCF8574.c: 325: _displaycontrol |= 0x08;
  1884  010CD2  8654               	bsf	__displaycontrol,3,c
  1885                           
  1886                           ;LCD_I2C_PCF8574.c: 326: LCDcommandWrite(0x10 | _displaycontrol);
  1887  010CD4  5054               	movf	__displaycontrol,w,c
  1888  010CD6  0910               	iorlw	16
  1889  010CD8  EC7D  F086         	call	_LCDcommandWrite
  1890  010CDC  0012               	return		;funcret
  1891  010CDE                     __end_of_LCDscrollDisplayRight:
  1892                           	opt stack 0
  1893                           tblptru	equ	0xFF8
  1894                           tblptrh	equ	0xFF7
  1895                           tblptrl	equ	0xFF6
  1896                           tablat	equ	0xFF5
  1897                           postinc0	equ	0xFEE
  1898                           postdec1	equ	0xFE5
  1899                           fsr1l	equ	0xFE1
  1900                           
  1901 ;; *************** function _LCDscrollDisplayLeft *****************
  1902 ;; Defined at:
  1903 ;;		line 317 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;		None               void
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    8
  1924 ;; This function calls:
  1925 ;;		_LCDcommandWrite
  1926 ;; This function is called by:
  1927 ;;		_displayLeftRightScroll
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text9
  1932  010CDE                     __ptext9:
  1933                           	opt stack 0
  1934  010CDE                     _LCDscrollDisplayLeft:
  1935                           	opt stack 20
  1936                           
  1937                           ;LCD_I2C_PCF8574.c: 318: _displaycontrol &= ~0x04;
  1938                           
  1939                           ;incstack = 0
  1940  010CDE  9454               	bcf	__displaycontrol,2,c
  1941                           
  1942                           ;LCD_I2C_PCF8574.c: 319: _displaycontrol |= 0x08;
  1943  010CE0  8654               	bsf	__displaycontrol,3,c
  1944                           
  1945                           ;LCD_I2C_PCF8574.c: 320: LCDcommandWrite(0x10 | _displaycontrol);
  1946  010CE2  5054               	movf	__displaycontrol,w,c
  1947  010CE4  0910               	iorlw	16
  1948  010CE6  EC7D  F086         	call	_LCDcommandWrite
  1949  010CEA  0012               	return		;funcret
  1950  010CEC                     __end_of_LCDscrollDisplayLeft:
  1951                           	opt stack 0
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           postinc0	equ	0xFEE
  1957                           postdec1	equ	0xFE5
  1958                           fsr1l	equ	0xFE1
  1959                           
  1960 ;; *************** function _dataMemoryReading *****************
  1961 ;; Defined at:
  1962 ;;		line 327 in file "main.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  c               1   30[COMRAM] unsigned char 
  1967 ;;  r               1   29[COMRAM] unsigned char 
  1968 ;;  i               1   33[COMRAM] unsigned char 
  1969 ;;  p               1   32[COMRAM] unsigned char 
  1970 ;;  x               1   31[COMRAM] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;		None               void
  1973 ;; Registers used:
  1974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;Total ram usage:        7 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:   10
  1987 ;; This function calls:
  1988 ;;		_LCD_Write_Char
  1989 ;;		_LCD_Write_Str
  1990 ;;		_LCDblinkOff
  1991 ;;		_LCDclear
  1992 ;;		_LCDcreateChar
  1993 ;;		_LCDcursorOff
  1994 ;;		_LCDhome
  1995 ;;		_LCDreadCGRam
  1996 ;;		_LCDreadDDRam
  1997 ;;		_LCDsetCursor
  1998 ;;		_putHexString
  1999 ;; This function is called by:
  2000 ;;		_exerciseDisplay
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text10
  2005  010000                     __ptext10:
  2006                           	opt stack 0
  2007  010000                     _dataMemoryReading:
  2008                           	opt stack 19
  2009                           
  2010                           ;main.c: 329: unsigned char x = 0;
  2011                           
  2012                           ;incstack = 0
  2013  010000  0E00               	movlw	0
  2014  010002  6E20               	movwf	dataMemoryReading@x,c
  2015                           
  2016                           ;main.c: 331: LCDclear();
  2017  010004  EC29  F086         	call	_LCDclear	;wreg free
  2018                           
  2019                           ;main.c: 332: LCDcursorOff();
  2020  010008  ECAE  F086         	call	_LCDcursorOff	;wreg free
  2021                           
  2022                           ;main.c: 333: LCDblinkOff();
  2023  01000C  ECB4  F086         	call	_LCDblinkOff	;wreg free
  2024                           
  2025                           ;main.c: 335: for (unsigned char p = 0; p < 8 ; p++)
  2026  010010  0E00               	movlw	0
  2027  010012  6E21               	movwf	dataMemoryReading@p,c
  2028  010014                     l2518:
  2029  010014  0E07               	movlw	7
  2030  010016  6421               	cpfsgt	dataMemoryReading@p,c
  2031  010018  D001               	goto	l2522
  2032  01001A  D011               	goto	l2528
  2033  01001C                     l2522:
  2034                           
  2035                           ;main.c: 336: LCDcreateChar(p, charmap[p]);
  2036  01001C  5021               	movf	dataMemoryReading@p,w,c
  2037  01001E  0D02               	mullw	2
  2038  010020  0E60               	movlw	low _charmap
  2039  010022  24F3               	addwf	prodl,w,c
  2040  010024  6ED9               	movwf	fsr2l,c
  2041  010026  0E00               	movlw	high _charmap
  2042  010028  20F4               	addwfc	prodh,w,c
  2043  01002A  6EDA               	movwf	fsr2h,c
  2044  01002C  CFDE F00D          	movff	postinc2,LCDcreateChar@charmap
  2045  010030  CFDD F00E          	movff	postdec2,LCDcreateChar@charmap+1
  2046  010034  5021               	movf	dataMemoryReading@p,w,c
  2047  010036  EC9C  F084         	call	_LCDcreateChar
  2048  01003A  2A21               	incf	dataMemoryReading@p,f,c
  2049  01003C  D7EB               	goto	l2518
  2050  01003E                     l2528:
  2051                           
  2052                           ;main.c: 337: LCDhome();
  2053  01003E  EC1F  F086         	call	_LCDhome	;wreg free
  2054                           
  2055                           ;main.c: 339: LCDsetCursor(0,0);
  2056  010042  0E00               	movlw	0
  2057  010044  6E0D               	movwf	LCDsetCursor@row,c
  2058  010046  0E00               	movlw	0
  2059  010048  ECDC  F084         	call	_LCDsetCursor
  2060                           
  2061                           ;main.c: 340: LCD_Write_Str("Q = ");
  2062  01004C  0EF6               	movlw	low STR_34
  2063  01004E  6E0D               	movwf	LCD_Write_Str@message,c
  2064  010050  0EFF               	movlw	high STR_34
  2065  010052  6E0E               	movwf	LCD_Write_Str@message+1,c
  2066  010054  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  2067                           
  2068                           ;main.c: 342: x = LCDreadDDRam(0x00);
  2069  010058  0E00               	movlw	0
  2070  01005A  EC3D  F086         	call	_LCDreadDDRam
  2071  01005E  6E20               	movwf	dataMemoryReading@x,c
  2072                           
  2073                           ;main.c: 343: LCDsetCursor(4,0);
  2074  010060  0E00               	movlw	0
  2075  010062  6E0D               	movwf	LCDsetCursor@row,c
  2076  010064  0E04               	movlw	4
  2077  010066  ECDC  F084         	call	_LCDsetCursor
  2078                           
  2079                           ;main.c: 344: LCD_Write_Str("0x");
  2080  01006A  0EFB               	movlw	low STR_31
  2081  01006C  6E0D               	movwf	LCD_Write_Str@message,c
  2082  01006E  0EFF               	movlw	high STR_31
  2083  010070  6E0E               	movwf	LCD_Write_Str@message+1,c
  2084  010072  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  2085                           
  2086                           ;main.c: 345: LCDsetCursor(6,0);
  2087  010076  0E00               	movlw	0
  2088  010078  6E0D               	movwf	LCDsetCursor@row,c
  2089  01007A  0E06               	movlw	6
  2090  01007C  ECDC  F084         	call	_LCDsetCursor
  2091                           
  2092                           ;main.c: 346: LCD_Write_Char((char) hex[(x>>4)& 0x0f]);
  2093  010080  3820               	swapf	dataMemoryReading@x,w,c
  2094  010082  0B0F               	andlw	15
  2095  010084  0B0F               	andlw	15
  2096  010086  6E1C               	movwf	??_dataMemoryReading& (0+255),c
  2097  010088  6A1D               	clrf	(??_dataMemoryReading+1)& (0+255),c
  2098  01008A  0E32               	movlw	low _hex
  2099  01008C  241C               	addwf	??_dataMemoryReading,w,c
  2100  01008E  6ED9               	movwf	fsr2l,c
  2101  010090  0E00               	movlw	high _hex
  2102  010092  201D               	addwfc	??_dataMemoryReading+1,w,c
  2103  010094  6EDA               	movwf	fsr2h,c
  2104  010096  50DF               	movf	indf2,w,c
  2105  010098  ECD1  F086         	call	_LCD_Write_Char
  2106                           
  2107                           ;main.c: 347: LCDsetCursor(7,0);
  2108  01009C  0E00               	movlw	0
  2109  01009E  6E0D               	movwf	LCDsetCursor@row,c
  2110  0100A0  0E07               	movlw	7
  2111  0100A2  ECDC  F084         	call	_LCDsetCursor
  2112                           
  2113                           ;main.c: 348: LCD_Write_Char((char) hex[x & 0x0f]);
  2114  0100A6  5020               	movf	dataMemoryReading@x,w,c
  2115  0100A8  0B0F               	andlw	15
  2116  0100AA  6E1C               	movwf	??_dataMemoryReading& (0+255),c
  2117  0100AC  6A1D               	clrf	(??_dataMemoryReading+1)& (0+255),c
  2118  0100AE  0E32               	movlw	low _hex
  2119  0100B0  241C               	addwf	??_dataMemoryReading,w,c
  2120  0100B2  6ED9               	movwf	fsr2l,c
  2121  0100B4  0E00               	movlw	high _hex
  2122  0100B6  201D               	addwfc	??_dataMemoryReading+1,w,c
  2123  0100B8  6EDA               	movwf	fsr2h,c
  2124  0100BA  50DF               	movf	indf2,w,c
  2125  0100BC  ECD1  F086         	call	_LCD_Write_Char
  2126                           
  2127                           ;main.c: 349: LCDsetCursor(8,0);
  2128  0100C0  0E00               	movlw	0
  2129  0100C2  6E0D               	movwf	LCDsetCursor@row,c
  2130  0100C4  0E08               	movlw	8
  2131  0100C6  ECDC  F084         	call	_LCDsetCursor
  2132                           
  2133                           ;main.c: 350: LCD_Write_Char(',');
  2134  0100CA  0E2C               	movlw	44
  2135  0100CC  ECD1  F086         	call	_LCD_Write_Char
  2136                           
  2137                           ;main.c: 352: for (unsigned char i = 0; i < 8; i++)
  2138  0100D0  0E00               	movlw	0
  2139  0100D2  6E22               	movwf	dataMemoryReading@i,c
  2140  0100D4                     l2552:
  2141  0100D4  0E07               	movlw	7
  2142  0100D6  6422               	cpfsgt	dataMemoryReading@i,c
  2143  0100D8  D001               	goto	l2556
  2144  0100DA  D00B               	goto	l2564
  2145  0100DC                     l2556:
  2146                           
  2147                           ;main.c: 353: {
  2148                           ;main.c: 354: LCDsetCursor(i+10,0);
  2149  0100DC  0E00               	movlw	0
  2150  0100DE  6E0D               	movwf	LCDsetCursor@row,c
  2151  0100E0  5022               	movf	dataMemoryReading@i,w,c
  2152  0100E2  0F0A               	addlw	10
  2153  0100E4  ECDC  F084         	call	_LCDsetCursor
  2154                           
  2155                           ;main.c: 355: LCD_Write_Char(i);
  2156  0100E8  5022               	movf	dataMemoryReading@i,w,c
  2157  0100EA  ECD1  F086         	call	_LCD_Write_Char
  2158  0100EE  2A22               	incf	dataMemoryReading@i,f,c
  2159  0100F0  D7F1               	goto	l2552
  2160  0100F2                     l2564:
  2161                           
  2162                           ;main.c: 356: }
  2163                           ;main.c: 358: LCDsetCursor(0,1);
  2164  0100F2  0E01               	movlw	1
  2165  0100F4  6E0D               	movwf	LCDsetCursor@row,c
  2166  0100F6  0E00               	movlw	0
  2167  0100F8  ECDC  F084         	call	_LCDsetCursor
  2168                           
  2169                           ;main.c: 359: LCD_Write_Str("Bell char Hex rep;");
  2170  0100FC  0EFC               	movlw	low STR_36
  2171  0100FE  6E0D               	movwf	LCD_Write_Str@message,c
  2172  010100  0EFE               	movlw	high STR_36
  2173  010102  6E0E               	movwf	LCD_Write_Str@message+1,c
  2174  010104  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  2175                           
  2176                           ;main.c: 361: x = 0;
  2177  010108  0E00               	movlw	0
  2178  01010A  6E20               	movwf	dataMemoryReading@x,c
  2179                           
  2180                           ;main.c: 362: for (unsigned char r = 0; r < 2; r++)
  2181  01010C  0E00               	movlw	0
  2182  01010E  6E1E               	movwf	dataMemoryReading@r,c
  2183  010110                     l2572:
  2184  010110  0E01               	movlw	1
  2185  010112  641E               	cpfsgt	dataMemoryReading@r,c
  2186  010114  D001               	goto	l2576
  2187  010116  0012               	return	
  2188  010118                     l2576:
  2189                           
  2190                           ;main.c: 363: for (unsigned char c = 0; c < 4; c++)
  2191  010118  0E00               	movlw	0
  2192  01011A  6E1F               	movwf	dataMemoryReading@c,c
  2193  01011C                     l2578:
  2194  01011C  0E03               	movlw	3
  2195  01011E  641F               	cpfsgt	dataMemoryReading@c,c
  2196  010120  D001               	goto	l2582
  2197  010122  D00C               	goto	l2590
  2198  010124                     l2582:
  2199                           
  2200                           ;main.c: 364: putHexString(c, r, LCDreadCGRam(x++));
  2201  010124  C01E  F017         	movff	dataMemoryReading@r,putHexString@r
  2202  010128  5020               	movf	dataMemoryReading@x,w,c
  2203  01012A  EC46  F086         	call	_LCDreadCGRam
  2204  01012E  6E18               	movwf	putHexString@hexval,c
  2205  010130  501F               	movf	dataMemoryReading@c,w,c
  2206  010132  EC1F  F083         	call	_putHexString
  2207  010136  2A20               	incf	dataMemoryReading@x,f,c
  2208  010138  2A1F               	incf	dataMemoryReading@c,f,c
  2209  01013A  D7F0               	goto	l2578
  2210  01013C                     l2590:
  2211  01013C  2A1E               	incf	dataMemoryReading@r,f,c
  2212  01013E  D7E8               	goto	l2572
  2213  010140                     __end_of_dataMemoryReading:
  2214                           	opt stack 0
  2215                           tblptru	equ	0xFF8
  2216                           tblptrh	equ	0xFF7
  2217                           tblptrl	equ	0xFF6
  2218                           tablat	equ	0xFF5
  2219                           prodh	equ	0xFF4
  2220                           prodl	equ	0xFF3
  2221                           postinc0	equ	0xFEE
  2222                           postdec1	equ	0xFE5
  2223                           fsr1l	equ	0xFE1
  2224                           indf2	equ	0xFDF
  2225                           postinc2	equ	0xFDE
  2226                           postdec2	equ	0xFDD
  2227                           fsr2h	equ	0xFDA
  2228                           fsr2l	equ	0xFD9
  2229                           
  2230 ;; *************** function _putHexString *****************
  2231 ;; Defined at:
  2232 ;;		line 369 in file "main.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  c               1    wreg     unsigned char 
  2235 ;;  r               1   22[COMRAM] unsigned char 
  2236 ;;  hexval          1   23[COMRAM] unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  c               1   26[COMRAM] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;		None               void
  2241 ;; Registers used:
  2242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2250 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2251 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;Total ram usage:        5 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    9
  2255 ;; This function calls:
  2256 ;;		_LCD_Write_Char
  2257 ;;		_LCD_Write_Str
  2258 ;;		_LCDsetCursor
  2259 ;; This function is called by:
  2260 ;;		_dataMemoryReading
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text11
  2265  01063E                     __ptext11:
  2266                           	opt stack 0
  2267  01063E                     _putHexString:
  2268                           	opt stack 19
  2269                           
  2270                           ;incstack = 0
  2271                           ;putHexString@c stored from wreg
  2272  01063E  6E1B               	movwf	putHexString@c,c
  2273                           
  2274                           ;main.c: 371: LCDsetCursor(0+(5*c),2+(2*r));
  2275  010640  5017               	movf	putHexString@r,w,c
  2276  010642  0D02               	mullw	2
  2277  010644  50F3               	movf	prodl,w,c
  2278  010646  0F02               	addlw	2
  2279  010648  6E0D               	movwf	LCDsetCursor@row,c
  2280  01064A  501B               	movf	putHexString@c,w,c
  2281  01064C  0D05               	mullw	5
  2282  01064E  50F3               	movf	prodl,w,c
  2283  010650  ECDC  F084         	call	_LCDsetCursor
  2284                           
  2285                           ;main.c: 372: LCD_Write_Str("0x");
  2286  010654  0EFB               	movlw	low STR_31
  2287  010656  6E0D               	movwf	LCD_Write_Str@message,c
  2288  010658  0EFF               	movlw	high STR_31
  2289  01065A  6E0E               	movwf	LCD_Write_Str@message+1,c
  2290  01065C  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  2291                           
  2292                           ;main.c: 373: LCDsetCursor(2+(5*c),2+(2*r));
  2293  010660  5017               	movf	putHexString@r,w,c
  2294  010662  0D02               	mullw	2
  2295  010664  50F3               	movf	prodl,w,c
  2296  010666  0F02               	addlw	2
  2297  010668  6E0D               	movwf	LCDsetCursor@row,c
  2298  01066A  501B               	movf	putHexString@c,w,c
  2299  01066C  0D05               	mullw	5
  2300  01066E  50F3               	movf	prodl,w,c
  2301  010670  0F02               	addlw	2
  2302  010672  ECDC  F084         	call	_LCDsetCursor
  2303                           
  2304                           ;main.c: 374: LCD_Write_Char((char) hex[(hexval>>4)& 0x0f]);
  2305  010676  3818               	swapf	putHexString@hexval,w,c
  2306  010678  0B0F               	andlw	15
  2307  01067A  0B0F               	andlw	15
  2308  01067C  6E19               	movwf	??_putHexString& (0+255),c
  2309  01067E  6A1A               	clrf	(??_putHexString+1)& (0+255),c
  2310  010680  0E32               	movlw	low _hex
  2311  010682  2419               	addwf	??_putHexString,w,c
  2312  010684  6ED9               	movwf	fsr2l,c
  2313  010686  0E00               	movlw	high _hex
  2314  010688  201A               	addwfc	??_putHexString+1,w,c
  2315  01068A  6EDA               	movwf	fsr2h,c
  2316  01068C  50DF               	movf	indf2,w,c
  2317  01068E  ECD1  F086         	call	_LCD_Write_Char
  2318                           
  2319                           ;main.c: 375: LCDsetCursor(3+(5*c),2+(2*r));
  2320  010692  5017               	movf	putHexString@r,w,c
  2321  010694  0D02               	mullw	2
  2322  010696  50F3               	movf	prodl,w,c
  2323  010698  0F02               	addlw	2
  2324  01069A  6E0D               	movwf	LCDsetCursor@row,c
  2325  01069C  501B               	movf	putHexString@c,w,c
  2326  01069E  0D05               	mullw	5
  2327  0106A0  50F3               	movf	prodl,w,c
  2328  0106A2  0F03               	addlw	3
  2329  0106A4  ECDC  F084         	call	_LCDsetCursor
  2330                           
  2331                           ;main.c: 376: LCD_Write_Char((char) hex[hexval & 0x0f]);
  2332  0106A8  5018               	movf	putHexString@hexval,w,c
  2333  0106AA  0B0F               	andlw	15
  2334  0106AC  6E19               	movwf	??_putHexString& (0+255),c
  2335  0106AE  6A1A               	clrf	(??_putHexString+1)& (0+255),c
  2336  0106B0  0E32               	movlw	low _hex
  2337  0106B2  2419               	addwf	??_putHexString,w,c
  2338  0106B4  6ED9               	movwf	fsr2l,c
  2339  0106B6  0E00               	movlw	high _hex
  2340  0106B8  201A               	addwfc	??_putHexString+1,w,c
  2341  0106BA  6EDA               	movwf	fsr2h,c
  2342  0106BC  50DF               	movf	indf2,w,c
  2343  0106BE  ECD1  F086         	call	_LCD_Write_Char
  2344  0106C2  0012               	return		;funcret
  2345  0106C4                     __end_of_putHexString:
  2346                           	opt stack 0
  2347                           tblptru	equ	0xFF8
  2348                           tblptrh	equ	0xFF7
  2349                           tblptrl	equ	0xFF6
  2350                           tablat	equ	0xFF5
  2351                           prodh	equ	0xFF4
  2352                           prodl	equ	0xFF3
  2353                           postinc0	equ	0xFEE
  2354                           postdec1	equ	0xFE5
  2355                           fsr1l	equ	0xFE1
  2356                           indf2	equ	0xFDF
  2357                           postinc2	equ	0xFDE
  2358                           postdec2	equ	0xFDD
  2359                           fsr2h	equ	0xFDA
  2360                           fsr2l	equ	0xFD9
  2361                           
  2362 ;; *************** function _LCDreadDDRam *****************
  2363 ;; Defined at:
  2364 ;;		line 406 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  address         1    wreg     unsigned char 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  address         1   12[COMRAM] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      unsigned char 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2382 ;;Total ram usage:        1 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    8
  2385 ;; This function calls:
  2386 ;;		_LCDcommandWrite
  2387 ;;		_LCDdataRead
  2388 ;; This function is called by:
  2389 ;;		_dataMemoryReading
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text12
  2394  010C7A                     __ptext12:
  2395                           	opt stack 0
  2396  010C7A                     _LCDreadDDRam:
  2397                           	opt stack 20
  2398                           
  2399                           ;incstack = 0
  2400                           ;LCDreadDDRam@address stored from wreg
  2401  010C7A  6E0D               	movwf	LCDreadDDRam@address,c
  2402                           
  2403                           ;LCD_I2C_PCF8574.c: 408: LCDcommandWrite(0x80 | (address & 0b01111111));
  2404  010C7C  500D               	movf	LCDreadDDRam@address,w,c
  2405  010C7E  0B7F               	andlw	127
  2406  010C80  0980               	iorlw	128
  2407  010C82  EC7D  F086         	call	_LCDcommandWrite
  2408                           
  2409                           ;LCD_I2C_PCF8574.c: 409: return LCDdataRead();
  2410  010C86  ECD6  F086         	call	_LCDdataRead	;wreg free
  2411  010C8A  0012               	return	
  2412  010C8C                     __end_of_LCDreadDDRam:
  2413                           	opt stack 0
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           prodh	equ	0xFF4
  2419                           prodl	equ	0xFF3
  2420                           postinc0	equ	0xFEE
  2421                           postdec1	equ	0xFE5
  2422                           fsr1l	equ	0xFE1
  2423                           indf2	equ	0xFDF
  2424                           postinc2	equ	0xFDE
  2425                           postdec2	equ	0xFDD
  2426                           fsr2h	equ	0xFDA
  2427                           fsr2l	equ	0xFD9
  2428                           
  2429 ;; *************** function _LCDreadCGRam *****************
  2430 ;; Defined at:
  2431 ;;		line 412 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  address         1    wreg     unsigned char 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  address         1   12[COMRAM] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      unsigned char 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2446 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2449 ;;Total ram usage:        1 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    8
  2452 ;; This function calls:
  2453 ;;		_LCDcommandWrite
  2454 ;;		_LCDdataRead
  2455 ;; This function is called by:
  2456 ;;		_dataMemoryReading
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text13
  2461  010C8C                     __ptext13:
  2462                           	opt stack 0
  2463  010C8C                     _LCDreadCGRam:
  2464                           	opt stack 20
  2465                           
  2466                           ;incstack = 0
  2467                           ;LCDreadCGRam@address stored from wreg
  2468  010C8C  6E0D               	movwf	LCDreadCGRam@address,c
  2469                           
  2470                           ;LCD_I2C_PCF8574.c: 414: LCDcommandWrite(0x40 | (address & 0b00111111));
  2471  010C8E  500D               	movf	LCDreadCGRam@address,w,c
  2472  010C90  0B3F               	andlw	63
  2473  010C92  0940               	iorlw	64
  2474  010C94  EC7D  F086         	call	_LCDcommandWrite
  2475                           
  2476                           ;LCD_I2C_PCF8574.c: 415: return LCDdataRead();
  2477  010C98  ECD6  F086         	call	_LCDdataRead	;wreg free
  2478  010C9C  0012               	return	
  2479  010C9E                     __end_of_LCDreadCGRam:
  2480                           	opt stack 0
  2481                           tblptru	equ	0xFF8
  2482                           tblptrh	equ	0xFF7
  2483                           tblptrl	equ	0xFF6
  2484                           tablat	equ	0xFF5
  2485                           prodh	equ	0xFF4
  2486                           prodl	equ	0xFF3
  2487                           postinc0	equ	0xFEE
  2488                           postdec1	equ	0xFE5
  2489                           fsr1l	equ	0xFE1
  2490                           indf2	equ	0xFDF
  2491                           postinc2	equ	0xFDE
  2492                           postdec2	equ	0xFDD
  2493                           fsr2h	equ	0xFDA
  2494                           fsr2l	equ	0xFD9
  2495                           
  2496 ;; *************** function _LCDdataRead *****************
  2497 ;; Defined at:
  2498 ;;		line 394 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      unsigned char 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2516 ;;Total ram usage:        0 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    7
  2519 ;; This function calls:
  2520 ;;		_LCDreceive
  2521 ;; This function is called by:
  2522 ;;		_LCDreadDDRam
  2523 ;;		_LCDreadCGRam
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text14
  2528  010DAC                     __ptext14:
  2529                           	opt stack 0
  2530  010DAC                     _LCDdataRead:
  2531                           	opt stack 20
  2532                           
  2533                           ;LCD_I2C_PCF8574.c: 395: return LCDreceive(0b00000001);
  2534                           
  2535                           ;incstack = 0
  2536  010DAC  0E01               	movlw	1
  2537  010DAE  ECBE  F084         	call	_LCDreceive
  2538  010DB2  0012               	return	
  2539  010DB4                     __end_of_LCDdataRead:
  2540                           	opt stack 0
  2541                           tblptru	equ	0xFF8
  2542                           tblptrh	equ	0xFF7
  2543                           tblptrl	equ	0xFF6
  2544                           tablat	equ	0xFF5
  2545                           prodh	equ	0xFF4
  2546                           prodl	equ	0xFF3
  2547                           postinc0	equ	0xFEE
  2548                           postdec1	equ	0xFE5
  2549                           fsr1l	equ	0xFE1
  2550                           indf2	equ	0xFDF
  2551                           postinc2	equ	0xFDE
  2552                           postdec2	equ	0xFDD
  2553                           fsr2h	equ	0xFDA
  2554                           fsr2l	equ	0xFD9
  2555                           
  2556 ;; *************** function _LCDcreateChar *****************
  2557 ;; Defined at:
  2558 ;;		line 360 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  location        1    wreg     unsigned char 
  2561 ;;  charmap         2   12[COMRAM] PTR unsigned char 
  2562 ;;		 -> retarrow(8), cross(8), check(8), duck(8), 
  2563 ;;		 -> heart(8), clock(8), note(8), bell(8), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  location        1   14[COMRAM] unsigned char 
  2566 ;;  i               2   15[COMRAM] int 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;		None               void
  2569 ;; Registers used:
  2570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2577 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2579 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2580 ;;Total ram usage:        5 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    8
  2583 ;; This function calls:
  2584 ;;		_LCDcommandWrite
  2585 ;;		_LCDdataWrite
  2586 ;; This function is called by:
  2587 ;;		_dataMemoryReading
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text15
  2592  010938                     __ptext15:
  2593                           	opt stack 0
  2594  010938                     _LCDcreateChar:
  2595                           	opt stack 20
  2596                           
  2597                           ;incstack = 0
  2598                           ;LCDcreateChar@location stored from wreg
  2599  010938  6E0F               	movwf	LCDcreateChar@location,c
  2600                           
  2601                           ;LCD_I2C_PCF8574.c: 361: location &= 0x7;
  2602  01093A  0E07               	movlw	7
  2603  01093C  160F               	andwf	LCDcreateChar@location,f,c
  2604                           
  2605                           ;LCD_I2C_PCF8574.c: 362: LCDcommandWrite(0x40 | (location << 3));
  2606  01093E  380F               	swapf	LCDcreateChar@location,w,c
  2607  010940  42E8               	rrncf	wreg,f,c
  2608  010942  0BF8               	andlw	248
  2609  010944  0940               	iorlw	64
  2610  010946  EC7D  F086         	call	_LCDcommandWrite
  2611                           
  2612                           ;LCD_I2C_PCF8574.c: 363: for (int i=0; i<8; i++)
  2613  01094A  0E00               	movlw	0
  2614  01094C  6E11               	movwf	LCDcreateChar@i+1,c
  2615  01094E  0E00               	movlw	0
  2616  010950  6E10               	movwf	LCDcreateChar@i,c
  2617  010952                     l2104:
  2618  010952  BE11               	btfsc	LCDcreateChar@i+1,7,c
  2619  010954  D006               	goto	l2108
  2620  010956  5011               	movf	LCDcreateChar@i+1,w,c
  2621  010958  E110               	bnz	l170
  2622  01095A  0E08               	movlw	8
  2623  01095C  5C10               	subwf	LCDcreateChar@i,w,c
  2624  01095E  B0D8               	btfsc	status,0,c
  2625  010960  0012               	return	
  2626  010962                     l2108:
  2627                           
  2628                           ;LCD_I2C_PCF8574.c: 364: LCDdataWrite(charmap[i]);
  2629  010962  5010               	movf	LCDcreateChar@i,w,c
  2630  010964  240D               	addwf	LCDcreateChar@charmap,w,c
  2631  010966  6ED9               	movwf	fsr2l,c
  2632  010968  5011               	movf	LCDcreateChar@i+1,w,c
  2633  01096A  200E               	addwfc	LCDcreateChar@charmap+1,w,c
  2634  01096C  6EDA               	movwf	fsr2h,c
  2635  01096E  50DF               	movf	indf2,w,c
  2636  010970  EC76  F086         	call	_LCDdataWrite
  2637  010974  4A10               	infsnz	LCDcreateChar@i,f,c
  2638  010976  2A11               	incf	LCDcreateChar@i+1,f,c
  2639  010978  D7EC               	goto	l2104
  2640  01097A                     l170:
  2641  01097A  0012               	return		;funcret
  2642  01097C                     __end_of_LCDcreateChar:
  2643                           	opt stack 0
  2644                           tblptru	equ	0xFF8
  2645                           tblptrh	equ	0xFF7
  2646                           tblptrl	equ	0xFF6
  2647                           tablat	equ	0xFF5
  2648                           prodh	equ	0xFF4
  2649                           prodl	equ	0xFF3
  2650                           postinc0	equ	0xFEE
  2651                           wreg	equ	0xFE8
  2652                           postdec1	equ	0xFE5
  2653                           fsr1l	equ	0xFE1
  2654                           indf2	equ	0xFDF
  2655                           postinc2	equ	0xFDE
  2656                           postdec2	equ	0xFDD
  2657                           fsr2h	equ	0xFDA
  2658                           fsr2l	equ	0xFD9
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _cursorControl *****************
  2662 ;; Defined at:
  2663 ;;		line 243 in file "main.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;		None               void
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;Total ram usage:        0 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    9
  2684 ;; This function calls:
  2685 ;;		_DelayMilliseconds
  2686 ;;		_LCD_Write_Str
  2687 ;;		_LCDblinkOff
  2688 ;;		_LCDblinkOn
  2689 ;;		_LCDclear
  2690 ;;		_LCDcursorOff
  2691 ;;		_LCDcursorOn
  2692 ;;		_LCDhome
  2693 ;; This function is called by:
  2694 ;;		_exerciseDisplay
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text16
  2699  010414                     __ptext16:
  2700                           	opt stack 0
  2701  010414                     _cursorControl:
  2702                           	opt stack 20
  2703                           
  2704                           ;main.c: 245: LCDclear();
  2705                           
  2706                           ;incstack = 0
  2707  010414  EC29  F086         	call	_LCDclear	;wreg free
  2708                           
  2709                           ;main.c: 246: LCDcursorOff();
  2710  010418  ECAE  F086         	call	_LCDcursorOff	;wreg free
  2711                           
  2712                           ;main.c: 247: LCD_Write_Str("Cursor Off");
  2713  01041C  0EA1               	movlw	low STR_20
  2714  01041E  6E0D               	movwf	LCD_Write_Str@message,c
  2715  010420  0EFF               	movlw	high STR_20
  2716  010422  6E0E               	movwf	LCD_Write_Str@message+1,c
  2717  010424  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  2718                           
  2719                           ;main.c: 248: DelayMilliseconds(1500);
  2720  010428  0E05               	movlw	5
  2721  01042A  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2722  01042C  0EDC               	movlw	220
  2723  01042E  6E01               	movwf	DelayMilliseconds@delayTime,c
  2724  010430  EC13  F085         	call	_DelayMilliseconds	;wreg free
  2725                           
  2726                           ;main.c: 249: LCDclear();
  2727  010434  EC29  F086         	call	_LCDclear	;wreg free
  2728                           
  2729                           ;main.c: 250: LCDcursorOn();
  2730  010438  EC90  F086         	call	_LCDcursorOn	;wreg free
  2731                           
  2732                           ;main.c: 251: LCD_Write_Str("Cursor On");
  2733  01043C  0EB6               	movlw	low STR_21
  2734  01043E  6E0D               	movwf	LCD_Write_Str@message,c
  2735  010440  0EFF               	movlw	high STR_21
  2736  010442  6E0E               	movwf	LCD_Write_Str@message+1,c
  2737  010444  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  2738                           
  2739                           ;main.c: 252: DelayMilliseconds(1500);
  2740  010448  0E05               	movlw	5
  2741  01044A  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2742  01044C  0EDC               	movlw	220
  2743  01044E  6E01               	movwf	DelayMilliseconds@delayTime,c
  2744  010450  EC13  F085         	call	_DelayMilliseconds	;wreg free
  2745                           
  2746                           ;main.c: 253: LCDclear();
  2747  010454  EC29  F086         	call	_LCDclear	;wreg free
  2748                           
  2749                           ;main.c: 254: LCDblinkOn();
  2750  010458  EC96  F086         	call	_LCDblinkOn	;wreg free
  2751                           
  2752                           ;main.c: 255: LCD_Write_Str("Blink On");
  2753  01045C  0EC0               	movlw	low STR_22
  2754  01045E  6E0D               	movwf	LCD_Write_Str@message,c
  2755  010460  0EFF               	movlw	high STR_22
  2756  010462  6E0E               	movwf	LCD_Write_Str@message+1,c
  2757  010464  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  2758                           
  2759                           ;main.c: 256: DelayMilliseconds(1500);
  2760  010468  0E05               	movlw	5
  2761  01046A  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2762  01046C  0EDC               	movlw	220
  2763  01046E  6E01               	movwf	DelayMilliseconds@delayTime,c
  2764  010470  EC13  F085         	call	_DelayMilliseconds	;wreg free
  2765                           
  2766                           ;main.c: 257: LCDclear();
  2767  010474  EC29  F086         	call	_LCDclear	;wreg free
  2768                           
  2769                           ;main.c: 258: LCDblinkOff();
  2770  010478  ECB4  F086         	call	_LCDblinkOff	;wreg free
  2771                           
  2772                           ;main.c: 259: LCD_Write_Str("Blink Off");
  2773  01047C  0EAC               	movlw	low STR_23
  2774  01047E  6E0D               	movwf	LCD_Write_Str@message,c
  2775  010480  0EFF               	movlw	high STR_23
  2776  010482  6E0E               	movwf	LCD_Write_Str@message+1,c
  2777  010484  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  2778                           
  2779                           ;main.c: 260: DelayMilliseconds(1500);
  2780  010488  0E05               	movlw	5
  2781  01048A  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2782  01048C  0EDC               	movlw	220
  2783  01048E  6E01               	movwf	DelayMilliseconds@delayTime,c
  2784  010490  EC13  F085         	call	_DelayMilliseconds	;wreg free
  2785                           
  2786                           ;main.c: 261: LCDclear();
  2787  010494  EC29  F086         	call	_LCDclear	;wreg free
  2788                           
  2789                           ;main.c: 262: LCD_Write_Str("Cursor Home");
  2790  010498  0E89               	movlw	low STR_24
  2791  01049A  6E0D               	movwf	LCD_Write_Str@message,c
  2792  01049C  0EFF               	movlw	high STR_24
  2793  01049E  6E0E               	movwf	LCD_Write_Str@message+1,c
  2794  0104A0  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  2795                           
  2796                           ;main.c: 263: LCDhome();
  2797  0104A4  EC1F  F086         	call	_LCDhome	;wreg free
  2798                           
  2799                           ;main.c: 264: DelayMilliseconds(1500);
  2800  0104A8  0E05               	movlw	5
  2801  0104AA  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2802  0104AC  0EDC               	movlw	220
  2803  0104AE  6E01               	movwf	DelayMilliseconds@delayTime,c
  2804  0104B0  EC13  F085         	call	_DelayMilliseconds	;wreg free
  2805                           
  2806                           ;main.c: 265: LCDclear();
  2807  0104B4  EC29  F086         	call	_LCDclear	;wreg free
  2808                           
  2809                           ;main.c: 266: LCD_Write_Str("Cursor Home & Blink");
  2810  0104B8  0EC0               	movlw	low STR_25
  2811  0104BA  6E0D               	movwf	LCD_Write_Str@message,c
  2812  0104BC  0EFE               	movlw	high STR_25
  2813  0104BE  6E0E               	movwf	LCD_Write_Str@message+1,c
  2814  0104C0  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  2815                           
  2816                           ;main.c: 267: LCDhome();
  2817  0104C4  EC1F  F086         	call	_LCDhome	;wreg free
  2818                           
  2819                           ;main.c: 268: LCDblinkOn();
  2820  0104C8  EC96  F086         	call	_LCDblinkOn	;wreg free
  2821                           
  2822                           ;main.c: 269: DelayMilliseconds(3000);
  2823  0104CC  0E0B               	movlw	11
  2824  0104CE  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2825  0104D0  0EB8               	movlw	184
  2826  0104D2  6E01               	movwf	DelayMilliseconds@delayTime,c
  2827  0104D4  EC13  F085         	call	_DelayMilliseconds	;wreg free
  2828  0104D8  0012               	return		;funcret
  2829  0104DA                     __end_of_cursorControl:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           prodh	equ	0xFF4
  2836                           prodl	equ	0xFF3
  2837                           postinc0	equ	0xFEE
  2838                           wreg	equ	0xFE8
  2839                           postdec1	equ	0xFE5
  2840                           fsr1l	equ	0xFE1
  2841                           indf2	equ	0xFDF
  2842                           postinc2	equ	0xFDE
  2843                           postdec2	equ	0xFDD
  2844                           fsr2h	equ	0xFDA
  2845                           fsr2l	equ	0xFD9
  2846                           status	equ	0xFD8
  2847                           
  2848 ;; *************** function _LCDhome *****************
  2849 ;; Defined at:
  2850 ;;		line 265 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;		None               void
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    8
  2871 ;; This function calls:
  2872 ;;		_DelayMicroseconds
  2873 ;;		_LCDcommandWrite
  2874 ;; This function is called by:
  2875 ;;		_displayOnOff
  2876 ;;		_cursorControl
  2877 ;;		_dataMemoryReading
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text17
  2882  010C3E                     __ptext17:
  2883                           	opt stack 0
  2884  010C3E                     _LCDhome:
  2885                           	opt stack 20
  2886                           
  2887                           ;LCD_I2C_PCF8574.c: 266: LCDcommandWrite(0x02);
  2888                           
  2889                           ;incstack = 0
  2890  010C3E  0E02               	movlw	2
  2891  010C40  EC7D  F086         	call	_LCDcommandWrite
  2892                           
  2893                           ;LCD_I2C_PCF8574.c: 270: DelayMicroseconds(30000);
  2894  010C44  0E75               	movlw	117
  2895  010C46  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  2896  010C48  0E30               	movlw	48
  2897  010C4A  6E01               	movwf	DelayMicroseconds@delayTime,c
  2898  010C4C  EC57  F085         	call	_DelayMicroseconds	;wreg free
  2899  010C50  0012               	return		;funcret
  2900  010C52                     __end_of_LCDhome:
  2901                           	opt stack 0
  2902                           tblptru	equ	0xFF8
  2903                           tblptrh	equ	0xFF7
  2904                           tblptrl	equ	0xFF6
  2905                           tablat	equ	0xFF5
  2906                           prodh	equ	0xFF4
  2907                           prodl	equ	0xFF3
  2908                           postinc0	equ	0xFEE
  2909                           wreg	equ	0xFE8
  2910                           postdec1	equ	0xFE5
  2911                           fsr1l	equ	0xFE1
  2912                           indf2	equ	0xFDF
  2913                           postinc2	equ	0xFDE
  2914                           postdec2	equ	0xFDD
  2915                           fsr2h	equ	0xFDA
  2916                           fsr2l	equ	0xFD9
  2917                           status	equ	0xFD8
  2918                           
  2919 ;; *************** function _controlMemoryReading *****************
  2920 ;; Defined at:
  2921 ;;		line 292 in file "main.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  x               1   24[COMRAM] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;		None               void
  2928 ;; Registers used:
  2929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2939 ;;Total ram usage:        3 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    9
  2942 ;; This function calls:
  2943 ;;		_DelayMilliseconds
  2944 ;;		_LCD_Write_Char
  2945 ;;		_LCD_Write_Str
  2946 ;;		_LCDaddressCounter
  2947 ;;		_LCDblinkOff
  2948 ;;		_LCDblinkOn
  2949 ;;		_LCDbusy
  2950 ;;		_LCDclear
  2951 ;;		_LCDcursorOff
  2952 ;;		_LCDcursorOn
  2953 ;;		_LCDsetCursor
  2954 ;; This function is called by:
  2955 ;;		_exerciseDisplay
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text18
  2960  010140                     __ptext18:
  2961                           	opt stack 0
  2962  010140                     _controlMemoryReading:
  2963                           	opt stack 20
  2964                           
  2965                           ;main.c: 294: unsigned char x = 0;
  2966                           
  2967                           ;incstack = 0
  2968  010140  0E00               	movlw	0
  2969  010142  6E19               	movwf	controlMemoryReading@x,c
  2970                           
  2971                           ;main.c: 296: LCDclear();
  2972  010144  EC29  F086         	call	_LCDclear	;wreg free
  2973                           
  2974                           ;main.c: 297: LCDcursorOn();
  2975  010148  EC90  F086         	call	_LCDcursorOn	;wreg free
  2976                           
  2977                           ;main.c: 298: LCDblinkOn();
  2978  01014C  EC96  F086         	call	_LCDblinkOn	;wreg free
  2979                           
  2980                           ;main.c: 299: LCDsetCursor(1,1);
  2981  010150  0E01               	movlw	1
  2982  010152  6E0D               	movwf	LCDsetCursor@row,c
  2983  010154  0E01               	movlw	1
  2984  010156  ECDC  F084         	call	_LCDsetCursor
  2985                           
  2986                           ;main.c: 300: DelayMilliseconds(2000);
  2987  01015A  0E07               	movlw	7
  2988  01015C  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2989  01015E  0ED0               	movlw	208
  2990  010160  6E01               	movwf	DelayMilliseconds@delayTime,c
  2991  010162  EC13  F085         	call	_DelayMilliseconds	;wreg free
  2992                           
  2993                           ;main.c: 301: x = LCDaddressCounter();
  2994  010166  ECDE  F086         	call	_LCDaddressCounter	;wreg free
  2995  01016A  6E19               	movwf	controlMemoryReading@x,c
  2996                           
  2997                           ;main.c: 302: LCDcursorOff();
  2998  01016C  ECAE  F086         	call	_LCDcursorOff	;wreg free
  2999                           
  3000                           ;main.c: 303: LCDblinkOff();
  3001  010170  ECB4  F086         	call	_LCDblinkOff	;wreg free
  3002                           
  3003                           ;main.c: 304: LCDsetCursor(0,2);
  3004  010174  0E02               	movlw	2
  3005  010176  6E0D               	movwf	LCDsetCursor@row,c
  3006  010178  0E00               	movlw	0
  3007  01017A  ECDC  F084         	call	_LCDsetCursor
  3008                           
  3009                           ;main.c: 305: LCD_Write_Str("Addr Counter : ");
  3010  01017E  0E0F               	movlw	low STR_30
  3011  010180  6E0D               	movwf	LCD_Write_Str@message,c
  3012  010182  0EFF               	movlw	high STR_30
  3013  010184  6E0E               	movwf	LCD_Write_Str@message+1,c
  3014  010186  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  3015                           
  3016                           ;main.c: 306: LCDsetCursor(15,2);
  3017  01018A  0E02               	movlw	2
  3018  01018C  6E0D               	movwf	LCDsetCursor@row,c
  3019  01018E  0E0F               	movlw	15
  3020  010190  ECDC  F084         	call	_LCDsetCursor
  3021                           
  3022                           ;main.c: 307: LCD_Write_Str("0x");
  3023  010194  0EFB               	movlw	low STR_31
  3024  010196  6E0D               	movwf	LCD_Write_Str@message,c
  3025  010198  0EFF               	movlw	high STR_31
  3026  01019A  6E0E               	movwf	LCD_Write_Str@message+1,c
  3027  01019C  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  3028                           
  3029                           ;main.c: 308: LCDsetCursor(17,2);
  3030  0101A0  0E02               	movlw	2
  3031  0101A2  6E0D               	movwf	LCDsetCursor@row,c
  3032  0101A4  0E11               	movlw	17
  3033  0101A6  ECDC  F084         	call	_LCDsetCursor
  3034                           
  3035                           ;main.c: 309: LCD_Write_Char((char) hex[(x>>4)& 0x0f]);
  3036  0101AA  3819               	swapf	controlMemoryReading@x,w,c
  3037  0101AC  0B0F               	andlw	15
  3038  0101AE  0B0F               	andlw	15
  3039  0101B0  6E17               	movwf	??_controlMemoryReading& (0+255),c
  3040  0101B2  6A18               	clrf	(??_controlMemoryReading+1)& (0+255),c
  3041  0101B4  0E32               	movlw	low _hex
  3042  0101B6  2417               	addwf	??_controlMemoryReading,w,c
  3043  0101B8  6ED9               	movwf	fsr2l,c
  3044  0101BA  0E00               	movlw	high _hex
  3045  0101BC  2018               	addwfc	??_controlMemoryReading+1,w,c
  3046  0101BE  6EDA               	movwf	fsr2h,c
  3047  0101C0  50DF               	movf	indf2,w,c
  3048  0101C2  ECD1  F086         	call	_LCD_Write_Char
  3049                           
  3050                           ;main.c: 310: LCDsetCursor(18,2);
  3051  0101C6  0E02               	movlw	2
  3052  0101C8  6E0D               	movwf	LCDsetCursor@row,c
  3053  0101CA  0E12               	movlw	18
  3054  0101CC  ECDC  F084         	call	_LCDsetCursor
  3055                           
  3056                           ;main.c: 311: LCD_Write_Char((char) hex[x & 0x0f]);
  3057  0101D0  5019               	movf	controlMemoryReading@x,w,c
  3058  0101D2  0B0F               	andlw	15
  3059  0101D4  6E17               	movwf	??_controlMemoryReading& (0+255),c
  3060  0101D6  6A18               	clrf	(??_controlMemoryReading+1)& (0+255),c
  3061  0101D8  0E32               	movlw	low _hex
  3062  0101DA  2417               	addwf	??_controlMemoryReading,w,c
  3063  0101DC  6ED9               	movwf	fsr2l,c
  3064  0101DE  0E00               	movlw	high _hex
  3065  0101E0  2018               	addwfc	??_controlMemoryReading+1,w,c
  3066  0101E2  6EDA               	movwf	fsr2h,c
  3067  0101E4  50DF               	movf	indf2,w,c
  3068  0101E6  ECD1  F086         	call	_LCD_Write_Char
  3069                           
  3070                           ;main.c: 314: x = LCDbusy();
  3071  0101EA  ECDA  F086         	call	_LCDbusy	;wreg free
  3072  0101EE  6E19               	movwf	controlMemoryReading@x,c
  3073                           
  3074                           ;main.c: 315: LCDsetCursor(0,3);
  3075  0101F0  0E03               	movlw	3
  3076  0101F2  6E0D               	movwf	LCDsetCursor@row,c
  3077  0101F4  0E00               	movlw	0
  3078  0101F6  ECDC  F084         	call	_LCDsetCursor
  3079                           
  3080                           ;main.c: 316: LCD_Write_Str("Busy Flag : ");
  3081  0101FA  0E49               	movlw	low STR_32
  3082  0101FC  6E0D               	movwf	LCD_Write_Str@message,c
  3083  0101FE  0EFF               	movlw	high STR_32
  3084  010200  6E0E               	movwf	LCD_Write_Str@message+1,c
  3085  010202  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  3086                           
  3087                           ;main.c: 317: LCDsetCursor(12,3);
  3088  010206  0E03               	movlw	3
  3089  010208  6E0D               	movwf	LCDsetCursor@row,c
  3090  01020A  0E0C               	movlw	12
  3091  01020C  ECDC  F084         	call	_LCDsetCursor
  3092                           
  3093                           ;main.c: 318: LCD_Write_Str("0x");
  3094  010210  0EFB               	movlw	low STR_31
  3095  010212  6E0D               	movwf	LCD_Write_Str@message,c
  3096  010214  0EFF               	movlw	high STR_31
  3097  010216  6E0E               	movwf	LCD_Write_Str@message+1,c
  3098  010218  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  3099                           
  3100                           ;main.c: 319: LCDsetCursor(14,3);
  3101  01021C  0E03               	movlw	3
  3102  01021E  6E0D               	movwf	LCDsetCursor@row,c
  3103  010220  0E0E               	movlw	14
  3104  010222  ECDC  F084         	call	_LCDsetCursor
  3105                           
  3106                           ;main.c: 320: LCD_Write_Char((char) hex[(x>>4)& 0x0f]);
  3107  010226  3819               	swapf	controlMemoryReading@x,w,c
  3108  010228  0B0F               	andlw	15
  3109  01022A  0B0F               	andlw	15
  3110  01022C  6E17               	movwf	??_controlMemoryReading& (0+255),c
  3111  01022E  6A18               	clrf	(??_controlMemoryReading+1)& (0+255),c
  3112  010230  0E32               	movlw	low _hex
  3113  010232  2417               	addwf	??_controlMemoryReading,w,c
  3114  010234  6ED9               	movwf	fsr2l,c
  3115  010236  0E00               	movlw	high _hex
  3116  010238  2018               	addwfc	??_controlMemoryReading+1,w,c
  3117  01023A  6EDA               	movwf	fsr2h,c
  3118  01023C  50DF               	movf	indf2,w,c
  3119  01023E  ECD1  F086         	call	_LCD_Write_Char
  3120                           
  3121                           ;main.c: 321: LCDsetCursor(15,3);
  3122  010242  0E03               	movlw	3
  3123  010244  6E0D               	movwf	LCDsetCursor@row,c
  3124  010246  0E0F               	movlw	15
  3125  010248  ECDC  F084         	call	_LCDsetCursor
  3126                           
  3127                           ;main.c: 322: LCD_Write_Char((char) hex[x & 0x0f]);
  3128  01024C  5019               	movf	controlMemoryReading@x,w,c
  3129  01024E  0B0F               	andlw	15
  3130  010250  6E17               	movwf	??_controlMemoryReading& (0+255),c
  3131  010252  6A18               	clrf	(??_controlMemoryReading+1)& (0+255),c
  3132  010254  0E32               	movlw	low _hex
  3133  010256  2417               	addwf	??_controlMemoryReading,w,c
  3134  010258  6ED9               	movwf	fsr2l,c
  3135  01025A  0E00               	movlw	high _hex
  3136  01025C  2018               	addwfc	??_controlMemoryReading+1,w,c
  3137  01025E  6EDA               	movwf	fsr2h,c
  3138  010260  50DF               	movf	indf2,w,c
  3139  010262  ECD1  F086         	call	_LCD_Write_Char
  3140                           
  3141                           ;main.c: 323: DelayMilliseconds(5000);
  3142  010266  0E13               	movlw	19
  3143  010268  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  3144  01026A  0E88               	movlw	136
  3145  01026C  6E01               	movwf	DelayMilliseconds@delayTime,c
  3146  01026E  EC13  F085         	call	_DelayMilliseconds	;wreg free
  3147  010272  0012               	return		;funcret
  3148  010274                     __end_of_controlMemoryReading:
  3149                           	opt stack 0
  3150                           tblptru	equ	0xFF8
  3151                           tblptrh	equ	0xFF7
  3152                           tblptrl	equ	0xFF6
  3153                           tablat	equ	0xFF5
  3154                           prodh	equ	0xFF4
  3155                           prodl	equ	0xFF3
  3156                           postinc0	equ	0xFEE
  3157                           wreg	equ	0xFE8
  3158                           postdec1	equ	0xFE5
  3159                           fsr1l	equ	0xFE1
  3160                           indf2	equ	0xFDF
  3161                           postinc2	equ	0xFDE
  3162                           postdec2	equ	0xFDD
  3163                           fsr2h	equ	0xFDA
  3164                           fsr2l	equ	0xFD9
  3165                           status	equ	0xFD8
  3166                           
  3167 ;; *************** function _LCDcursorOn *****************
  3168 ;; Defined at:
  3169 ;;		line 301 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;		None               void
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3187 ;;Total ram usage:        0 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    8
  3190 ;; This function calls:
  3191 ;;		_LCDcommandWrite
  3192 ;; This function is called by:
  3193 ;;		_cursorControl
  3194 ;;		_controlMemoryReading
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text19
  3199  010D20                     __ptext19:
  3200                           	opt stack 0
  3201  010D20                     _LCDcursorOn:
  3202                           	opt stack 20
  3203                           
  3204                           ;LCD_I2C_PCF8574.c: 302: _displayfunction |= 0x02;
  3205                           
  3206                           ;incstack = 0
  3207  010D20  8255               	bsf	__displayfunction,1,c
  3208                           
  3209                           ;LCD_I2C_PCF8574.c: 303: LCDcommandWrite(0x08 | _displayfunction);
  3210  010D22  5055               	movf	__displayfunction,w,c
  3211  010D24  0908               	iorlw	8
  3212  010D26  EC7D  F086         	call	_LCDcommandWrite
  3213  010D2A  0012               	return		;funcret
  3214  010D2C                     __end_of_LCDcursorOn:
  3215                           	opt stack 0
  3216                           tblptru	equ	0xFF8
  3217                           tblptrh	equ	0xFF7
  3218                           tblptrl	equ	0xFF6
  3219                           tablat	equ	0xFF5
  3220                           prodh	equ	0xFF4
  3221                           prodl	equ	0xFF3
  3222                           postinc0	equ	0xFEE
  3223                           wreg	equ	0xFE8
  3224                           postdec1	equ	0xFE5
  3225                           fsr1l	equ	0xFE1
  3226                           indf2	equ	0xFDF
  3227                           postinc2	equ	0xFDE
  3228                           postdec2	equ	0xFDD
  3229                           fsr2h	equ	0xFDA
  3230                           fsr2l	equ	0xFD9
  3231                           status	equ	0xFD8
  3232                           
  3233 ;; *************** function _LCDbusy *****************
  3234 ;; Defined at:
  3235 ;;		line 398 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;		None
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      unsigned char 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;Total ram usage:        0 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    8
  3256 ;; This function calls:
  3257 ;;		_LCDcommandRead
  3258 ;; This function is called by:
  3259 ;;		_controlMemoryReading
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text20
  3264  010DB4                     __ptext20:
  3265                           	opt stack 0
  3266  010DB4                     _LCDbusy:
  3267                           	opt stack 20
  3268                           
  3269                           ;LCD_I2C_PCF8574.c: 399: return LCDcommandRead() & 0b10000000;
  3270                           
  3271                           ;incstack = 0
  3272  010DB4  ECE2  F086         	call	_LCDcommandRead	;wreg free
  3273  010DB8  0B80               	andlw	128
  3274  010DBA  0012               	return	
  3275  010DBC                     __end_of_LCDbusy:
  3276                           	opt stack 0
  3277                           tblptru	equ	0xFF8
  3278                           tblptrh	equ	0xFF7
  3279                           tblptrl	equ	0xFF6
  3280                           tablat	equ	0xFF5
  3281                           prodh	equ	0xFF4
  3282                           prodl	equ	0xFF3
  3283                           postinc0	equ	0xFEE
  3284                           wreg	equ	0xFE8
  3285                           postdec1	equ	0xFE5
  3286                           fsr1l	equ	0xFE1
  3287                           indf2	equ	0xFDF
  3288                           postinc2	equ	0xFDE
  3289                           postdec2	equ	0xFDD
  3290                           fsr2h	equ	0xFDA
  3291                           fsr2l	equ	0xFD9
  3292                           status	equ	0xFD8
  3293                           
  3294 ;; *************** function _LCDblinkOn *****************
  3295 ;; Defined at:
  3296 ;;		line 312 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;		None               void
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;Total ram usage:        0 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    8
  3317 ;; This function calls:
  3318 ;;		_LCDcommandWrite
  3319 ;; This function is called by:
  3320 ;;		_cursorControl
  3321 ;;		_controlMemoryReading
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text21
  3326  010D2C                     __ptext21:
  3327                           	opt stack 0
  3328  010D2C                     _LCDblinkOn:
  3329                           	opt stack 20
  3330                           
  3331                           ;LCD_I2C_PCF8574.c: 313: _displayfunction |= 0x01;
  3332                           
  3333                           ;incstack = 0
  3334  010D2C  8055               	bsf	__displayfunction,0,c
  3335                           
  3336                           ;LCD_I2C_PCF8574.c: 314: LCDcommandWrite(0x08 | _displayfunction);
  3337  010D2E  5055               	movf	__displayfunction,w,c
  3338  010D30  0908               	iorlw	8
  3339  010D32  EC7D  F086         	call	_LCDcommandWrite
  3340  010D36  0012               	return		;funcret
  3341  010D38                     __end_of_LCDblinkOn:
  3342                           	opt stack 0
  3343                           tblptru	equ	0xFF8
  3344                           tblptrh	equ	0xFF7
  3345                           tblptrl	equ	0xFF6
  3346                           tablat	equ	0xFF5
  3347                           prodh	equ	0xFF4
  3348                           prodl	equ	0xFF3
  3349                           postinc0	equ	0xFEE
  3350                           wreg	equ	0xFE8
  3351                           postdec1	equ	0xFE5
  3352                           fsr1l	equ	0xFE1
  3353                           indf2	equ	0xFDF
  3354                           postinc2	equ	0xFDE
  3355                           postdec2	equ	0xFDD
  3356                           fsr2h	equ	0xFDA
  3357                           fsr2l	equ	0xFD9
  3358                           status	equ	0xFD8
  3359                           
  3360 ;; *************** function _LCDaddressCounter *****************
  3361 ;; Defined at:
  3362 ;;		line 402 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      unsigned char 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;Total ram usage:        0 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    8
  3383 ;; This function calls:
  3384 ;;		_LCDcommandRead
  3385 ;; This function is called by:
  3386 ;;		_controlMemoryReading
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text22
  3391  010DBC                     __ptext22:
  3392                           	opt stack 0
  3393  010DBC                     _LCDaddressCounter:
  3394                           	opt stack 20
  3395                           
  3396                           ;LCD_I2C_PCF8574.c: 403: return LCDcommandRead() & 0b01111111;
  3397                           
  3398                           ;incstack = 0
  3399  010DBC  ECE2  F086         	call	_LCDcommandRead	;wreg free
  3400  010DC0  0B7F               	andlw	127
  3401  010DC2  0012               	return	
  3402  010DC4                     __end_of_LCDaddressCounter:
  3403                           	opt stack 0
  3404                           tblptru	equ	0xFF8
  3405                           tblptrh	equ	0xFF7
  3406                           tblptrl	equ	0xFF6
  3407                           tablat	equ	0xFF5
  3408                           prodh	equ	0xFF4
  3409                           prodl	equ	0xFF3
  3410                           postinc0	equ	0xFEE
  3411                           wreg	equ	0xFE8
  3412                           postdec1	equ	0xFE5
  3413                           fsr1l	equ	0xFE1
  3414                           indf2	equ	0xFDF
  3415                           postinc2	equ	0xFDE
  3416                           postdec2	equ	0xFDD
  3417                           fsr2h	equ	0xFDA
  3418                           fsr2l	equ	0xFD9
  3419                           status	equ	0xFD8
  3420                           
  3421 ;; *************** function _LCDcommandRead *****************
  3422 ;; Defined at:
  3423 ;;		line 386 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      unsigned char 
  3430 ;; Registers used:
  3431 ;;		wreg, status,2, status,0, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3441 ;;Total ram usage:        0 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    7
  3444 ;; This function calls:
  3445 ;;		_LCDreceive
  3446 ;; This function is called by:
  3447 ;;		_LCDbusy
  3448 ;;		_LCDaddressCounter
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text23
  3453  010DC4                     __ptext23:
  3454                           	opt stack 0
  3455  010DC4                     _LCDcommandRead:
  3456                           	opt stack 20
  3457                           
  3458                           ;LCD_I2C_PCF8574.c: 387: return LCDreceive(0b00000001 & ~0b00000001);
  3459                           
  3460                           ;incstack = 0
  3461  010DC4  0E00               	movlw	0
  3462  010DC6  ECBE  F084         	call	_LCDreceive
  3463  010DCA  0012               	return	
  3464  010DCC                     __end_of_LCDcommandRead:
  3465                           	opt stack 0
  3466                           tblptru	equ	0xFF8
  3467                           tblptrh	equ	0xFF7
  3468                           tblptrl	equ	0xFF6
  3469                           tablat	equ	0xFF5
  3470                           prodh	equ	0xFF4
  3471                           prodl	equ	0xFF3
  3472                           postinc0	equ	0xFEE
  3473                           wreg	equ	0xFE8
  3474                           postdec1	equ	0xFE5
  3475                           fsr1l	equ	0xFE1
  3476                           indf2	equ	0xFDF
  3477                           postinc2	equ	0xFDE
  3478                           postdec2	equ	0xFDD
  3479                           fsr2h	equ	0xFDA
  3480                           fsr2l	equ	0xFD9
  3481                           status	equ	0xFD8
  3482                           
  3483 ;; *************** function _LCDreceive *****************
  3484 ;; Defined at:
  3485 ;;		line 436 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  RsMode          1    wreg     unsigned char 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  RsMode          1   11[COMRAM] unsigned char 
  3490 ;;  lownib          1   10[COMRAM] unsigned char 
  3491 ;;  highnib         1    9[COMRAM] unsigned char 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      unsigned char 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3502 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3504 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3505 ;;Total ram usage:        4 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    6
  3508 ;; This function calls:
  3509 ;;		_LCDread4bits
  3510 ;;		_LCDwritePCF8574
  3511 ;; This function is called by:
  3512 ;;		_LCDcommandRead
  3513 ;;		_LCDdataRead
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text24
  3518  01097C                     __ptext24:
  3519                           	opt stack 0
  3520  01097C                     _LCDreceive:
  3521                           	opt stack 20
  3522                           
  3523                           ;incstack = 0
  3524                           ;LCDreceive@RsMode stored from wreg
  3525  01097C  6E0C               	movwf	LCDreceive@RsMode,c
  3526                           
  3527                           ;LCD_I2C_PCF8574.c: 437: unsigned char highnib;
  3528                           ;LCD_I2C_PCF8574.c: 438: unsigned char lownib;
  3529                           ;LCD_I2C_PCF8574.c: 440: LCDwritePCF8574(0b11110000 | (0b00000100 & ~0b00000100) | RsMod
      +                          e);
  3530  01097E  500C               	movf	LCDreceive@RsMode,w,c
  3531  010980  09F0               	iorlw	240
  3532  010982  EC58  F086         	call	_LCDwritePCF8574
  3533                           
  3534                           ;LCD_I2C_PCF8574.c: 441: highnib = LCDread4bits(0b11110000 | 0b00000100 | RsMode);
  3535  010986  500C               	movf	LCDreceive@RsMode,w,c
  3536  010988  09F4               	iorlw	244
  3537  01098A  ECEC  F085         	call	_LCDread4bits
  3538  01098E  6E0A               	movwf	LCDreceive@highnib,c
  3539                           
  3540                           ;LCD_I2C_PCF8574.c: 442: lownib = LCDread4bits(0b11110000 | 0b00000100 | RsMode);
  3541  010990  500C               	movf	LCDreceive@RsMode,w,c
  3542  010992  09F4               	iorlw	244
  3543  010994  ECEC  F085         	call	_LCDread4bits
  3544  010998  6E0B               	movwf	LCDreceive@lownib,c
  3545                           
  3546                           ;LCD_I2C_PCF8574.c: 443: LCDwritePCF8574((0b11110000 & ~0b11110000) | 0b00000100 | RsMod
      +                          e);
  3547  01099A  500C               	movf	LCDreceive@RsMode,w,c
  3548  01099C  0904               	iorlw	4
  3549  01099E  EC58  F086         	call	_LCDwritePCF8574
  3550                           
  3551                           ;LCD_I2C_PCF8574.c: 444: return (unsigned char) ((highnib & 0xF0) | ((lownib & 0xF0) >> 
      +                          4));
  3552  0109A2  C00B  F009         	movff	LCDreceive@lownib,??_LCDreceive
  3553  0109A6  3A09               	swapf	??_LCDreceive,f,c
  3554  0109A8  0E0F               	movlw	15
  3555  0109AA  1609               	andwf	??_LCDreceive,f,c
  3556  0109AC  0E0F               	movlw	15
  3557  0109AE  1609               	andwf	??_LCDreceive,f,c
  3558  0109B0  500A               	movf	LCDreceive@highnib,w,c
  3559  0109B2  0BF0               	andlw	240
  3560  0109B4  1009               	iorwf	??_LCDreceive,w,c
  3561  0109B6  0012               	return	
  3562  0109B8                     __end_of_LCDreceive:
  3563                           	opt stack 0
  3564                           tblptru	equ	0xFF8
  3565                           tblptrh	equ	0xFF7
  3566                           tblptrl	equ	0xFF6
  3567                           tablat	equ	0xFF5
  3568                           prodh	equ	0xFF4
  3569                           prodl	equ	0xFF3
  3570                           postinc0	equ	0xFEE
  3571                           wreg	equ	0xFE8
  3572                           postdec1	equ	0xFE5
  3573                           fsr1l	equ	0xFE1
  3574                           indf2	equ	0xFDF
  3575                           postinc2	equ	0xFDE
  3576                           postdec2	equ	0xFDD
  3577                           fsr2h	equ	0xFDA
  3578                           fsr2l	equ	0xFD9
  3579                           status	equ	0xFD8
  3580                           
  3581 ;; *************** function _LCDread4bits *****************
  3582 ;; Defined at:
  3583 ;;		line 455 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  RsEnMode        1    wreg     unsigned char 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  RsEnMode        1    7[COMRAM] unsigned char 
  3588 ;;  b               1    6[COMRAM] unsigned char 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      unsigned char 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3601 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3602 ;;Total ram usage:        2 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    5
  3605 ;; This function calls:
  3606 ;;		_LCDpulseEnableNeg
  3607 ;;		_LCDpulseEnablePos
  3608 ;;		_LCDreadPCF8574
  3609 ;; This function is called by:
  3610 ;;		_LCDreceive
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text25
  3615  010BD8                     __ptext25:
  3616                           	opt stack 0
  3617  010BD8                     _LCDread4bits:
  3618                           	opt stack 20
  3619                           
  3620                           ;incstack = 0
  3621                           ;LCDread4bits@RsEnMode stored from wreg
  3622  010BD8  6E08               	movwf	LCDread4bits@RsEnMode,c
  3623                           
  3624                           ;LCD_I2C_PCF8574.c: 456: unsigned char b;
  3625                           ;LCD_I2C_PCF8574.c: 457: LCDpulseEnablePos(RsEnMode | 0b00000010);
  3626  010BDA  5008               	movf	LCDread4bits@RsEnMode,w,c
  3627  010BDC  0902               	iorlw	2
  3628  010BDE  EC2B  F085         	call	_LCDpulseEnablePos
  3629                           
  3630                           ;LCD_I2C_PCF8574.c: 458: b = LCDreadPCF8574();
  3631  010BE2  ECE6  F086         	call	_LCDreadPCF8574	;wreg free
  3632  010BE6  6E07               	movwf	LCDread4bits@b,c
  3633                           
  3634                           ;LCD_I2C_PCF8574.c: 459: LCDpulseEnableNeg(RsEnMode | 0b00000010);
  3635  010BE8  5008               	movf	LCDread4bits@RsEnMode,w,c
  3636  010BEA  0902               	iorlw	2
  3637  010BEC  EC41  F085         	call	_LCDpulseEnableNeg
  3638                           
  3639                           ;LCD_I2C_PCF8574.c: 460: return b;
  3640  010BF0  5007               	movf	LCDread4bits@b,w,c
  3641  010BF2  0012               	return	
  3642  010BF4                     __end_of_LCDread4bits:
  3643                           	opt stack 0
  3644                           tblptru	equ	0xFF8
  3645                           tblptrh	equ	0xFF7
  3646                           tblptrl	equ	0xFF6
  3647                           tablat	equ	0xFF5
  3648                           prodh	equ	0xFF4
  3649                           prodl	equ	0xFF3
  3650                           postinc0	equ	0xFEE
  3651                           wreg	equ	0xFE8
  3652                           postdec1	equ	0xFE5
  3653                           fsr1l	equ	0xFE1
  3654                           indf2	equ	0xFDF
  3655                           postinc2	equ	0xFDE
  3656                           postdec2	equ	0xFDD
  3657                           fsr2h	equ	0xFDA
  3658                           fsr2l	equ	0xFD9
  3659                           status	equ	0xFD8
  3660                           
  3661 ;; *************** function _LCDpulseEnablePos *****************
  3662 ;; Defined at:
  3663 ;;		line 471 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  _data           1    wreg     unsigned char 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  _data           1    5[COMRAM] unsigned char 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;		None               void
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0, cstack
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3681 ;;Total ram usage:        1 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    4
  3684 ;; This function calls:
  3685 ;;		_DelayMicroseconds
  3686 ;;		_LCDwritePCF8574
  3687 ;; This function is called by:
  3688 ;;		_LCDread4bits
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text26
  3693  010A56                     __ptext26:
  3694                           	opt stack 0
  3695  010A56                     _LCDpulseEnablePos:
  3696                           	opt stack 20
  3697                           
  3698                           ;incstack = 0
  3699                           ;LCDpulseEnablePos@_data stored from wreg
  3700  010A56  6E06               	movwf	LCDpulseEnablePos@_data,c
  3701                           
  3702                           ;LCD_I2C_PCF8574.c: 472: LCDwritePCF8574(_data & ~0b00000100);
  3703  010A58  5006               	movf	LCDpulseEnablePos@_data,w,c
  3704  010A5A  0BFB               	andlw	251
  3705  010A5C  EC58  F086         	call	_LCDwritePCF8574
  3706                           
  3707                           ;LCD_I2C_PCF8574.c: 473: DelayMicroseconds(1);
  3708  010A60  0E00               	movlw	0
  3709  010A62  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  3710  010A64  0E01               	movlw	1
  3711  010A66  6E01               	movwf	DelayMicroseconds@delayTime,c
  3712  010A68  EC57  F085         	call	_DelayMicroseconds	;wreg free
  3713                           
  3714                           ;LCD_I2C_PCF8574.c: 475: LCDwritePCF8574(_data | 0b00000100);
  3715  010A6C  5006               	movf	LCDpulseEnablePos@_data,w,c
  3716  010A6E  0904               	iorlw	4
  3717  010A70  EC58  F086         	call	_LCDwritePCF8574
  3718                           
  3719                           ;LCD_I2C_PCF8574.c: 476: DelayMicroseconds(50);
  3720  010A74  0E00               	movlw	0
  3721  010A76  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  3722  010A78  0E32               	movlw	50
  3723  010A7A  6E01               	movwf	DelayMicroseconds@delayTime,c
  3724  010A7C  EC57  F085         	call	_DelayMicroseconds	;wreg free
  3725  010A80  0012               	return		;funcret
  3726  010A82                     __end_of_LCDpulseEnablePos:
  3727                           	opt stack 0
  3728                           tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           prodh	equ	0xFF4
  3733                           prodl	equ	0xFF3
  3734                           postinc0	equ	0xFEE
  3735                           wreg	equ	0xFE8
  3736                           postdec1	equ	0xFE5
  3737                           fsr1l	equ	0xFE1
  3738                           indf2	equ	0xFDF
  3739                           postinc2	equ	0xFDE
  3740                           postdec2	equ	0xFDD
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           status	equ	0xFD8
  3744                           
  3745 ;; *************** function _backLightControl *****************
  3746 ;; Defined at:
  3747 ;;		line 191 in file "main.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  x               1   22[COMRAM] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;		None               void
  3754 ;; Registers used:
  3755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3765 ;;Total ram usage:        1 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    9
  3768 ;; This function calls:
  3769 ;;		_DelayMilliseconds
  3770 ;;		_LCD_Write_Str
  3771 ;;		_LCDbacklight
  3772 ;;		_LCDclear
  3773 ;;		_LCDcursorOff
  3774 ;;		_LCDnoBacklight
  3775 ;;		_LCDsetCursor
  3776 ;; This function is called by:
  3777 ;;		_exerciseDisplay
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text27
  3782  01034A                     __ptext27:
  3783                           	opt stack 0
  3784  01034A                     _backLightControl:
  3785                           	opt stack 20
  3786                           
  3787                           ;main.c: 193: LCDclear();
  3788                           
  3789                           ;incstack = 0
  3790  01034A  EC29  F086         	call	_LCDclear	;wreg free
  3791                           
  3792                           ;main.c: 194: LCDcursorOff();
  3793  01034E  ECAE  F086         	call	_LCDcursorOff	;wreg free
  3794                           
  3795                           ;main.c: 195: LCDbacklight();
  3796  010352  ECA2  F086         	call	_LCDbacklight	;wreg free
  3797                           
  3798                           ;main.c: 196: LCD_Write_Str("Backlight On");
  3799  010356  0E63               	movlw	low STR_9
  3800  010358  6E0D               	movwf	LCD_Write_Str@message,c
  3801  01035A  0EFF               	movlw	high STR_9
  3802  01035C  6E0E               	movwf	LCD_Write_Str@message+1,c
  3803  01035E  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  3804                           
  3805                           ;main.c: 197: DelayMilliseconds(1000);
  3806  010362  0E03               	movlw	3
  3807  010364  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  3808  010366  0EE8               	movlw	232
  3809  010368  6E01               	movwf	DelayMilliseconds@delayTime,c
  3810  01036A  EC13  F085         	call	_DelayMilliseconds	;wreg free
  3811                           
  3812                           ;main.c: 198: LCDclear();
  3813  01036E  EC29  F086         	call	_LCDclear	;wreg free
  3814                           
  3815                           ;main.c: 200: LCDnoBacklight();
  3816  010372  EC9C  F086         	call	_LCDnoBacklight	;wreg free
  3817                           
  3818                           ;main.c: 201: LCD_Write_Str("Backlight Off");
  3819  010376  0E3B               	movlw	low STR_10
  3820  010378  6E0D               	movwf	LCD_Write_Str@message,c
  3821  01037A  0EFF               	movlw	high STR_10
  3822  01037C  6E0E               	movwf	LCD_Write_Str@message+1,c
  3823  01037E  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  3824                           
  3825                           ;main.c: 202: DelayMilliseconds(1000);
  3826  010382  0E03               	movlw	3
  3827  010384  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  3828  010386  0EE8               	movlw	232
  3829  010388  6E01               	movwf	DelayMilliseconds@delayTime,c
  3830  01038A  EC13  F085         	call	_DelayMilliseconds	;wreg free
  3831                           
  3832                           ;main.c: 203: LCDclear();
  3833  01038E  EC29  F086         	call	_LCDclear	;wreg free
  3834                           
  3835                           ;main.c: 205: LCDbacklight();
  3836  010392  ECA2  F086         	call	_LCDbacklight	;wreg free
  3837                           
  3838                           ;main.c: 206: LCD_Write_Str("Backlight On");
  3839  010396  0E63               	movlw	low STR_9
  3840  010398  6E0D               	movwf	LCD_Write_Str@message,c
  3841  01039A  0EFF               	movlw	high STR_9
  3842  01039C  6E0E               	movwf	LCD_Write_Str@message+1,c
  3843  01039E  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  3844                           
  3845                           ;main.c: 207: DelayMilliseconds(1000);
  3846  0103A2  0E03               	movlw	3
  3847  0103A4  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  3848  0103A6  0EE8               	movlw	232
  3849  0103A8  6E01               	movwf	DelayMilliseconds@delayTime,c
  3850  0103AA  EC13  F085         	call	_DelayMilliseconds	;wreg free
  3851                           
  3852                           ;main.c: 208: for (unsigned char x = 0; x < 6; x++)
  3853  0103AE  0E00               	movlw	0
  3854  0103B0  6E17               	movwf	backLightControl@x,c
  3855  0103B2                     l2352:
  3856  0103B2  0E05               	movlw	5
  3857  0103B4  6417               	cpfsgt	backLightControl@x,c
  3858  0103B6  D001               	goto	l430
  3859  0103B8  0012               	return	
  3860  0103BA                     l430:
  3861                           
  3862                           ;main.c: 209: {
  3863                           ;main.c: 210: if (x%2) {
  3864  0103BA  A017               	btfss	backLightControl@x,0,c
  3865  0103BC  D019               	goto	l2364
  3866                           
  3867                           ;main.c: 211: LCDsetCursor(0,0);
  3868  0103BE  0E00               	movlw	0
  3869  0103C0  6E0D               	movwf	LCDsetCursor@row,c
  3870  0103C2  0E00               	movlw	0
  3871  0103C4  ECDC  F084         	call	_LCDsetCursor
  3872                           
  3873                           ;main.c: 212: LCD_Write_Str("             ");
  3874  0103C8  0E1F               	movlw	low STR_12
  3875  0103CA  6E0D               	movwf	LCD_Write_Str@message,c
  3876  0103CC  0EFF               	movlw	high STR_12
  3877  0103CE  6E0E               	movwf	LCD_Write_Str@message+1,c
  3878  0103D0  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  3879                           
  3880                           ;main.c: 213: LCDsetCursor(0,0);
  3881  0103D4  0E00               	movlw	0
  3882  0103D6  6E0D               	movwf	LCDsetCursor@row,c
  3883  0103D8  0E00               	movlw	0
  3884  0103DA  ECDC  F084         	call	_LCDsetCursor
  3885                           
  3886                           ;main.c: 214: LCD_Write_Str("Backlight On ");
  3887  0103DE  0E2D               	movlw	low STR_13
  3888  0103E0  6E0D               	movwf	LCD_Write_Str@message,c
  3889  0103E2  0EFF               	movlw	high STR_13
  3890  0103E4  6E0E               	movwf	LCD_Write_Str@message+1,c
  3891  0103E6  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  3892                           
  3893                           ;main.c: 215: LCDbacklight();
  3894  0103EA  ECA2  F086         	call	_LCDbacklight	;wreg free
  3895                           
  3896                           ;main.c: 216: } else {
  3897  0103EE  D00A               	goto	l2370
  3898  0103F0                     l2364:
  3899                           
  3900                           ;main.c: 217: LCDclear();
  3901  0103F0  EC29  F086         	call	_LCDclear	;wreg free
  3902                           
  3903                           ;main.c: 218: LCD_Write_Str("Backlight Off");
  3904  0103F4  0E3B               	movlw	low STR_10
  3905  0103F6  6E0D               	movwf	LCD_Write_Str@message,c
  3906  0103F8  0EFF               	movlw	high STR_10
  3907  0103FA  6E0E               	movwf	LCD_Write_Str@message+1,c
  3908  0103FC  ECFA  F084         	call	_LCD_Write_Str	;wreg free
  3909                           
  3910                           ;main.c: 219: LCDnoBacklight();
  3911  010400  EC9C  F086         	call	_LCDnoBacklight	;wreg free
  3912  010404                     l2370:
  3913                           
  3914                           ;main.c: 220: }
  3915                           ;main.c: 221: DelayMilliseconds(750);
  3916  010404  0E02               	movlw	2
  3917  010406  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  3918  010408  0EEE               	movlw	238
  3919  01040A  6E01               	movwf	DelayMilliseconds@delayTime,c
  3920  01040C  EC13  F085         	call	_DelayMilliseconds	;wreg free
  3921  010410  2A17               	incf	backLightControl@x,f,c
  3922  010412  D7CF               	goto	l2352
  3923  010414                     __end_of_backLightControl:
  3924                           	opt stack 0
  3925                           tblptru	equ	0xFF8
  3926                           tblptrh	equ	0xFF7
  3927                           tblptrl	equ	0xFF6
  3928                           tablat	equ	0xFF5
  3929                           prodh	equ	0xFF4
  3930                           prodl	equ	0xFF3
  3931                           postinc0	equ	0xFEE
  3932                           wreg	equ	0xFE8
  3933                           postdec1	equ	0xFE5
  3934                           fsr1l	equ	0xFE1
  3935                           indf2	equ	0xFDF
  3936                           postinc2	equ	0xFDE
  3937                           postdec2	equ	0xFDD
  3938                           fsr2h	equ	0xFDA
  3939                           fsr2l	equ	0xFD9
  3940                           status	equ	0xFD8
  3941                           
  3942 ;; *************** function _LCDnoBacklight *****************
  3943 ;; Defined at:
  3944 ;;		line 368 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;		None               void
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, status,0, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3962 ;;Total ram usage:        0 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    4
  3965 ;; This function calls:
  3966 ;;		_LCDreadPCF8574
  3967 ;;		_LCDwritePCF8574
  3968 ;; This function is called by:
  3969 ;;		_backLightControl
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text28
  3974  010D38                     __ptext28:
  3975                           	opt stack 0
  3976  010D38                     _LCDnoBacklight:
  3977                           	opt stack 24
  3978                           
  3979                           ;LCD_I2C_PCF8574.c: 369: _backlightval &= ~0b00001000;
  3980                           
  3981                           ;incstack = 0
  3982  010D38  9653               	bcf	__backlightval,3,c
  3983                           
  3984                           ;LCD_I2C_PCF8574.c: 370: LCDwritePCF8574(LCDreadPCF8574());
  3985  010D3A  ECE6  F086         	call	_LCDreadPCF8574	;wreg free
  3986  010D3E  EC58  F086         	call	_LCDwritePCF8574
  3987  010D42  0012               	return		;funcret
  3988  010D44                     __end_of_LCDnoBacklight:
  3989                           	opt stack 0
  3990                           tblptru	equ	0xFF8
  3991                           tblptrh	equ	0xFF7
  3992                           tblptrl	equ	0xFF6
  3993                           tablat	equ	0xFF5
  3994                           prodh	equ	0xFF4
  3995                           prodl	equ	0xFF3
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           postdec1	equ	0xFE5
  3999                           fsr1l	equ	0xFE1
  4000                           indf2	equ	0xFDF
  4001                           postinc2	equ	0xFDE
  4002                           postdec2	equ	0xFDD
  4003                           fsr2h	equ	0xFDA
  4004                           fsr2l	equ	0xFD9
  4005                           status	equ	0xFD8
  4006                           
  4007 ;; *************** function _LCDbacklight *****************
  4008 ;; Defined at:
  4009 ;;		line 373 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;		None               void
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;Total ram usage:        0 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    4
  4030 ;; This function calls:
  4031 ;;		_LCDreadPCF8574
  4032 ;;		_LCDwritePCF8574
  4033 ;; This function is called by:
  4034 ;;		_backLightControl
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text29
  4039  010D44                     __ptext29:
  4040                           	opt stack 0
  4041  010D44                     _LCDbacklight:
  4042                           	opt stack 24
  4043                           
  4044                           ;LCD_I2C_PCF8574.c: 374: _backlightval |= 0b00001000;
  4045                           
  4046                           ;incstack = 0
  4047  010D44  8653               	bsf	__backlightval,3,c
  4048                           
  4049                           ;LCD_I2C_PCF8574.c: 375: LCDwritePCF8574(LCDreadPCF8574());
  4050  010D46  ECE6  F086         	call	_LCDreadPCF8574	;wreg free
  4051  010D4A  EC58  F086         	call	_LCDwritePCF8574
  4052  010D4E  0012               	return		;funcret
  4053  010D50                     __end_of_LCDbacklight:
  4054                           	opt stack 0
  4055                           tblptru	equ	0xFF8
  4056                           tblptrh	equ	0xFF7
  4057                           tblptrl	equ	0xFF6
  4058                           tablat	equ	0xFF5
  4059                           prodh	equ	0xFF4
  4060                           prodl	equ	0xFF3
  4061                           postinc0	equ	0xFEE
  4062                           wreg	equ	0xFE8
  4063                           postdec1	equ	0xFE5
  4064                           fsr1l	equ	0xFE1
  4065                           indf2	equ	0xFDF
  4066                           postinc2	equ	0xFDE
  4067                           postdec2	equ	0xFDD
  4068                           fsr2h	equ	0xFDA
  4069                           fsr2l	equ	0xFD9
  4070                           status	equ	0xFD8
  4071                           
  4072 ;; *************** function _LCDreadPCF8574 *****************
  4073 ;; Defined at:
  4074 ;;		line 485 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      unsigned char 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4092 ;;Total ram usage:        0 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    3
  4095 ;; This function calls:
  4096 ;;		_I2C_Read_Byte_Single_Reg
  4097 ;; This function is called by:
  4098 ;;		_LCDnoBacklight
  4099 ;;		_LCDbacklight
  4100 ;;		_LCDread4bits
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text30
  4105  010DCC                     __ptext30:
  4106                           	opt stack 0
  4107  010DCC                     _LCDreadPCF8574:
  4108                           	opt stack 21
  4109                           
  4110                           ;LCD_I2C_PCF8574.c: 486: return I2C_Read_Byte_Single_Reg((0x27<<1));
  4111                           
  4112                           ;incstack = 0
  4113  010DCC  0E4E               	movlw	78
  4114  010DCE  EC6C  F085         	call	_I2C_Read_Byte_Single_Reg
  4115  010DD2  0012               	return	
  4116  010DD4                     __end_of_LCDreadPCF8574:
  4117                           	opt stack 0
  4118                           tblptru	equ	0xFF8
  4119                           tblptrh	equ	0xFF7
  4120                           tblptrl	equ	0xFF6
  4121                           tablat	equ	0xFF5
  4122                           prodh	equ	0xFF4
  4123                           prodl	equ	0xFF3
  4124                           postinc0	equ	0xFEE
  4125                           wreg	equ	0xFE8
  4126                           postdec1	equ	0xFE5
  4127                           fsr1l	equ	0xFE1
  4128                           indf2	equ	0xFDF
  4129                           postinc2	equ	0xFDE
  4130                           postdec2	equ	0xFDD
  4131                           fsr2h	equ	0xFDA
  4132                           fsr2l	equ	0xFD9
  4133                           status	equ	0xFD8
  4134                           
  4135 ;; *************** function _I2C_Read_Byte_Single_Reg *****************
  4136 ;; Defined at:
  4137 ;;		line 73 in file "i2c_utils_files/I2C_UTILS.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  device          1    wreg     unsigned char 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  device          1    2[COMRAM] unsigned char 
  4142 ;;  b               1    3[COMRAM] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      unsigned char 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;Total ram usage:        2 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    2
  4159 ;; This function calls:
  4160 ;;		_IdleI2C
  4161 ;;		_ReadI2C
  4162 ;;		_WriteI2C
  4163 ;; This function is called by:
  4164 ;;		_LCDreadPCF8574
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text31
  4169  010AD8                     __ptext31:
  4170                           	opt stack 0
  4171  010AD8                     _I2C_Read_Byte_Single_Reg:
  4172                           	opt stack 21
  4173                           
  4174                           ;incstack = 0
  4175                           ;I2C_Read_Byte_Single_Reg@device stored from wreg
  4176  010AD8  6E03               	movwf	I2C_Read_Byte_Single_Reg@device,c
  4177                           
  4178                           ;I2C_UTILS.c: 75: unsigned char b = 0;
  4179  010ADA  0E00               	movlw	0
  4180  010ADC  6E04               	movwf	I2C_Read_Byte_Single_Reg@b,c
  4181                           
  4182                           ;I2C_UTILS.c: 77: IdleI2C();
  4183  010ADE  EC4F  F086         	call	_IdleI2C	;wreg free
  4184                           
  4185                           ;I2C_UTILS.c: 78: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  4186  010AE2  80C5               	bsf	4037,0,c	;volatile
  4187  010AE4                     l55:
  4188  010AE4  B0C5               	btfsc	4037,0,c	;volatile
  4189  010AE6  D7FE               	goto	l55
  4190                           
  4191                           ;I2C_UTILS.c: 79: WriteI2C(device | 0b00000001);
  4192  010AE8  5003               	movf	I2C_Read_Byte_Single_Reg@device,w,c
  4193  010AEA  0901               	iorlw	1
  4194  010AEC  EC76  F084         	call	_WriteI2C
  4195                           
  4196                           ;I2C_UTILS.c: 80: b = ReadI2C();
  4197  010AF0  ECFA  F085         	call	_ReadI2C	;wreg free
  4198  010AF4  6E04               	movwf	I2C_Read_Byte_Single_Reg@b,c
  4199                           
  4200                           ;I2C_UTILS.c: 83: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  4201  010AF6  84C5               	bsf	4037,2,c	;volatile
  4202  010AF8                     l58:
  4203  010AF8  B4C5               	btfsc	4037,2,c	;volatile
  4204  010AFA  D7FE               	goto	l58
  4205                           
  4206                           ;I2C_UTILS.c: 84: return b;
  4207  010AFC  5004               	movf	I2C_Read_Byte_Single_Reg@b,w,c
  4208  010AFE  0012               	return	
  4209  010B00                     __end_of_I2C_Read_Byte_Single_Reg:
  4210                           	opt stack 0
  4211                           tblptru	equ	0xFF8
  4212                           tblptrh	equ	0xFF7
  4213                           tblptrl	equ	0xFF6
  4214                           tablat	equ	0xFF5
  4215                           prodh	equ	0xFF4
  4216                           prodl	equ	0xFF3
  4217                           postinc0	equ	0xFEE
  4218                           wreg	equ	0xFE8
  4219                           postdec1	equ	0xFE5
  4220                           fsr1l	equ	0xFE1
  4221                           indf2	equ	0xFDF
  4222                           postinc2	equ	0xFDE
  4223                           postdec2	equ	0xFDD
  4224                           fsr2h	equ	0xFDA
  4225                           fsr2l	equ	0xFD9
  4226                           status	equ	0xFD8
  4227                           
  4228 ;; *************** function _ReadI2C *****************
  4229 ;; Defined at:
  4230 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c_read.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      unsigned char 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4248 ;;Total ram usage:        0 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_I2C_Read_Byte_Single_Reg
  4254 ;;		_I2C_Read_Byte
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text32
  4259  010BF4                     __ptext32:
  4260                           	opt stack 0
  4261  010BF4                     _ReadI2C:
  4262                           	opt stack 22
  4263                           
  4264                           ;incstack = 0
  4265  010BF4  50C6               	movf	4038,w,c	;volatile
  4266  010BF6  0B0F               	andlw	15
  4267  010BF8  0A08               	xorlw	8
  4268  010BFA  B4D8               	btfsc	status,2,c
  4269  010BFC  D004               	goto	l494
  4270  010BFE  50C6               	movf	4038,w,c	;volatile
  4271  010C00  0B0F               	andlw	15
  4272  010C02  0A0B               	xorlw	11
  4273  010C04  B4D8               	btfsc	status,2,c
  4274  010C06                     l494:
  4275  010C06  86C5               	bsf	4037,3,c	;volatile
  4276  010C08                     l495:
  4277  010C08  A0C7               	btfss	4039,0,c	;volatile
  4278  010C0A  D7FE               	goto	l495
  4279  010C0C  50C9               	movf	4041,w,c	;volatile
  4280  010C0E  0012               	return	
  4281  010C10                     __end_of_ReadI2C:
  4282                           	opt stack 0
  4283                           tblptru	equ	0xFF8
  4284                           tblptrh	equ	0xFF7
  4285                           tblptrl	equ	0xFF6
  4286                           tablat	equ	0xFF5
  4287                           prodh	equ	0xFF4
  4288                           prodl	equ	0xFF3
  4289                           postinc0	equ	0xFEE
  4290                           wreg	equ	0xFE8
  4291                           postdec1	equ	0xFE5
  4292                           fsr1l	equ	0xFE1
  4293                           indf2	equ	0xFDF
  4294                           postinc2	equ	0xFDE
  4295                           postdec2	equ	0xFDD
  4296                           fsr2h	equ	0xFDA
  4297                           fsr2l	equ	0xFD9
  4298                           status	equ	0xFD8
  4299                           
  4300 ;; *************** function _LCD_Write_Str *****************
  4301 ;; Defined at:
  4302 ;;		line 247 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  message         2   12[COMRAM] PTR const unsigned char 
  4305 ;;		 -> STR_37(3), STR_36(19), STR_35(3), STR_34(5), 
  4306 ;;		 -> STR_33(3), STR_32(13), STR_31(3), STR_30(16), 
  4307 ;;		 -> STR_29(21), STR_28(20), STR_27(21), STR_26(20), 
  4308 ;;		 -> STR_25(20), STR_24(12), STR_23(10), STR_22(9), 
  4309 ;;		 -> STR_21(10), STR_20(11), STR_19(9), STR_18(6), 
  4310 ;;		 -> STR_17(6), STR_16(6), STR_15(6), STR_14(14), 
  4311 ;;		 -> STR_13(14), STR_12(14), STR_11(13), STR_10(14), 
  4312 ;;		 -> STR_9(13), STR_8(12), STR_7(12), STR_6(12), 
  4313 ;;		 -> STR_5(12), STR_4(6), STR_3(13), STR_2(6), 
  4314 ;;		 -> STR_1(13), 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  message_ptr     2   14[COMRAM] PTR unsigned char 
  4317 ;;		 -> STR_37(3), STR_36(19), STR_35(3), STR_34(5), 
  4318 ;;		 -> STR_33(3), STR_32(13), STR_31(3), STR_30(16), 
  4319 ;;		 -> STR_29(21), STR_28(20), STR_27(21), STR_26(20), 
  4320 ;;		 -> STR_25(20), STR_24(12), STR_23(10), STR_22(9), 
  4321 ;;		 -> STR_21(10), STR_20(11), STR_19(9), STR_18(6), 
  4322 ;;		 -> STR_17(6), STR_16(6), STR_15(6), STR_14(14), 
  4323 ;;		 -> STR_13(14), STR_12(14), STR_11(13), STR_10(14), 
  4324 ;;		 -> STR_9(13), STR_8(12), STR_7(12), STR_6(12), 
  4325 ;;		 -> STR_5(12), STR_4(6), STR_3(13), STR_2(6), 
  4326 ;;		 -> STR_1(13), 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;		None               void
  4329 ;; Registers used:
  4330 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4340 ;;Total ram usage:        4 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    8
  4343 ;; This function calls:
  4344 ;;		_LCDdataWrite
  4345 ;; This function is called by:
  4346 ;;		_displayLeftRightScroll
  4347 ;;		_displayOnOff
  4348 ;;		_backLightControl
  4349 ;;		_printAt
  4350 ;;		_cursorControl
  4351 ;;		_printLeftAndRight
  4352 ;;		_controlMemoryReading
  4353 ;;		_dataMemoryReading
  4354 ;;		_putHexString
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text33
  4359  0109F4                     __ptext33:
  4360                           	opt stack 0
  4361  0109F4                     _LCD_Write_Str:
  4362                           	opt stack 20
  4363                           
  4364                           ;LCD_I2C_PCF8574.c: 249: unsigned char *message_ptr = (unsigned char *) message;
  4365                           
  4366                           ;incstack = 0
  4367  0109F4  C00D  F00F         	movff	LCD_Write_Str@message,LCD_Write_Str@message_ptr
  4368  0109F8  C00E  F010         	movff	LCD_Write_Str@message+1,LCD_Write_Str@message_ptr+1
  4369                           
  4370                           ;LCD_I2C_PCF8574.c: 251: while (*message_ptr)
  4371  0109FC  D00A               	goto	l2016
  4372  0109FE                     l2012:
  4373                           
  4374                           ;LCD_I2C_PCF8574.c: 252: LCDdataWrite((unsigned char) (*message_ptr++));
  4375  0109FE  C00F  FFF6         	movff	LCD_Write_Str@message_ptr,tblptrl
  4376  010A02  C010  FFF7         	movff	LCD_Write_Str@message_ptr+1,tblptrh
  4377  010A06                     	if	0	;tblptru may be non-zero
  4378  010A06                     	endif
  4379  010A06                     	if	0	;tblptru may be non-zero
  4380  010A06                     	endif
  4381  010A06  0008               	tblrd		*
  4382  010A08  50F5               	movf	tablat,w,c
  4383  010A0A  EC76  F086         	call	_LCDdataWrite
  4384  010A0E  4A0F               	infsnz	LCD_Write_Str@message_ptr,f,c
  4385  010A10  2A10               	incf	LCD_Write_Str@message_ptr+1,f,c
  4386  010A12                     l2016:
  4387  010A12  C00F  FFF6         	movff	LCD_Write_Str@message_ptr,tblptrl
  4388  010A16  C010  FFF7         	movff	LCD_Write_Str@message_ptr+1,tblptrh
  4389  010A1A                     	if	0	;tblptru may be non-zero
  4390  010A1A                     	endif
  4391  010A1A                     	if	0	;tblptru may be non-zero
  4392  010A1A                     	endif
  4393  010A1A  0008               	tblrd		*
  4394  010A1C  50F5               	movf	tablat,w,c
  4395  010A1E  0900               	iorlw	0
  4396  010A20  B4D8               	btfsc	status,2,c
  4397  010A22  0012               	return	
  4398  010A24  D7EC               	goto	l2012
  4399  010A26                     __end_of_LCD_Write_Str:
  4400                           	opt stack 0
  4401                           tblptru	equ	0xFF8
  4402                           tblptrh	equ	0xFF7
  4403                           tblptrl	equ	0xFF6
  4404                           tablat	equ	0xFF5
  4405                           prodh	equ	0xFF4
  4406                           prodl	equ	0xFF3
  4407                           postinc0	equ	0xFEE
  4408                           wreg	equ	0xFE8
  4409                           postdec1	equ	0xFE5
  4410                           fsr1l	equ	0xFE1
  4411                           indf2	equ	0xFDF
  4412                           postinc2	equ	0xFDE
  4413                           postdec2	equ	0xFDD
  4414                           fsr2h	equ	0xFDA
  4415                           fsr2l	equ	0xFD9
  4416                           status	equ	0xFD8
  4417                           
  4418 ;; *************** function _autoIncrement *****************
  4419 ;; Defined at:
  4420 ;;		line 104 in file "main.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  NoAutoscroll   14   22[COMRAM] unsigned char [14]
  4425 ;;  Autoscroll     11   36[COMRAM] unsigned char [11]
  4426 ;;  p               2   47[COMRAM] PTR unsigned char 
  4427 ;;		 -> autoIncrement@NoAutoscroll(14), autoIncrement@Autoscroll(11), 
  4428 ;; Return value:  Size  Location     Type
  4429 ;;		None               void
  4430 ;; Registers used:
  4431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;      Locals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4440 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4441 ;;Total ram usage:       27 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    9
  4444 ;; This function calls:
  4445 ;;		_DelayMilliseconds
  4446 ;;		_LCD_Write_Char
  4447 ;;		_LCDautoscroll
  4448 ;;		_LCDblinkOff
  4449 ;;		_LCDclear
  4450 ;;		_LCDcursorOff
  4451 ;;		_LCDnoAutoscroll
  4452 ;;		_LCDsetCursor
  4453 ;; This function is called by:
  4454 ;;		_exerciseDisplay
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text34
  4459  010274                     __ptext34:
  4460                           	opt stack 0
  4461  010274                     _autoIncrement:
  4462                           	opt stack 20
  4463                           
  4464                           ;main.c: 106: char Autoscroll[] = "Autoscroll";
  4465                           
  4466                           ;incstack = 0
  4467  010274  EE20  F07E         	lfsr	2,autoIncrement@F16653
  4468  010278  EE10  F025         	lfsr	1,autoIncrement@Autoscroll
  4469  01027C  0E0A               	movlw	10
  4470  01027E                     u791:
  4471  01027E  CFDB FFE3          	movff	plusw2,plusw1
  4472  010282  06E8               	decf	wreg,f,c
  4473  010284  E2FC               	bc	u791
  4474                           
  4475                           ;main.c: 107: char NoAutoscroll[] = "No Autoscroll";
  4476  010286  EE20  F070         	lfsr	2,autoIncrement@F16655
  4477  01028A  EE10  F017         	lfsr	1,autoIncrement@NoAutoscroll
  4478  01028E  0E0D               	movlw	13
  4479  010290                     u801:
  4480  010290  CFDB FFE3          	movff	plusw2,plusw1
  4481  010294  06E8               	decf	wreg,f,c
  4482  010296  E2FC               	bc	u801
  4483                           
  4484                           ;main.c: 108: unsigned char * p;
  4485                           ;main.c: 110: LCDclear();
  4486  010298  EC29  F086         	call	_LCDclear	;wreg free
  4487                           
  4488                           ;main.c: 111: LCDcursorOff();
  4489  01029C  ECAE  F086         	call	_LCDcursorOff	;wreg free
  4490                           
  4491                           ;main.c: 112: LCDblinkOff();
  4492  0102A0  ECB4  F086         	call	_LCDblinkOff	;wreg free
  4493                           
  4494                           ;main.c: 113: LCDautoscroll();
  4495  0102A4  ECBA  F086         	call	_LCDautoscroll	;wreg free
  4496                           
  4497                           ;main.c: 114: p = Autoscroll;
  4498  0102A8  0E25               	movlw	low autoIncrement@Autoscroll
  4499  0102AA  6E30               	movwf	autoIncrement@p,c
  4500  0102AC  0E00               	movlw	high autoIncrement@Autoscroll
  4501  0102AE  6E31               	movwf	autoIncrement@p+1,c
  4502                           
  4503                           ;main.c: 115: LCDsetCursor(15,1);
  4504  0102B0  0E01               	movlw	1
  4505  0102B2  6E0D               	movwf	LCDsetCursor@row,c
  4506  0102B4  0E0F               	movlw	15
  4507  0102B6  ECDC  F084         	call	_LCDsetCursor
  4508                           
  4509                           ;main.c: 116: while (*p)
  4510  0102BA  D00F               	goto	l2238
  4511  0102BC                     l2232:
  4512                           
  4513                           ;main.c: 117: {
  4514                           ;main.c: 118: LCD_Write_Char((char) *p++);
  4515  0102BC  C030  FFD9         	movff	autoIncrement@p,fsr2l
  4516  0102C0  C031  FFDA         	movff	autoIncrement@p+1,fsr2h
  4517  0102C4  50DF               	movf	indf2,w,c
  4518  0102C6  ECD1  F086         	call	_LCD_Write_Char
  4519  0102CA  4A30               	infsnz	autoIncrement@p,f,c
  4520  0102CC  2A31               	incf	autoIncrement@p+1,f,c
  4521                           
  4522                           ;main.c: 119: DelayMilliseconds(400);
  4523  0102CE  0E01               	movlw	1
  4524  0102D0  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  4525  0102D2  0E90               	movlw	144
  4526  0102D4  6E01               	movwf	DelayMilliseconds@delayTime,c
  4527  0102D6  EC13  F085         	call	_DelayMilliseconds	;wreg free
  4528  0102DA                     l2238:
  4529  0102DA  C030  FFD9         	movff	autoIncrement@p,fsr2l
  4530  0102DE  C031  FFDA         	movff	autoIncrement@p+1,fsr2h
  4531  0102E2  50DF               	movf	indf2,w,c
  4532  0102E4  A4D8               	btfss	status,2,c
  4533  0102E6  D7EA               	goto	l2232
  4534                           
  4535                           ;main.c: 120: }
  4536                           ;main.c: 121: DelayMilliseconds(5000);
  4537  0102E8  0E13               	movlw	19
  4538  0102EA  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  4539  0102EC  0E88               	movlw	136
  4540  0102EE  6E01               	movwf	DelayMilliseconds@delayTime,c
  4541  0102F0  EC13  F085         	call	_DelayMilliseconds	;wreg free
  4542                           
  4543                           ;main.c: 123: LCDclear();
  4544  0102F4  EC29  F086         	call	_LCDclear	;wreg free
  4545                           
  4546                           ;main.c: 124: LCDnoAutoscroll();
  4547  0102F8  ECA8  F086         	call	_LCDnoAutoscroll	;wreg free
  4548                           
  4549                           ;main.c: 125: p = NoAutoscroll;
  4550  0102FC  0E17               	movlw	low autoIncrement@NoAutoscroll
  4551  0102FE  6E30               	movwf	autoIncrement@p,c
  4552  010300  0E00               	movlw	high autoIncrement@NoAutoscroll
  4553  010302  6E31               	movwf	autoIncrement@p+1,c
  4554                           
  4555                           ;main.c: 126: LCDsetCursor(3,1);
  4556  010304  0E01               	movlw	1
  4557  010306  6E0D               	movwf	LCDsetCursor@row,c
  4558  010308  0E03               	movlw	3
  4559  01030A  ECDC  F084         	call	_LCDsetCursor
  4560                           
  4561                           ;main.c: 127: while (*p)
  4562  01030E  D00F               	goto	l2252
  4563  010310                     l2246:
  4564                           
  4565                           ;main.c: 128: {
  4566                           ;main.c: 129: LCD_Write_Char((char) *p++);
  4567  010310  C030  FFD9         	movff	autoIncrement@p,fsr2l
  4568  010314  C031  FFDA         	movff	autoIncrement@p+1,fsr2h
  4569  010318  50DF               	movf	indf2,w,c
  4570  01031A  ECD1  F086         	call	_LCD_Write_Char
  4571  01031E  4A30               	infsnz	autoIncrement@p,f,c
  4572  010320  2A31               	incf	autoIncrement@p+1,f,c
  4573                           
  4574                           ;main.c: 130: DelayMilliseconds(400);
  4575  010322  0E01               	movlw	1
  4576  010324  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  4577  010326  0E90               	movlw	144
  4578  010328  6E01               	movwf	DelayMilliseconds@delayTime,c
  4579  01032A  EC13  F085         	call	_DelayMilliseconds	;wreg free
  4580  01032E                     l2252:
  4581  01032E  C030  FFD9         	movff	autoIncrement@p,fsr2l
  4582  010332  C031  FFDA         	movff	autoIncrement@p+1,fsr2h
  4583  010336  50DF               	movf	indf2,w,c
  4584  010338  A4D8               	btfss	status,2,c
  4585  01033A  D7EA               	goto	l2246
  4586                           
  4587                           ;main.c: 131: }
  4588                           ;main.c: 132: DelayMilliseconds(5000);
  4589  01033C  0E13               	movlw	19
  4590  01033E  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  4591  010340  0E88               	movlw	136
  4592  010342  6E01               	movwf	DelayMilliseconds@delayTime,c
  4593  010344  EC13  F085         	call	_DelayMilliseconds	;wreg free
  4594  010348  0012               	return		;funcret
  4595  01034A                     __end_of_autoIncrement:
  4596                           	opt stack 0
  4597                           tblptru	equ	0xFF8
  4598                           tblptrh	equ	0xFF7
  4599                           tblptrl	equ	0xFF6
  4600                           tablat	equ	0xFF5
  4601                           prodh	equ	0xFF4
  4602                           prodl	equ	0xFF3
  4603                           postinc0	equ	0xFEE
  4604                           wreg	equ	0xFE8
  4605                           postdec1	equ	0xFE5
  4606                           plusw1	equ	0xFE3
  4607                           fsr1l	equ	0xFE1
  4608                           indf2	equ	0xFDF
  4609                           postinc2	equ	0xFDE
  4610                           postdec2	equ	0xFDD
  4611                           plusw2	equ	0xFDB
  4612                           fsr2h	equ	0xFDA
  4613                           fsr2l	equ	0xFD9
  4614                           status	equ	0xFD8
  4615                           
  4616 ;; *************** function _LCDsetCursor *****************
  4617 ;; Defined at:
  4618 ;;		line 274 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  col             1    wreg     unsigned char 
  4621 ;;  row             1   12[COMRAM] unsigned char 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  col             1   21[COMRAM] unsigned char 
  4624 ;;  row_offsets     8   13[COMRAM] int [4]
  4625 ;; Return value:  Size  Location     Type
  4626 ;;		None               void
  4627 ;; Registers used:
  4628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4634 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4637 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4638 ;;Total ram usage:       10 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    8
  4641 ;; This function calls:
  4642 ;;		_LCDcommandWrite
  4643 ;; This function is called by:
  4644 ;;		_autoIncrement
  4645 ;;		_displayLeftRightScroll
  4646 ;;		_displayOnOff
  4647 ;;		_backLightControl
  4648 ;;		_printAt
  4649 ;;		_printLeftAndRight
  4650 ;;		_controlMemoryReading
  4651 ;;		_dataMemoryReading
  4652 ;;		_putHexString
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text35
  4657  0109B8                     __ptext35:
  4658                           	opt stack 0
  4659  0109B8                     _LCDsetCursor:
  4660                           	opt stack 20
  4661                           
  4662                           ;incstack = 0
  4663                           ;LCDsetCursor@col stored from wreg
  4664  0109B8  6E16               	movwf	LCDsetCursor@col,c
  4665                           
  4666                           ;LCD_I2C_PCF8574.c: 276: int row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
  4667  0109BA  EE20  F043         	lfsr	2,LCDsetCursor@F120
  4668  0109BE  EE10  F00E         	lfsr	1,LCDsetCursor@row_offsets
  4669  0109C2  0E07               	movlw	7
  4670  0109C4                     u731:
  4671  0109C4  CFDB FFE3          	movff	plusw2,plusw1
  4672  0109C8  06E8               	decf	wreg,f,c
  4673  0109CA  E2FC               	bc	u731
  4674                           
  4675                           ;LCD_I2C_PCF8574.c: 277: if ( row >= _numlines ) {
  4676  0109CC  5059               	movf	__numlines,w,c
  4677  0109CE  5C0D               	subwf	LCDsetCursor@row,w,c
  4678  0109D0  A0D8               	btfss	status,0,c
  4679  0109D2  D002               	goto	l2024
  4680                           
  4681                           ;LCD_I2C_PCF8574.c: 278: row = _numlines-1;
  4682  0109D4  0459               	decf	__numlines,w,c
  4683  0109D6  6E0D               	movwf	LCDsetCursor@row,c
  4684  0109D8                     l2024:
  4685                           
  4686                           ;LCD_I2C_PCF8574.c: 279: }
  4687                           ;LCD_I2C_PCF8574.c: 281: LCDcommandWrite(0x80 | (col + row_offsets[row]));
  4688  0109D8  500D               	movf	LCDsetCursor@row,w,c
  4689  0109DA  0D02               	mullw	2
  4690  0109DC  0E0E               	movlw	low LCDsetCursor@row_offsets
  4691  0109DE  24F3               	addwf	prodl,w,c
  4692  0109E0  6ED9               	movwf	fsr2l,c
  4693  0109E2  0E00               	movlw	high LCDsetCursor@row_offsets
  4694  0109E4  20F4               	addwfc	prodh,w,c
  4695  0109E6  6EDA               	movwf	fsr2h,c
  4696  0109E8  50DF               	movf	indf2,w,c
  4697  0109EA  2416               	addwf	LCDsetCursor@col,w,c
  4698  0109EC  0980               	iorlw	128
  4699  0109EE  EC7D  F086         	call	_LCDcommandWrite
  4700  0109F2  0012               	return		;funcret
  4701  0109F4                     __end_of_LCDsetCursor:
  4702                           	opt stack 0
  4703                           tblptru	equ	0xFF8
  4704                           tblptrh	equ	0xFF7
  4705                           tblptrl	equ	0xFF6
  4706                           tablat	equ	0xFF5
  4707                           prodh	equ	0xFF4
  4708                           prodl	equ	0xFF3
  4709                           postinc0	equ	0xFEE
  4710                           wreg	equ	0xFE8
  4711                           postdec1	equ	0xFE5
  4712                           plusw1	equ	0xFE3
  4713                           fsr1l	equ	0xFE1
  4714                           indf2	equ	0xFDF
  4715                           postinc2	equ	0xFDE
  4716                           postdec2	equ	0xFDD
  4717                           plusw2	equ	0xFDB
  4718                           fsr2h	equ	0xFDA
  4719                           fsr2l	equ	0xFD9
  4720                           status	equ	0xFD8
  4721                           
  4722 ;; *************** function _LCDnoAutoscroll *****************
  4723 ;; Defined at:
  4724 ;;		line 352 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;		None
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;		None               void
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0, cstack
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;Total ram usage:        0 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    8
  4745 ;; This function calls:
  4746 ;;		_LCDcommandWrite
  4747 ;; This function is called by:
  4748 ;;		_autoIncrement
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text36
  4753  010D50                     __ptext36:
  4754                           	opt stack 0
  4755  010D50                     _LCDnoAutoscroll:
  4756                           	opt stack 20
  4757                           
  4758                           ;LCD_I2C_PCF8574.c: 353: _entrymodeset &= ~0x01;
  4759                           
  4760                           ;incstack = 0
  4761  010D50  9056               	bcf	__entrymodeset,0,c
  4762                           
  4763                           ;LCD_I2C_PCF8574.c: 355: LCDcommandWrite(0x04 | _entrymodeset);
  4764  010D52  5056               	movf	__entrymodeset,w,c
  4765  010D54  0904               	iorlw	4
  4766  010D56  EC7D  F086         	call	_LCDcommandWrite
  4767  010D5A  0012               	return		;funcret
  4768  010D5C                     __end_of_LCDnoAutoscroll:
  4769                           	opt stack 0
  4770                           tblptru	equ	0xFF8
  4771                           tblptrh	equ	0xFF7
  4772                           tblptrl	equ	0xFF6
  4773                           tablat	equ	0xFF5
  4774                           prodh	equ	0xFF4
  4775                           prodl	equ	0xFF3
  4776                           postinc0	equ	0xFEE
  4777                           wreg	equ	0xFE8
  4778                           postdec1	equ	0xFE5
  4779                           plusw1	equ	0xFE3
  4780                           fsr1l	equ	0xFE1
  4781                           indf2	equ	0xFDF
  4782                           postinc2	equ	0xFDE
  4783                           postdec2	equ	0xFDD
  4784                           plusw2	equ	0xFDB
  4785                           fsr2h	equ	0xFDA
  4786                           fsr2l	equ	0xFD9
  4787                           status	equ	0xFD8
  4788                           
  4789 ;; *************** function _LCDcursorOff *****************
  4790 ;; Defined at:
  4791 ;;		line 296 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;		None
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;		None
  4796 ;; Return value:  Size  Location     Type
  4797 ;;		None               void
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0, cstack
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;Total ram usage:        0 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    8
  4812 ;; This function calls:
  4813 ;;		_LCDcommandWrite
  4814 ;; This function is called by:
  4815 ;;		_autoIncrement
  4816 ;;		_displayLeftRightScroll
  4817 ;;		_displayOnOff
  4818 ;;		_backLightControl
  4819 ;;		_printAt
  4820 ;;		_cursorControl
  4821 ;;		_printLeftAndRight
  4822 ;;		_controlMemoryReading
  4823 ;;		_dataMemoryReading
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text37
  4828  010D5C                     __ptext37:
  4829                           	opt stack 0
  4830  010D5C                     _LCDcursorOff:
  4831                           	opt stack 20
  4832                           
  4833                           ;LCD_I2C_PCF8574.c: 297: _displayfunction &= ~0x02;
  4834                           
  4835                           ;incstack = 0
  4836  010D5C  9255               	bcf	__displayfunction,1,c
  4837                           
  4838                           ;LCD_I2C_PCF8574.c: 298: LCDcommandWrite(0x08 | _displayfunction);
  4839  010D5E  5055               	movf	__displayfunction,w,c
  4840  010D60  0908               	iorlw	8
  4841  010D62  EC7D  F086         	call	_LCDcommandWrite
  4842  010D66  0012               	return		;funcret
  4843  010D68                     __end_of_LCDcursorOff:
  4844                           	opt stack 0
  4845                           tblptru	equ	0xFF8
  4846                           tblptrh	equ	0xFF7
  4847                           tblptrl	equ	0xFF6
  4848                           tablat	equ	0xFF5
  4849                           prodh	equ	0xFF4
  4850                           prodl	equ	0xFF3
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           postdec1	equ	0xFE5
  4854                           plusw1	equ	0xFE3
  4855                           fsr1l	equ	0xFE1
  4856                           indf2	equ	0xFDF
  4857                           postinc2	equ	0xFDE
  4858                           postdec2	equ	0xFDD
  4859                           plusw2	equ	0xFDB
  4860                           fsr2h	equ	0xFDA
  4861                           fsr2l	equ	0xFD9
  4862                           status	equ	0xFD8
  4863                           
  4864 ;; *************** function _LCDblinkOff *****************
  4865 ;; Defined at:
  4866 ;;		line 307 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;		None               void
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    8
  4887 ;; This function calls:
  4888 ;;		_LCDcommandWrite
  4889 ;; This function is called by:
  4890 ;;		_autoIncrement
  4891 ;;		_displayLeftRightScroll
  4892 ;;		_displayOnOff
  4893 ;;		_cursorControl
  4894 ;;		_printLeftAndRight
  4895 ;;		_controlMemoryReading
  4896 ;;		_dataMemoryReading
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text38
  4901  010D68                     __ptext38:
  4902                           	opt stack 0
  4903  010D68                     _LCDblinkOff:
  4904                           	opt stack 20
  4905                           
  4906                           ;LCD_I2C_PCF8574.c: 308: _displayfunction &= ~0x01;
  4907                           
  4908                           ;incstack = 0
  4909  010D68  9055               	bcf	__displayfunction,0,c
  4910                           
  4911                           ;LCD_I2C_PCF8574.c: 309: LCDcommandWrite(0x08 | _displayfunction);
  4912  010D6A  5055               	movf	__displayfunction,w,c
  4913  010D6C  0908               	iorlw	8
  4914  010D6E  EC7D  F086         	call	_LCDcommandWrite
  4915  010D72  0012               	return		;funcret
  4916  010D74                     __end_of_LCDblinkOff:
  4917                           	opt stack 0
  4918                           tblptru	equ	0xFF8
  4919                           tblptrh	equ	0xFF7
  4920                           tblptrl	equ	0xFF6
  4921                           tablat	equ	0xFF5
  4922                           prodh	equ	0xFF4
  4923                           prodl	equ	0xFF3
  4924                           postinc0	equ	0xFEE
  4925                           wreg	equ	0xFE8
  4926                           postdec1	equ	0xFE5
  4927                           plusw1	equ	0xFE3
  4928                           fsr1l	equ	0xFE1
  4929                           indf2	equ	0xFDF
  4930                           postinc2	equ	0xFDE
  4931                           postdec2	equ	0xFDD
  4932                           plusw2	equ	0xFDB
  4933                           fsr2h	equ	0xFDA
  4934                           fsr2l	equ	0xFD9
  4935                           status	equ	0xFD8
  4936                           
  4937 ;; *************** function _LCDautoscroll *****************
  4938 ;; Defined at:
  4939 ;;		line 345 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;		None               void
  4946 ;; Registers used:
  4947 ;;		wreg, status,2, status,0, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;Total ram usage:        0 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    8
  4960 ;; This function calls:
  4961 ;;		_LCDcommandWrite
  4962 ;; This function is called by:
  4963 ;;		_autoIncrement
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text39
  4968  010D74                     __ptext39:
  4969                           	opt stack 0
  4970  010D74                     _LCDautoscroll:
  4971                           	opt stack 20
  4972                           
  4973                           ;LCD_I2C_PCF8574.c: 346: _entrymodeset |= 0x01;
  4974                           
  4975                           ;incstack = 0
  4976  010D74  8056               	bsf	__entrymodeset,0,c
  4977                           
  4978                           ;LCD_I2C_PCF8574.c: 348: LCDcommandWrite(0x04 | _entrymodeset);
  4979  010D76  5056               	movf	__entrymodeset,w,c
  4980  010D78  0904               	iorlw	4
  4981  010D7A  EC7D  F086         	call	_LCDcommandWrite
  4982  010D7E  0012               	return		;funcret
  4983  010D80                     __end_of_LCDautoscroll:
  4984                           	opt stack 0
  4985                           tblptru	equ	0xFF8
  4986                           tblptrh	equ	0xFF7
  4987                           tblptrl	equ	0xFF6
  4988                           tablat	equ	0xFF5
  4989                           prodh	equ	0xFF4
  4990                           prodl	equ	0xFF3
  4991                           postinc0	equ	0xFEE
  4992                           wreg	equ	0xFE8
  4993                           postdec1	equ	0xFE5
  4994                           plusw1	equ	0xFE3
  4995                           fsr1l	equ	0xFE1
  4996                           indf2	equ	0xFDF
  4997                           postinc2	equ	0xFDE
  4998                           postdec2	equ	0xFDD
  4999                           plusw2	equ	0xFDB
  5000                           fsr2h	equ	0xFDA
  5001                           fsr2l	equ	0xFD9
  5002                           status	equ	0xFD8
  5003                           
  5004 ;; *************** function _LCD_Write_Char *****************
  5005 ;; Defined at:
  5006 ;;		line 242 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  message         1    wreg     unsigned char 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  message         1   12[COMRAM] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;		None               void
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;Total ram usage:        1 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    8
  5027 ;; This function calls:
  5028 ;;		_LCDdataWrite
  5029 ;; This function is called by:
  5030 ;;		_autoIncrement
  5031 ;;		_controlMemoryReading
  5032 ;;		_dataMemoryReading
  5033 ;;		_putHexString
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text40
  5038  010DA2                     __ptext40:
  5039                           	opt stack 0
  5040  010DA2                     _LCD_Write_Char:
  5041                           	opt stack 19
  5042                           
  5043                           ;incstack = 0
  5044                           ;LCD_Write_Char@message stored from wreg
  5045  010DA2  6E0D               	movwf	LCD_Write_Char@message,c
  5046                           
  5047                           ;LCD_I2C_PCF8574.c: 244: LCDdataWrite((unsigned char) message);
  5048  010DA4  500D               	movf	LCD_Write_Char@message,w,c
  5049  010DA6  EC76  F086         	call	_LCDdataWrite
  5050  010DAA  0012               	return		;funcret
  5051  010DAC                     __end_of_LCD_Write_Char:
  5052                           	opt stack 0
  5053                           tblptru	equ	0xFF8
  5054                           tblptrh	equ	0xFF7
  5055                           tblptrl	equ	0xFF6
  5056                           tablat	equ	0xFF5
  5057                           prodh	equ	0xFF4
  5058                           prodl	equ	0xFF3
  5059                           postinc0	equ	0xFEE
  5060                           wreg	equ	0xFE8
  5061                           postdec1	equ	0xFE5
  5062                           plusw1	equ	0xFE3
  5063                           fsr1l	equ	0xFE1
  5064                           indf2	equ	0xFDF
  5065                           postinc2	equ	0xFDE
  5066                           postdec2	equ	0xFDD
  5067                           plusw2	equ	0xFDB
  5068                           fsr2h	equ	0xFDA
  5069                           fsr2l	equ	0xFD9
  5070                           status	equ	0xFD8
  5071                           
  5072 ;; *************** function _LCDdataWrite *****************
  5073 ;; Defined at:
  5074 ;;		line 390 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  value           1    wreg     unsigned char 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  value           1   11[COMRAM] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;		None               void
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;Total ram usage:        1 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    7
  5095 ;; This function calls:
  5096 ;;		_LCDsend
  5097 ;; This function is called by:
  5098 ;;		_LCD_Write_Char
  5099 ;;		_LCD_Write_Str
  5100 ;;		_LCDcreateChar
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text41
  5105  010CEC                     __ptext41:
  5106                           	opt stack 0
  5107  010CEC                     _LCDdataWrite:
  5108                           	opt stack 20
  5109                           
  5110                           ;incstack = 0
  5111                           ;LCDdataWrite@value stored from wreg
  5112  010CEC  6E0C               	movwf	LCDdataWrite@value,c
  5113                           
  5114                           ;LCD_I2C_PCF8574.c: 391: LCDsend(value, 0b00000001);
  5115  010CEE  0E01               	movlw	1
  5116  010CF0  6E08               	movwf	LCDsend@RsMode,c
  5117  010CF2  500C               	movf	LCDdataWrite@value,w,c
  5118  010CF4  EC80  F085         	call	_LCDsend
  5119  010CF8  0012               	return		;funcret
  5120  010CFA                     __end_of_LCDdataWrite:
  5121                           	opt stack 0
  5122                           tblptru	equ	0xFF8
  5123                           tblptrh	equ	0xFF7
  5124                           tblptrl	equ	0xFF6
  5125                           tablat	equ	0xFF5
  5126                           prodh	equ	0xFF4
  5127                           prodl	equ	0xFF3
  5128                           postinc0	equ	0xFEE
  5129                           wreg	equ	0xFE8
  5130                           postdec1	equ	0xFE5
  5131                           plusw1	equ	0xFE3
  5132                           fsr1l	equ	0xFE1
  5133                           indf2	equ	0xFDF
  5134                           postinc2	equ	0xFDE
  5135                           postdec2	equ	0xFDD
  5136                           plusw2	equ	0xFDB
  5137                           fsr2h	equ	0xFDA
  5138                           fsr2l	equ	0xFD9
  5139                           status	equ	0xFD8
  5140                           
  5141 ;; *************** function _DelayMilliseconds *****************
  5142 ;; Defined at:
  5143 ;;		line 31 in file "timer_files/DELAY.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  delayTime       2    0[COMRAM] unsigned short 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  x               2    2[COMRAM] unsigned short 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;		None               void
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5160 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5161 ;;Total ram usage:        4 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_autoIncrement
  5167 ;;		_displayLeftRightScroll
  5168 ;;		_displayOnOff
  5169 ;;		_backLightControl
  5170 ;;		_printAt
  5171 ;;		_cursorControl
  5172 ;;		_printLeftAndRight
  5173 ;;		_controlMemoryReading
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text42
  5178  010A26                     __ptext42:
  5179                           	opt stack 0
  5180  010A26                     _DelayMilliseconds:
  5181                           	opt stack 28
  5182                           
  5183                           ;DELAY.c: 33: T1CONbits.TMR1ON = 0;
  5184                           
  5185                           ;incstack = 0
  5186  010A26  90CD               	bcf	4045,0,c	;volatile
  5187                           
  5188                           ;DELAY.c: 34: for (unsigned short x = 0; x < delayTime; x++)
  5189  010A28  0E00               	movlw	0
  5190  010A2A  6E04               	movwf	DelayMilliseconds@x+1,c
  5191  010A2C  0E00               	movlw	0
  5192  010A2E  6E03               	movwf	DelayMilliseconds@x,c
  5193  010A30  D00B               	goto	l2150
  5194  010A32                     l2142:
  5195                           
  5196                           ;DELAY.c: 35: {
  5197                           ;DELAY.c: 36: TMR1 = (unsigned short) (65535 - 1000);
  5198  010A32  0EFC               	movlw	252
  5199  010A34  6ECF               	movwf	4047,c	;volatile
  5200  010A36  0E17               	movlw	23
  5201  010A38  6ECE               	movwf	4046,c	;volatile
  5202                           
  5203                           ;DELAY.c: 37: PIR1bits.TMR1IF = 0;
  5204  010A3A  909E               	bcf	3998,0,c	;volatile
  5205                           
  5206                           ;DELAY.c: 38: T1CONbits.TMR1ON = 1;
  5207  010A3C  80CD               	bsf	4045,0,c	;volatile
  5208  010A3E                     l291:
  5209  010A3E  A09E               	btfss	3998,0,c	;volatile
  5210  010A40  D7FE               	goto	l291
  5211                           
  5212                           ;DELAY.c: 40: T1CONbits.TMR1ON = 0;
  5213  010A42  90CD               	bcf	4045,0,c	;volatile
  5214  010A44  4A03               	infsnz	DelayMilliseconds@x,f,c
  5215  010A46  2A04               	incf	DelayMilliseconds@x+1,f,c
  5216  010A48                     l2150:
  5217  010A48  5001               	movf	DelayMilliseconds@delayTime,w,c
  5218  010A4A  5C03               	subwf	DelayMilliseconds@x,w,c
  5219  010A4C  5002               	movf	DelayMilliseconds@delayTime+1,w,c
  5220  010A4E  5804               	subwfb	DelayMilliseconds@x+1,w,c
  5221  010A50  B0D8               	btfsc	status,0,c
  5222  010A52  0012               	return	
  5223  010A54  D7EE               	goto	l2142
  5224  010A56                     __end_of_DelayMilliseconds:
  5225                           	opt stack 0
  5226                           tblptru	equ	0xFF8
  5227                           tblptrh	equ	0xFF7
  5228                           tblptrl	equ	0xFF6
  5229                           tablat	equ	0xFF5
  5230                           prodh	equ	0xFF4
  5231                           prodl	equ	0xFF3
  5232                           postinc0	equ	0xFEE
  5233                           wreg	equ	0xFE8
  5234                           postdec1	equ	0xFE5
  5235                           plusw1	equ	0xFE3
  5236                           fsr1l	equ	0xFE1
  5237                           indf2	equ	0xFDF
  5238                           postinc2	equ	0xFDE
  5239                           postdec2	equ	0xFDD
  5240                           plusw2	equ	0xFDB
  5241                           fsr2h	equ	0xFDA
  5242                           fsr2l	equ	0xFD9
  5243                           status	equ	0xFD8
  5244                           
  5245 ;; *************** function _SYSTEM_Initialize *****************
  5246 ;; Defined at:
  5247 ;;		line 100 in file "mcc_generated_files/mcc.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;		None               void
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;Total ram usage:        0 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:   10
  5268 ;; This function calls:
  5269 ;;		_DELAY_Init
  5270 ;;		_I2C_Init
  5271 ;;		_LCD_Init
  5272 ;;		_OSCILLATOR_Initialize
  5273 ;;		_PIN_MANAGER_Initialize
  5274 ;; This function is called by:
  5275 ;;		_main
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text43
  5280  010C28                     __ptext43:
  5281                           	opt stack 0
  5282  010C28                     _SYSTEM_Initialize:
  5283                           	opt stack 20
  5284                           
  5285                           ;mcc.c: 102: OSCILLATOR_Initialize();
  5286                           
  5287                           ;incstack = 0
  5288  010C28  ECEA  F086         	call	_OSCILLATOR_Initialize	;wreg free
  5289                           
  5290                           ;mcc.c: 103: PIN_MANAGER_Initialize();
  5291  010C2C  ECBA  F085         	call	_PIN_MANAGER_Initialize	;wreg free
  5292                           
  5293                           ;mcc.c: 104: I2C_Init();
  5294  010C30  EC08  F086         	call	_I2C_Init	;wreg free
  5295                           
  5296                           ;mcc.c: 105: DELAY_Init();
  5297  010C34  EC60  F086         	call	_DELAY_Init	;wreg free
  5298                           
  5299                           ;mcc.c: 106: LCD_Init();
  5300  010C38  ECC8  F082         	call	_LCD_Init	;wreg free
  5301  010C3C  0012               	return		;funcret
  5302  010C3E                     __end_of_SYSTEM_Initialize:
  5303                           	opt stack 0
  5304                           tblptru	equ	0xFF8
  5305                           tblptrh	equ	0xFF7
  5306                           tblptrl	equ	0xFF6
  5307                           tablat	equ	0xFF5
  5308                           prodh	equ	0xFF4
  5309                           prodl	equ	0xFF3
  5310                           postinc0	equ	0xFEE
  5311                           wreg	equ	0xFE8
  5312                           postdec1	equ	0xFE5
  5313                           plusw1	equ	0xFE3
  5314                           fsr1l	equ	0xFE1
  5315                           indf2	equ	0xFDF
  5316                           postinc2	equ	0xFDE
  5317                           postdec2	equ	0xFDD
  5318                           plusw2	equ	0xFDB
  5319                           fsr2h	equ	0xFDA
  5320                           fsr2l	equ	0xFD9
  5321                           status	equ	0xFD8
  5322                           
  5323 ;; *************** function _PIN_MANAGER_Initialize *****************
  5324 ;; Defined at:
  5325 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;		None
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;		None
  5330 ;; Return value:  Size  Location     Type
  5331 ;;		None               void
  5332 ;; Registers used:
  5333 ;;		None
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5343 ;;Total ram usage:        0 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_SYSTEM_Initialize
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text44
  5353  010B74                     __ptext44:
  5354                           	opt stack 0
  5355  010B74                     _PIN_MANAGER_Initialize:
  5356                           	opt stack 29
  5357                           
  5358                           ;pin_manager.c: 54: TRISA1 = 1;
  5359                           
  5360                           ;incstack = 0
  5361  010B74  8292               	bsf	3986,1,c	;volatile
  5362                           
  5363                           ;pin_manager.c: 55: TRISA2 = 1;
  5364  010B76  8492               	bsf	3986,2,c	;volatile
  5365                           
  5366                           ;pin_manager.c: 56: TRISA3 = 1;
  5367  010B78  8692               	bsf	3986,3,c	;volatile
  5368                           
  5369                           ;pin_manager.c: 57: TRISA4 = 1;
  5370  010B7A  8892               	bsf	3986,4,c	;volatile
  5371                           
  5372                           ;pin_manager.c: 58: TRISA5 = 1;
  5373  010B7C  8A92               	bsf	3986,5,c	;volatile
  5374                           
  5375                           ;pin_manager.c: 61: ADCON1bits.PCFG0 = 1;
  5376  010B7E  80C1               	bsf	4033,0,c	;volatile
  5377                           
  5378                           ;pin_manager.c: 62: ADCON1bits.PCFG1 = 1;
  5379  010B80  82C1               	bsf	4033,1,c	;volatile
  5380                           
  5381                           ;pin_manager.c: 63: ADCON1bits.PCFG2 = 1;
  5382  010B82  84C1               	bsf	4033,2,c	;volatile
  5383                           
  5384                           ;pin_manager.c: 64: ADCON1bits.PCFG3 = 1;
  5385  010B84  86C1               	bsf	4033,3,c	;volatile
  5386                           
  5387                           ;pin_manager.c: 67: TRISB0 = 1;
  5388  010B86  8093               	bsf	3987,0,c	;volatile
  5389                           
  5390                           ;pin_manager.c: 68: TRISB1 = 1;
  5391  010B88  8293               	bsf	3987,1,c	;volatile
  5392                           
  5393                           ;pin_manager.c: 69: TRISB2 = 1;
  5394  010B8A  8493               	bsf	3987,2,c	;volatile
  5395                           
  5396                           ;pin_manager.c: 70: TRISB4 = 1;
  5397  010B8C  8893               	bsf	3987,4,c	;volatile
  5398                           
  5399                           ;pin_manager.c: 71: TRISB5 = 1;
  5400  010B8E  8A93               	bsf	3987,5,c	;volatile
  5401                           
  5402                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 1;
  5403  010B90  8EF1               	bsf	intcon2,7,c	;volatile
  5404                           
  5405                           ;pin_manager.c: 76: TRISC1 = 1;
  5406  010B92  8294               	bsf	3988,1,c	;volatile
  5407                           
  5408                           ;pin_manager.c: 77: TRISC2 = 1;
  5409  010B94  8494               	bsf	3988,2,c	;volatile
  5410  010B96  0012               	return		;funcret
  5411  010B98                     __end_of_PIN_MANAGER_Initialize:
  5412                           	opt stack 0
  5413                           tblptru	equ	0xFF8
  5414                           tblptrh	equ	0xFF7
  5415                           tblptrl	equ	0xFF6
  5416                           tablat	equ	0xFF5
  5417                           prodh	equ	0xFF4
  5418                           prodl	equ	0xFF3
  5419                           intcon2	equ	0xFF1
  5420                           postinc0	equ	0xFEE
  5421                           wreg	equ	0xFE8
  5422                           postdec1	equ	0xFE5
  5423                           plusw1	equ	0xFE3
  5424                           fsr1l	equ	0xFE1
  5425                           indf2	equ	0xFDF
  5426                           postinc2	equ	0xFDE
  5427                           postdec2	equ	0xFDD
  5428                           plusw2	equ	0xFDB
  5429                           fsr2h	equ	0xFDA
  5430                           fsr2l	equ	0xFD9
  5431                           status	equ	0xFD8
  5432                           
  5433 ;; *************** function _OSCILLATOR_Initialize *****************
  5434 ;; Defined at:
  5435 ;;		line 109 in file "mcc_generated_files/mcc.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;		None
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;		None
  5440 ;; Return value:  Size  Location     Type
  5441 ;;		None               void
  5442 ;; Registers used:
  5443 ;;		None
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5453 ;;Total ram usage:        0 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_SYSTEM_Initialize
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text45
  5463  010DD4                     __ptext45:
  5464                           	opt stack 0
  5465  010DD4                     _OSCILLATOR_Initialize:
  5466                           	opt stack 29
  5467                           
  5468                           ;incstack = 0
  5469  010DD4  0012               	return		;funcret
  5470  010DD6                     __end_of_OSCILLATOR_Initialize:
  5471                           	opt stack 0
  5472                           tblptru	equ	0xFF8
  5473                           tblptrh	equ	0xFF7
  5474                           tblptrl	equ	0xFF6
  5475                           tablat	equ	0xFF5
  5476                           prodh	equ	0xFF4
  5477                           prodl	equ	0xFF3
  5478                           intcon2	equ	0xFF1
  5479                           postinc0	equ	0xFEE
  5480                           wreg	equ	0xFE8
  5481                           postdec1	equ	0xFE5
  5482                           plusw1	equ	0xFE3
  5483                           fsr1l	equ	0xFE1
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           plusw2	equ	0xFDB
  5488                           fsr2h	equ	0xFDA
  5489                           fsr2l	equ	0xFD9
  5490                           status	equ	0xFD8
  5491                           
  5492 ;; *************** function _LCD_Init *****************
  5493 ;; Defined at:
  5494 ;;		line 178 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;		None
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;		None
  5499 ;; Return value:  Size  Location     Type
  5500 ;;		None               void
  5501 ;; Registers used:
  5502 ;;		wreg, status,2, status,0, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5512 ;;Total ram usage:        0 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:    9
  5515 ;; This function calls:
  5516 ;;		_DelayMicroseconds
  5517 ;;		_I2C_Write_Byte_Single_Reg
  5518 ;;		_LCDclear
  5519 ;;		_LCDcommandWrite
  5520 ;;		_LCDdisplayOff
  5521 ;;		_LCDdisplayOn
  5522 ;;		_LCDwrite4bits
  5523 ;; This function is called by:
  5524 ;;		_SYSTEM_Initialize
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text46
  5529  010590                     __ptext46:
  5530                           	opt stack 0
  5531  010590                     _LCD_Init:
  5532                           	opt stack 20
  5533                           
  5534                           ;LCD_I2C_PCF8574.c: 180: _backlightval |= 0b00001000;
  5535                           
  5536                           ;incstack = 0
  5537  010590  8653               	bsf	__backlightval,3,c
  5538                           
  5539                           ;LCD_I2C_PCF8574.c: 181: _numlines = 4;
  5540  010592  0E04               	movlw	4
  5541  010594  6E59               	movwf	__numlines,c
  5542                           
  5543                           ;LCD_I2C_PCF8574.c: 184: DelayMicroseconds(50000);
  5544  010596  0EC3               	movlw	195
  5545  010598  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5546  01059A  0E50               	movlw	80
  5547  01059C  6E01               	movwf	DelayMicroseconds@delayTime,c
  5548  01059E  EC57  F085         	call	_DelayMicroseconds	;wreg free
  5549                           
  5550                           ;LCD_I2C_PCF8574.c: 187: I2C_Write_Byte_Single_Reg((0x27<<1), ((0b00000000 | 0b00000100)
      +                           & ~0b00000001) & (~0b00000010));
  5551  0105A2  0E04               	movlw	4
  5552  0105A4  6E03               	movwf	I2C_Write_Byte_Single_Reg@info,c
  5553  0105A6  0E4E               	movlw	78
  5554  0105A8  ECA7  F085         	call	_I2C_Write_Byte_Single_Reg
  5555                           
  5556                           ;LCD_I2C_PCF8574.c: 188: DelayMicroseconds(100);
  5557  0105AC  0E00               	movlw	0
  5558  0105AE  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5559  0105B0  0E64               	movlw	100
  5560  0105B2  6E01               	movwf	DelayMicroseconds@delayTime,c
  5561  0105B4  EC57  F085         	call	_DelayMicroseconds	;wreg free
  5562                           
  5563                           ;LCD_I2C_PCF8574.c: 193: LCDwrite4bits(0b00110000);
  5564  0105B8  0E30               	movlw	48
  5565  0105BA  EC33  F086         	call	_LCDwrite4bits
  5566                           
  5567                           ;LCD_I2C_PCF8574.c: 194: DelayMicroseconds(4500);
  5568  0105BE  0E11               	movlw	17
  5569  0105C0  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5570  0105C2  0E94               	movlw	148
  5571  0105C4  6E01               	movwf	DelayMicroseconds@delayTime,c
  5572  0105C6  EC57  F085         	call	_DelayMicroseconds	;wreg free
  5573                           
  5574                           ;LCD_I2C_PCF8574.c: 197: LCDwrite4bits(0b00110000);
  5575  0105CA  0E30               	movlw	48
  5576  0105CC  EC33  F086         	call	_LCDwrite4bits
  5577                           
  5578                           ;LCD_I2C_PCF8574.c: 198: DelayMicroseconds(150);
  5579  0105D0  0E00               	movlw	0
  5580  0105D2  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5581  0105D4  0E96               	movlw	150
  5582  0105D6  6E01               	movwf	DelayMicroseconds@delayTime,c
  5583  0105D8  EC57  F085         	call	_DelayMicroseconds	;wreg free
  5584                           
  5585                           ;LCD_I2C_PCF8574.c: 201: LCDwrite4bits(0b00110000);
  5586  0105DC  0E30               	movlw	48
  5587  0105DE  EC33  F086         	call	_LCDwrite4bits
  5588                           
  5589                           ;LCD_I2C_PCF8574.c: 202: DelayMicroseconds(150);
  5590  0105E2  0E00               	movlw	0
  5591  0105E4  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5592  0105E6  0E96               	movlw	150
  5593  0105E8  6E01               	movwf	DelayMicroseconds@delayTime,c
  5594  0105EA  EC57  F085         	call	_DelayMicroseconds	;wreg free
  5595                           
  5596                           ;LCD_I2C_PCF8574.c: 205: LCDwrite4bits(0b00100000);
  5597  0105EE  0E20               	movlw	32
  5598  0105F0  EC33  F086         	call	_LCDwrite4bits
  5599                           
  5600                           ;LCD_I2C_PCF8574.c: 206: DelayMicroseconds(150);
  5601  0105F4  0E00               	movlw	0
  5602  0105F6  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5603  0105F8  0E96               	movlw	150
  5604  0105FA  6E01               	movwf	DelayMicroseconds@delayTime,c
  5605  0105FC  EC57  F085         	call	_DelayMicroseconds	;wreg free
  5606                           
  5607                           ;LCD_I2C_PCF8574.c: 209: _functionset = 0x00 | 0x08 | 0x00;
  5608  010600  0E08               	movlw	8
  5609  010602  6E57               	movwf	__functionset,c
  5610                           
  5611                           ;LCD_I2C_PCF8574.c: 210: LCDcommandWrite(0x20 | _functionset);
  5612  010604  5057               	movf	__functionset,w,c
  5613  010606  0920               	iorlw	32
  5614  010608  EC7D  F086         	call	_LCDcommandWrite
  5615                           
  5616                           ;LCD_I2C_PCF8574.c: 213: _displayfunction = 0x00 | 0x00 | 0x00;
  5617  01060C  0E00               	movlw	0
  5618  01060E  6E55               	movwf	__displayfunction,c
  5619                           
  5620                           ;LCD_I2C_PCF8574.c: 214: LCDdisplayOff();
  5621  010610  ECC6  F086         	call	_LCDdisplayOff	;wreg free
  5622                           
  5623                           ;LCD_I2C_PCF8574.c: 217: LCDdisplayOn();
  5624  010614  ECC0  F086         	call	_LCDdisplayOn	;wreg free
  5625                           
  5626                           ;LCD_I2C_PCF8574.c: 220: _entrymodeset = 0x02 | 0x00;
  5627  010618  0E02               	movlw	2
  5628  01061A  6E56               	movwf	__entrymodeset,c
  5629                           
  5630                           ;LCD_I2C_PCF8574.c: 221: LCDcommandWrite(0x04 | _entrymodeset);
  5631  01061C  5056               	movf	__entrymodeset,w,c
  5632  01061E  0904               	iorlw	4
  5633  010620  EC7D  F086         	call	_LCDcommandWrite
  5634                           
  5635                           ;LCD_I2C_PCF8574.c: 225: LCDcommandWrite(0x08 | _displayfunction);
  5636  010624  5055               	movf	__displayfunction,w,c
  5637  010626  0908               	iorlw	8
  5638  010628  EC7D  F086         	call	_LCDcommandWrite
  5639                           
  5640                           ;LCD_I2C_PCF8574.c: 228: _displaycontrol = 0x08 | 0x00;
  5641  01062C  0E08               	movlw	8
  5642  01062E  6E54               	movwf	__displaycontrol,c
  5643                           
  5644                           ;LCD_I2C_PCF8574.c: 229: LCDcommandWrite(0x10 | _displaycontrol);
  5645  010630  5054               	movf	__displaycontrol,w,c
  5646  010632  0910               	iorlw	16
  5647  010634  EC7D  F086         	call	_LCDcommandWrite
  5648                           
  5649                           ;LCD_I2C_PCF8574.c: 232: LCDclear();
  5650  010638  EC29  F086         	call	_LCDclear	;wreg free
  5651  01063C  0012               	return		;funcret
  5652  01063E                     __end_of_LCD_Init:
  5653                           	opt stack 0
  5654                           tblptru	equ	0xFF8
  5655                           tblptrh	equ	0xFF7
  5656                           tblptrl	equ	0xFF6
  5657                           tablat	equ	0xFF5
  5658                           prodh	equ	0xFF4
  5659                           prodl	equ	0xFF3
  5660                           intcon2	equ	0xFF1
  5661                           postinc0	equ	0xFEE
  5662                           wreg	equ	0xFE8
  5663                           postdec1	equ	0xFE5
  5664                           plusw1	equ	0xFE3
  5665                           fsr1l	equ	0xFE1
  5666                           indf2	equ	0xFDF
  5667                           postinc2	equ	0xFDE
  5668                           postdec2	equ	0xFDD
  5669                           plusw2	equ	0xFDB
  5670                           fsr2h	equ	0xFDA
  5671                           fsr2l	equ	0xFD9
  5672                           status	equ	0xFD8
  5673                           
  5674 ;; *************** function _LCDdisplayOn *****************
  5675 ;; Defined at:
  5676 ;;		line 290 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;		None
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;		None
  5681 ;; Return value:  Size  Location     Type
  5682 ;;		None               void
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;Total ram usage:        0 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:    8
  5697 ;; This function calls:
  5698 ;;		_LCDcommandWrite
  5699 ;; This function is called by:
  5700 ;;		_LCD_Init
  5701 ;;		_displayOnOff
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           	psect	text47
  5706  010D80                     __ptext47:
  5707                           	opt stack 0
  5708  010D80                     _LCDdisplayOn:
  5709                           	opt stack 20
  5710                           
  5711                           ;LCD_I2C_PCF8574.c: 291: _displayfunction |= 0x04;
  5712                           
  5713                           ;incstack = 0
  5714  010D80  8455               	bsf	__displayfunction,2,c
  5715                           
  5716                           ;LCD_I2C_PCF8574.c: 292: LCDcommandWrite(0x08 | _displayfunction);
  5717  010D82  5055               	movf	__displayfunction,w,c
  5718  010D84  0908               	iorlw	8
  5719  010D86  EC7D  F086         	call	_LCDcommandWrite
  5720  010D8A  0012               	return		;funcret
  5721  010D8C                     __end_of_LCDdisplayOn:
  5722                           	opt stack 0
  5723                           tblptru	equ	0xFF8
  5724                           tblptrh	equ	0xFF7
  5725                           tblptrl	equ	0xFF6
  5726                           tablat	equ	0xFF5
  5727                           prodh	equ	0xFF4
  5728                           prodl	equ	0xFF3
  5729                           intcon2	equ	0xFF1
  5730                           postinc0	equ	0xFEE
  5731                           wreg	equ	0xFE8
  5732                           postdec1	equ	0xFE5
  5733                           plusw1	equ	0xFE3
  5734                           fsr1l	equ	0xFE1
  5735                           indf2	equ	0xFDF
  5736                           postinc2	equ	0xFDE
  5737                           postdec2	equ	0xFDD
  5738                           plusw2	equ	0xFDB
  5739                           fsr2h	equ	0xFDA
  5740                           fsr2l	equ	0xFD9
  5741                           status	equ	0xFD8
  5742                           
  5743 ;; *************** function _LCDdisplayOff *****************
  5744 ;; Defined at:
  5745 ;;		line 285 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;		None               void
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    8
  5766 ;; This function calls:
  5767 ;;		_LCDcommandWrite
  5768 ;; This function is called by:
  5769 ;;		_LCD_Init
  5770 ;;		_displayOnOff
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text48
  5775  010D8C                     __ptext48:
  5776                           	opt stack 0
  5777  010D8C                     _LCDdisplayOff:
  5778                           	opt stack 20
  5779                           
  5780                           ;LCD_I2C_PCF8574.c: 286: _displayfunction &= ~0x04;
  5781                           
  5782                           ;incstack = 0
  5783  010D8C  9455               	bcf	__displayfunction,2,c
  5784                           
  5785                           ;LCD_I2C_PCF8574.c: 287: LCDcommandWrite(0x08 | _displayfunction);
  5786  010D8E  5055               	movf	__displayfunction,w,c
  5787  010D90  0908               	iorlw	8
  5788  010D92  EC7D  F086         	call	_LCDcommandWrite
  5789  010D96  0012               	return		;funcret
  5790  010D98                     __end_of_LCDdisplayOff:
  5791                           	opt stack 0
  5792                           tblptru	equ	0xFF8
  5793                           tblptrh	equ	0xFF7
  5794                           tblptrl	equ	0xFF6
  5795                           tablat	equ	0xFF5
  5796                           prodh	equ	0xFF4
  5797                           prodl	equ	0xFF3
  5798                           intcon2	equ	0xFF1
  5799                           postinc0	equ	0xFEE
  5800                           wreg	equ	0xFE8
  5801                           postdec1	equ	0xFE5
  5802                           plusw1	equ	0xFE3
  5803                           fsr1l	equ	0xFE1
  5804                           indf2	equ	0xFDF
  5805                           postinc2	equ	0xFDE
  5806                           postdec2	equ	0xFDD
  5807                           plusw2	equ	0xFDB
  5808                           fsr2h	equ	0xFDA
  5809                           fsr2l	equ	0xFD9
  5810                           status	equ	0xFD8
  5811                           
  5812 ;; *************** function _LCDclear *****************
  5813 ;; Defined at:
  5814 ;;		line 256 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;		None               void
  5821 ;; Registers used:
  5822 ;;		wreg, status,2, status,0, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;Total ram usage:        0 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    8
  5835 ;; This function calls:
  5836 ;;		_DelayMicroseconds
  5837 ;;		_LCDcommandWrite
  5838 ;; This function is called by:
  5839 ;;		_LCD_Init
  5840 ;;		_autoIncrement
  5841 ;;		_displayLeftRightScroll
  5842 ;;		_displayOnOff
  5843 ;;		_backLightControl
  5844 ;;		_printAt
  5845 ;;		_cursorControl
  5846 ;;		_printLeftAndRight
  5847 ;;		_controlMemoryReading
  5848 ;;		_dataMemoryReading
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           	psect	text49
  5853  010C52                     __ptext49:
  5854                           	opt stack 0
  5855  010C52                     _LCDclear:
  5856                           	opt stack 20
  5857                           
  5858                           ;LCD_I2C_PCF8574.c: 257: LCDcommandWrite(0x01);
  5859                           
  5860                           ;incstack = 0
  5861  010C52  0E01               	movlw	1
  5862  010C54  EC7D  F086         	call	_LCDcommandWrite
  5863                           
  5864                           ;LCD_I2C_PCF8574.c: 261: DelayMicroseconds(30000);
  5865  010C58  0E75               	movlw	117
  5866  010C5A  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5867  010C5C  0E30               	movlw	48
  5868  010C5E  6E01               	movwf	DelayMicroseconds@delayTime,c
  5869  010C60  EC57  F085         	call	_DelayMicroseconds	;wreg free
  5870  010C64  0012               	return		;funcret
  5871  010C66                     __end_of_LCDclear:
  5872                           	opt stack 0
  5873                           tblptru	equ	0xFF8
  5874                           tblptrh	equ	0xFF7
  5875                           tblptrl	equ	0xFF6
  5876                           tablat	equ	0xFF5
  5877                           prodh	equ	0xFF4
  5878                           prodl	equ	0xFF3
  5879                           intcon2	equ	0xFF1
  5880                           postinc0	equ	0xFEE
  5881                           wreg	equ	0xFE8
  5882                           postdec1	equ	0xFE5
  5883                           plusw1	equ	0xFE3
  5884                           fsr1l	equ	0xFE1
  5885                           indf2	equ	0xFDF
  5886                           postinc2	equ	0xFDE
  5887                           postdec2	equ	0xFDD
  5888                           plusw2	equ	0xFDB
  5889                           fsr2h	equ	0xFDA
  5890                           fsr2l	equ	0xFD9
  5891                           status	equ	0xFD8
  5892                           
  5893 ;; *************** function _LCDcommandWrite *****************
  5894 ;; Defined at:
  5895 ;;		line 382 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  value           1    wreg     unsigned char 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  value           1   11[COMRAM] unsigned char 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;		None               void
  5902 ;; Registers used:
  5903 ;;		wreg, status,2, status,0, cstack
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5913 ;;Total ram usage:        1 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    7
  5916 ;; This function calls:
  5917 ;;		_LCDsend
  5918 ;; This function is called by:
  5919 ;;		_LCD_Init
  5920 ;;		_LCDclear
  5921 ;;		_LCDhome
  5922 ;;		_LCDsetCursor
  5923 ;;		_LCDdisplayOff
  5924 ;;		_LCDdisplayOn
  5925 ;;		_LCDcursorOff
  5926 ;;		_LCDcursorOn
  5927 ;;		_LCDblinkOff
  5928 ;;		_LCDblinkOn
  5929 ;;		_LCDscrollDisplayLeft
  5930 ;;		_LCDscrollDisplayRight
  5931 ;;		_LCDleftToRight
  5932 ;;		_LCDrightToLeft
  5933 ;;		_LCDautoscroll
  5934 ;;		_LCDnoAutoscroll
  5935 ;;		_LCDcreateChar
  5936 ;;		_LCDreadDDRam
  5937 ;;		_LCDreadCGRam
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text50
  5942  010CFA                     __ptext50:
  5943                           	opt stack 0
  5944  010CFA                     _LCDcommandWrite:
  5945                           	opt stack 20
  5946                           
  5947                           ;incstack = 0
  5948                           ;LCDcommandWrite@value stored from wreg
  5949  010CFA  6E0C               	movwf	LCDcommandWrite@value,c
  5950                           
  5951                           ;LCD_I2C_PCF8574.c: 383: LCDsend(value, 0b00000001 & ~0b00000001);
  5952  010CFC  0E00               	movlw	0
  5953  010CFE  6E08               	movwf	LCDsend@RsMode,c
  5954  010D00  500C               	movf	LCDcommandWrite@value,w,c
  5955  010D02  EC80  F085         	call	_LCDsend
  5956  010D06  0012               	return		;funcret
  5957  010D08                     __end_of_LCDcommandWrite:
  5958                           	opt stack 0
  5959                           tblptru	equ	0xFF8
  5960                           tblptrh	equ	0xFF7
  5961                           tblptrl	equ	0xFF6
  5962                           tablat	equ	0xFF5
  5963                           prodh	equ	0xFF4
  5964                           prodl	equ	0xFF3
  5965                           intcon2	equ	0xFF1
  5966                           postinc0	equ	0xFEE
  5967                           wreg	equ	0xFE8
  5968                           postdec1	equ	0xFE5
  5969                           plusw1	equ	0xFE3
  5970                           fsr1l	equ	0xFE1
  5971                           indf2	equ	0xFDF
  5972                           postinc2	equ	0xFDE
  5973                           postdec2	equ	0xFDD
  5974                           plusw2	equ	0xFDB
  5975                           fsr2h	equ	0xFDA
  5976                           fsr2l	equ	0xFD9
  5977                           status	equ	0xFD8
  5978                           
  5979 ;; *************** function _LCDsend *****************
  5980 ;; Defined at:
  5981 ;;		line 423 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  value           1    wreg     unsigned char 
  5984 ;;  RsMode          1    7[COMRAM] unsigned char 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  value           1   10[COMRAM] unsigned char 
  5987 ;;  lownib          1    9[COMRAM] unsigned char 
  5988 ;;  highnib         1    8[COMRAM] unsigned char 
  5989 ;; Return value:  Size  Location     Type
  5990 ;;		None               void
  5991 ;; Registers used:
  5992 ;;		wreg, status,2, status,0, cstack
  5993 ;; Tracked objects:
  5994 ;;		On entry : 0/0
  5995 ;;		On exit  : 0/0
  5996 ;;		Unchanged: 0/0
  5997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5998 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5999 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;Total ram usage:        4 bytes
  6003 ;; Hardware stack levels used:    1
  6004 ;; Hardware stack levels required when called:    6
  6005 ;; This function calls:
  6006 ;;		_LCDwrite4bits
  6007 ;; This function is called by:
  6008 ;;		_LCDcommandWrite
  6009 ;;		_LCDdataWrite
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text51
  6014  010B00                     __ptext51:
  6015                           	opt stack 0
  6016  010B00                     _LCDsend:
  6017                           	opt stack 20
  6018                           
  6019                           ;incstack = 0
  6020                           ;LCDsend@value stored from wreg
  6021  010B00  6E0B               	movwf	LCDsend@value,c
  6022                           
  6023                           ;LCD_I2C_PCF8574.c: 424: unsigned char highnib = value & 0xF0;
  6024  010B02  500B               	movf	LCDsend@value,w,c
  6025  010B04  0BF0               	andlw	240
  6026  010B06  6E09               	movwf	LCDsend@highnib,c
  6027                           
  6028                           ;LCD_I2C_PCF8574.c: 426: unsigned char lownib = value << 4;
  6029  010B08  380B               	swapf	LCDsend@value,w,c
  6030  010B0A  0BF0               	andlw	240
  6031  010B0C  6E0A               	movwf	LCDsend@lownib,c
  6032                           
  6033                           ;LCD_I2C_PCF8574.c: 427: lownib &= 0xF0;
  6034  010B0E  0EF0               	movlw	240
  6035  010B10  160A               	andwf	LCDsend@lownib,f,c
  6036                           
  6037                           ;LCD_I2C_PCF8574.c: 429: LCDwrite4bits((highnib) | 0b00000100 | RsMode);
  6038  010B12  5009               	movf	LCDsend@highnib,w,c
  6039  010B14  1008               	iorwf	LCDsend@RsMode,w,c
  6040  010B16  0904               	iorlw	4
  6041  010B18  EC33  F086         	call	_LCDwrite4bits
  6042                           
  6043                           ;LCD_I2C_PCF8574.c: 430: LCDwrite4bits((lownib ) | 0b00000100 | RsMode);
  6044  010B1C  500A               	movf	LCDsend@lownib,w,c
  6045  010B1E  1008               	iorwf	LCDsend@RsMode,w,c
  6046  010B20  0904               	iorlw	4
  6047  010B22  EC33  F086         	call	_LCDwrite4bits
  6048  010B26  0012               	return		;funcret
  6049  010B28                     __end_of_LCDsend:
  6050                           	opt stack 0
  6051                           tblptru	equ	0xFF8
  6052                           tblptrh	equ	0xFF7
  6053                           tblptrl	equ	0xFF6
  6054                           tablat	equ	0xFF5
  6055                           prodh	equ	0xFF4
  6056                           prodl	equ	0xFF3
  6057                           intcon2	equ	0xFF1
  6058                           postinc0	equ	0xFEE
  6059                           wreg	equ	0xFE8
  6060                           postdec1	equ	0xFE5
  6061                           plusw1	equ	0xFE3
  6062                           fsr1l	equ	0xFE1
  6063                           indf2	equ	0xFDF
  6064                           postinc2	equ	0xFDE
  6065                           postdec2	equ	0xFDD
  6066                           plusw2	equ	0xFDB
  6067                           fsr2h	equ	0xFDA
  6068                           fsr2l	equ	0xFD9
  6069                           status	equ	0xFD8
  6070                           
  6071 ;; *************** function _LCDwrite4bits *****************
  6072 ;; Defined at:
  6073 ;;		line 449 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  nibEnRsMode     1    wreg     unsigned char 
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;  nibEnRsMode     1    6[COMRAM] unsigned char 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;		None               void
  6080 ;; Registers used:
  6081 ;;		wreg, status,2, status,0, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6090 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6091 ;;Total ram usage:        1 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:    5
  6094 ;; This function calls:
  6095 ;;		_LCDpulseEnableNeg
  6096 ;;		_LCDwritePCF8574
  6097 ;; This function is called by:
  6098 ;;		_LCD_Init
  6099 ;;		_LCDsend
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text52
  6104  010C66                     __ptext52:
  6105                           	opt stack 0
  6106  010C66                     _LCDwrite4bits:
  6107                           	opt stack 20
  6108                           
  6109                           ;incstack = 0
  6110                           ;LCDwrite4bits@nibEnRsMode stored from wreg
  6111  010C66  6E07               	movwf	LCDwrite4bits@nibEnRsMode,c
  6112                           
  6113                           ;LCD_I2C_PCF8574.c: 450: LCDwritePCF8574(nibEnRsMode & ~0b00000010);
  6114  010C68  5007               	movf	LCDwrite4bits@nibEnRsMode,w,c
  6115  010C6A  0BFD               	andlw	253
  6116  010C6C  EC58  F086         	call	_LCDwritePCF8574
  6117                           
  6118                           ;LCD_I2C_PCF8574.c: 451: LCDpulseEnableNeg(nibEnRsMode & ~0b00000010);
  6119  010C70  5007               	movf	LCDwrite4bits@nibEnRsMode,w,c
  6120  010C72  0BFD               	andlw	253
  6121  010C74  EC41  F085         	call	_LCDpulseEnableNeg
  6122  010C78  0012               	return		;funcret
  6123  010C7A                     __end_of_LCDwrite4bits:
  6124                           	opt stack 0
  6125                           tblptru	equ	0xFF8
  6126                           tblptrh	equ	0xFF7
  6127                           tblptrl	equ	0xFF6
  6128                           tablat	equ	0xFF5
  6129                           prodh	equ	0xFF4
  6130                           prodl	equ	0xFF3
  6131                           intcon2	equ	0xFF1
  6132                           postinc0	equ	0xFEE
  6133                           wreg	equ	0xFE8
  6134                           postdec1	equ	0xFE5
  6135                           plusw1	equ	0xFE3
  6136                           fsr1l	equ	0xFE1
  6137                           indf2	equ	0xFDF
  6138                           postinc2	equ	0xFDE
  6139                           postdec2	equ	0xFDD
  6140                           plusw2	equ	0xFDB
  6141                           fsr2h	equ	0xFDA
  6142                           fsr2l	equ	0xFD9
  6143                           status	equ	0xFD8
  6144                           
  6145 ;; *************** function _LCDpulseEnableNeg *****************
  6146 ;; Defined at:
  6147 ;;		line 463 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  _data           1    wreg     unsigned char 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  _data           1    5[COMRAM] unsigned char 
  6152 ;; Return value:  Size  Location     Type
  6153 ;;		None               void
  6154 ;; Registers used:
  6155 ;;		wreg, status,2, status,0, cstack
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;Total ram usage:        1 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:    4
  6168 ;; This function calls:
  6169 ;;		_DelayMicroseconds
  6170 ;;		_LCDwritePCF8574
  6171 ;; This function is called by:
  6172 ;;		_LCDwrite4bits
  6173 ;;		_LCDread4bits
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text53
  6178  010A82                     __ptext53:
  6179                           	opt stack 0
  6180  010A82                     _LCDpulseEnableNeg:
  6181                           	opt stack 20
  6182                           
  6183                           ;incstack = 0
  6184                           ;LCDpulseEnableNeg@_data stored from wreg
  6185  010A82  6E06               	movwf	LCDpulseEnableNeg@_data,c
  6186                           
  6187                           ;LCD_I2C_PCF8574.c: 464: LCDwritePCF8574(_data | 0b00000100);
  6188  010A84  5006               	movf	LCDpulseEnableNeg@_data,w,c
  6189  010A86  0904               	iorlw	4
  6190  010A88  EC58  F086         	call	_LCDwritePCF8574
  6191                           
  6192                           ;LCD_I2C_PCF8574.c: 465: DelayMicroseconds(1);
  6193  010A8C  0E00               	movlw	0
  6194  010A8E  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  6195  010A90  0E01               	movlw	1
  6196  010A92  6E01               	movwf	DelayMicroseconds@delayTime,c
  6197  010A94  EC57  F085         	call	_DelayMicroseconds	;wreg free
  6198                           
  6199                           ;LCD_I2C_PCF8574.c: 467: LCDwritePCF8574(_data & ~0b00000100);
  6200  010A98  5006               	movf	LCDpulseEnableNeg@_data,w,c
  6201  010A9A  0BFB               	andlw	251
  6202  010A9C  EC58  F086         	call	_LCDwritePCF8574
  6203                           
  6204                           ;LCD_I2C_PCF8574.c: 468: DelayMicroseconds(50);
  6205  010AA0  0E00               	movlw	0
  6206  010AA2  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  6207  010AA4  0E32               	movlw	50
  6208  010AA6  6E01               	movwf	DelayMicroseconds@delayTime,c
  6209  010AA8  EC57  F085         	call	_DelayMicroseconds	;wreg free
  6210  010AAC  0012               	return		;funcret
  6211  010AAE                     __end_of_LCDpulseEnableNeg:
  6212                           	opt stack 0
  6213                           tblptru	equ	0xFF8
  6214                           tblptrh	equ	0xFF7
  6215                           tblptrl	equ	0xFF6
  6216                           tablat	equ	0xFF5
  6217                           prodh	equ	0xFF4
  6218                           prodl	equ	0xFF3
  6219                           intcon2	equ	0xFF1
  6220                           postinc0	equ	0xFEE
  6221                           wreg	equ	0xFE8
  6222                           postdec1	equ	0xFE5
  6223                           plusw1	equ	0xFE3
  6224                           fsr1l	equ	0xFE1
  6225                           indf2	equ	0xFDF
  6226                           postinc2	equ	0xFDE
  6227                           postdec2	equ	0xFDD
  6228                           plusw2	equ	0xFDB
  6229                           fsr2h	equ	0xFDA
  6230                           fsr2l	equ	0xFD9
  6231                           status	equ	0xFD8
  6232                           
  6233 ;; *************** function _LCDwritePCF8574 *****************
  6234 ;; Defined at:
  6235 ;;		line 480 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  value           1    wreg     unsigned char 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;  value           1    4[COMRAM] unsigned char 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;		None               void
  6242 ;; Registers used:
  6243 ;;		wreg, status,2, status,0, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6253 ;;Total ram usage:        1 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; Hardware stack levels required when called:    3
  6256 ;; This function calls:
  6257 ;;		_I2C_Write_Byte_Single_Reg
  6258 ;; This function is called by:
  6259 ;;		_LCDnoBacklight
  6260 ;;		_LCDbacklight
  6261 ;;		_LCDreceive
  6262 ;;		_LCDwrite4bits
  6263 ;;		_LCDpulseEnableNeg
  6264 ;;		_LCDpulseEnablePos
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text54
  6269  010CB0                     __ptext54:
  6270                           	opt stack 0
  6271  010CB0                     _LCDwritePCF8574:
  6272                           	opt stack 21
  6273                           
  6274                           ;incstack = 0
  6275                           ;LCDwritePCF8574@value stored from wreg
  6276  010CB0  6E05               	movwf	LCDwritePCF8574@value,c
  6277                           
  6278                           ;LCD_I2C_PCF8574.c: 481: I2C_Write_Byte_Single_Reg((0x27<<1), value | _backlightval);
  6279  010CB2  5005               	movf	LCDwritePCF8574@value,w,c
  6280  010CB4  1053               	iorwf	__backlightval,w,c
  6281  010CB6  6E03               	movwf	I2C_Write_Byte_Single_Reg@info,c
  6282  010CB8  0E4E               	movlw	78
  6283  010CBA  ECA7  F085         	call	_I2C_Write_Byte_Single_Reg
  6284  010CBE  0012               	return		;funcret
  6285  010CC0                     __end_of_LCDwritePCF8574:
  6286                           	opt stack 0
  6287                           tblptru	equ	0xFF8
  6288                           tblptrh	equ	0xFF7
  6289                           tblptrl	equ	0xFF6
  6290                           tablat	equ	0xFF5
  6291                           prodh	equ	0xFF4
  6292                           prodl	equ	0xFF3
  6293                           intcon2	equ	0xFF1
  6294                           postinc0	equ	0xFEE
  6295                           wreg	equ	0xFE8
  6296                           postdec1	equ	0xFE5
  6297                           plusw1	equ	0xFE3
  6298                           fsr1l	equ	0xFE1
  6299                           indf2	equ	0xFDF
  6300                           postinc2	equ	0xFDE
  6301                           postdec2	equ	0xFDD
  6302                           plusw2	equ	0xFDB
  6303                           fsr2h	equ	0xFDA
  6304                           fsr2l	equ	0xFD9
  6305                           status	equ	0xFD8
  6306                           
  6307 ;; *************** function _I2C_Write_Byte_Single_Reg *****************
  6308 ;; Defined at:
  6309 ;;		line 63 in file "i2c_utils_files/I2C_UTILS.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  device          1    wreg     unsigned char 
  6312 ;;  info            1    2[COMRAM] unsigned char 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  device          1    3[COMRAM] unsigned char 
  6315 ;; Return value:  Size  Location     Type
  6316 ;;		None               void
  6317 ;; Registers used:
  6318 ;;		wreg, status,2, status,0, cstack
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6324 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6328 ;;Total ram usage:        2 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; Hardware stack levels required when called:    2
  6331 ;; This function calls:
  6332 ;;		_IdleI2C
  6333 ;;		_WriteI2C
  6334 ;; This function is called by:
  6335 ;;		_LCD_Init
  6336 ;;		_LCDwritePCF8574
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339                           
  6340                           	psect	text55
  6341  010B4E                     __ptext55:
  6342                           	opt stack 0
  6343  010B4E                     _I2C_Write_Byte_Single_Reg:
  6344                           	opt stack 21
  6345                           
  6346                           ;incstack = 0
  6347                           ;I2C_Write_Byte_Single_Reg@device stored from wreg
  6348  010B4E  6E04               	movwf	I2C_Write_Byte_Single_Reg@device,c
  6349                           
  6350                           ;I2C_UTILS.c: 65: IdleI2C();
  6351  010B50  EC4F  F086         	call	_IdleI2C	;wreg free
  6352                           
  6353                           ;I2C_UTILS.c: 66: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  6354  010B54  80C5               	bsf	4037,0,c	;volatile
  6355  010B56                     l46:
  6356  010B56  B0C5               	btfsc	4037,0,c	;volatile
  6357  010B58  D7FE               	goto	l46
  6358                           
  6359                           ;I2C_UTILS.c: 67: WriteI2C(device & 0b11111110);
  6360  010B5A  5004               	movf	I2C_Write_Byte_Single_Reg@device,w,c
  6361  010B5C  0BFE               	andlw	254
  6362  010B5E  EC76  F084         	call	_WriteI2C
  6363                           
  6364                           ;I2C_UTILS.c: 68: IdleI2C();
  6365  010B62  EC4F  F086         	call	_IdleI2C	;wreg free
  6366                           
  6367                           ;I2C_UTILS.c: 69: WriteI2C(info);
  6368  010B66  5003               	movf	I2C_Write_Byte_Single_Reg@info,w,c
  6369  010B68  EC76  F084         	call	_WriteI2C
  6370                           
  6371                           ;I2C_UTILS.c: 70: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  6372  010B6C  84C5               	bsf	4037,2,c	;volatile
  6373  010B6E                     l49:
  6374  010B6E  A4C5               	btfss	4037,2,c	;volatile
  6375  010B70  0012               	return	
  6376  010B72  D7FD               	goto	l49
  6377  010B74                     __end_of_I2C_Write_Byte_Single_Reg:
  6378                           	opt stack 0
  6379                           tblptru	equ	0xFF8
  6380                           tblptrh	equ	0xFF7
  6381                           tblptrl	equ	0xFF6
  6382                           tablat	equ	0xFF5
  6383                           prodh	equ	0xFF4
  6384                           prodl	equ	0xFF3
  6385                           intcon2	equ	0xFF1
  6386                           postinc0	equ	0xFEE
  6387                           wreg	equ	0xFE8
  6388                           postdec1	equ	0xFE5
  6389                           plusw1	equ	0xFE3
  6390                           fsr1l	equ	0xFE1
  6391                           indf2	equ	0xFDF
  6392                           postinc2	equ	0xFDE
  6393                           postdec2	equ	0xFDD
  6394                           plusw2	equ	0xFDB
  6395                           fsr2h	equ	0xFDA
  6396                           fsr2l	equ	0xFD9
  6397                           status	equ	0xFD8
  6398                           
  6399 ;; *************** function _WriteI2C *****************
  6400 ;; Defined at:
  6401 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c_writ.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  data_out        1    wreg     unsigned char 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;  data_out        1    1[COMRAM] unsigned char 
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  1    wreg      char 
  6408 ;; Registers used:
  6409 ;;		wreg, status,2, status,0, cstack
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;Total ram usage:        1 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; Hardware stack levels required when called:    1
  6422 ;; This function calls:
  6423 ;;		_IdleI2C
  6424 ;; This function is called by:
  6425 ;;		_I2C_Write_Byte_Single_Reg
  6426 ;;		_I2C_Read_Byte_Single_Reg
  6427 ;;		_I2C_Write_Byte
  6428 ;;		_I2C_Read_Byte
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text56
  6433  0108EC                     __ptext56:
  6434                           	opt stack 0
  6435  0108EC                     _WriteI2C:
  6436                           	opt stack 21
  6437                           
  6438                           ;incstack = 0
  6439                           ;WriteI2C@data_out stored from wreg
  6440  0108EC  6E02               	movwf	WriteI2C@data_out,c
  6441  0108EE  C002  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  6442  0108F2  BEC6               	btfsc	4038,7,c	;volatile
  6443  0108F4  0012               	return	
  6444                           
  6445                           ;	Return value of _WriteI2C is never used
  6446  0108F6  50C6               	movf	4038,w,c	;volatile
  6447  0108F8  0B0F               	andlw	15
  6448  0108FA  0A08               	xorlw	8
  6449  0108FC  B4D8               	btfsc	status,2,c
  6450  0108FE  D00C               	goto	l1924
  6451  010900  50C6               	movf	4038,w,c	;volatile
  6452  010902  0B0F               	andlw	15
  6453  010904  0A0B               	xorlw	11
  6454  010906  B4D8               	btfsc	status,2,c
  6455  010908  D007               	goto	l1924
  6456  01090A  88C6               	bsf	4038,4,c	;volatile
  6457  01090C                     l519:
  6458  01090C  A69E               	btfss	3998,3,c	;volatile
  6459  01090E  D7FE               	goto	l519
  6460  010910  B4C7               	btfsc	4039,2,c	;volatile
  6461  010912  0012               	return	
  6462  010914  50C7               	movf	4039,w,c	;volatile
  6463                           
  6464                           ;	Return value of _WriteI2C is never used
  6465                           
  6466                           ;	Return value of _WriteI2C is never used
  6467  010916  0012               	return	
  6468  010918                     l1924:
  6469  010918  50C6               	movf	4038,w,c	;volatile
  6470  01091A  0B0F               	andlw	15
  6471  01091C  0A08               	xorlw	8
  6472  01091E  B4D8               	btfsc	status,2,c
  6473  010920  D005               	goto	l528
  6474  010922  50C6               	movf	4038,w,c	;volatile
  6475  010924  0B0F               	andlw	15
  6476  010926  0A0B               	xorlw	11
  6477  010928  A4D8               	btfss	status,2,c
  6478  01092A  0012               	return	
  6479  01092C                     l528:
  6480  01092C  B0C7               	btfsc	4039,0,c	;volatile
  6481  01092E  D7FE               	goto	l528
  6482  010930  EC4F  F086         	call	_IdleI2C	;wreg free
  6483  010934  50C5               	movf	4037,w,c	;volatile
  6484                           
  6485                           ;	Return value of _WriteI2C is never used
  6486                           
  6487                           ;	Return value of _WriteI2C is never used
  6488  010936  0012               	return	
  6489  010938                     __end_of_WriteI2C:
  6490                           	opt stack 0
  6491                           tblptru	equ	0xFF8
  6492                           tblptrh	equ	0xFF7
  6493                           tblptrl	equ	0xFF6
  6494                           tablat	equ	0xFF5
  6495                           prodh	equ	0xFF4
  6496                           prodl	equ	0xFF3
  6497                           intcon2	equ	0xFF1
  6498                           postinc0	equ	0xFEE
  6499                           wreg	equ	0xFE8
  6500                           postdec1	equ	0xFE5
  6501                           plusw1	equ	0xFE3
  6502                           fsr1l	equ	0xFE1
  6503                           indf2	equ	0xFDF
  6504                           postinc2	equ	0xFDE
  6505                           postdec2	equ	0xFDD
  6506                           plusw2	equ	0xFDB
  6507                           fsr2h	equ	0xFDA
  6508                           fsr2l	equ	0xFD9
  6509                           status	equ	0xFD8
  6510                           
  6511 ;; *************** function _IdleI2C *****************
  6512 ;; Defined at:
  6513 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c_idle.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;		None
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;		None
  6518 ;; Return value:  Size  Location     Type
  6519 ;;		None               void
  6520 ;; Registers used:
  6521 ;;		wreg, status,2, status,0
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;Total ram usage:        1 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_I2C_Write_Byte_Single_Reg
  6537 ;;		_I2C_Read_Byte_Single_Reg
  6538 ;;		_WriteI2C
  6539 ;;		_I2C_Write_Byte
  6540 ;;		_I2C_Read_Byte
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text57
  6545  010C9E                     __ptext57:
  6546                           	opt stack 0
  6547  010C9E                     _IdleI2C:
  6548                           	opt stack 21
  6549  010C9E                     l1900:
  6550  010C9E  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  6551  010CA2  0E1F               	movlw	31
  6552  010CA4  1601               	andwf	??_IdleI2C,f,c
  6553  010CA6  A4D8               	btfss	status,2,c
  6554  010CA8  D7FA               	goto	l1900
  6555  010CAA  A4C7               	btfss	4039,2,c	;volatile
  6556  010CAC  0012               	return	
  6557  010CAE  D7F7               	goto	l1900
  6558  010CB0                     __end_of_IdleI2C:
  6559                           	opt stack 0
  6560                           tblptru	equ	0xFF8
  6561                           tblptrh	equ	0xFF7
  6562                           tblptrl	equ	0xFF6
  6563                           tablat	equ	0xFF5
  6564                           prodh	equ	0xFF4
  6565                           prodl	equ	0xFF3
  6566                           intcon2	equ	0xFF1
  6567                           postinc0	equ	0xFEE
  6568                           wreg	equ	0xFE8
  6569                           postdec1	equ	0xFE5
  6570                           plusw1	equ	0xFE3
  6571                           fsr1l	equ	0xFE1
  6572                           indf2	equ	0xFDF
  6573                           postinc2	equ	0xFDE
  6574                           postdec2	equ	0xFDD
  6575                           plusw2	equ	0xFDB
  6576                           fsr2h	equ	0xFDA
  6577                           fsr2l	equ	0xFD9
  6578                           status	equ	0xFD8
  6579                           
  6580 ;; *************** function _DelayMicroseconds *****************
  6581 ;; Defined at:
  6582 ;;		line 20 in file "timer_files/DELAY.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  delayTime       2    0[COMRAM] unsigned short 
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;		None
  6587 ;; Return value:  Size  Location     Type
  6588 ;;		None               void
  6589 ;; Registers used:
  6590 ;;		wreg, status,2, status,0
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6599 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;Total ram usage:        4 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_LCD_Init
  6606 ;;		_LCDclear
  6607 ;;		_LCDhome
  6608 ;;		_LCDpulseEnableNeg
  6609 ;;		_LCDpulseEnablePos
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text58
  6614  010AAE                     __ptext58:
  6615                           	opt stack 0
  6616  010AAE                     _DelayMicroseconds:
  6617                           	opt stack 23
  6618                           
  6619                           ;DELAY.c: 22: T1CONbits.TMR1ON = 0;
  6620                           
  6621                           ;incstack = 0
  6622  010AAE  90CD               	bcf	4045,0,c	;volatile
  6623                           
  6624                           ;DELAY.c: 23: TMR1 = (unsigned short) (65535 - delayTime);
  6625  010AB0  C001  F003         	movff	DelayMicroseconds@delayTime,??_DelayMicroseconds
  6626  010AB4  C002  F004         	movff	DelayMicroseconds@delayTime+1,??_DelayMicroseconds+1
  6627  010AB8  1E03               	comf	??_DelayMicroseconds,f,c
  6628  010ABA  1E04               	comf	??_DelayMicroseconds+1,f,c
  6629  010ABC  4A03               	infsnz	??_DelayMicroseconds,f,c
  6630  010ABE  2A04               	incf	??_DelayMicroseconds+1,f,c
  6631  010AC0  0EFF               	movlw	255
  6632  010AC2  2403               	addwf	??_DelayMicroseconds,w,c
  6633  010AC4  6ECE               	movwf	4046,c	;volatile
  6634  010AC6  0EFF               	movlw	255
  6635  010AC8  2004               	addwfc	??_DelayMicroseconds+1,w,c
  6636  010ACA  6ECF               	movwf	4047,c	;volatile
  6637                           
  6638                           ;DELAY.c: 24: PIR1bits.TMR1IF = 0;
  6639  010ACC  909E               	bcf	3998,0,c	;volatile
  6640                           
  6641                           ;DELAY.c: 25: T1CONbits.TMR1ON = 1;
  6642  010ACE  80CD               	bsf	4045,0,c	;volatile
  6643  010AD0                     l283:
  6644  010AD0  A09E               	btfss	3998,0,c	;volatile
  6645  010AD2  D7FE               	goto	l283
  6646                           
  6647                           ;DELAY.c: 27: T1CONbits.TMR1ON = 0;
  6648  010AD4  90CD               	bcf	4045,0,c	;volatile
  6649  010AD6  0012               	return		;funcret
  6650  010AD8                     __end_of_DelayMicroseconds:
  6651                           	opt stack 0
  6652                           tblptru	equ	0xFF8
  6653                           tblptrh	equ	0xFF7
  6654                           tblptrl	equ	0xFF6
  6655                           tablat	equ	0xFF5
  6656                           prodh	equ	0xFF4
  6657                           prodl	equ	0xFF3
  6658                           intcon2	equ	0xFF1
  6659                           postinc0	equ	0xFEE
  6660                           wreg	equ	0xFE8
  6661                           postdec1	equ	0xFE5
  6662                           plusw1	equ	0xFE3
  6663                           fsr1l	equ	0xFE1
  6664                           indf2	equ	0xFDF
  6665                           postinc2	equ	0xFDE
  6666                           postdec2	equ	0xFDD
  6667                           plusw2	equ	0xFDB
  6668                           fsr2h	equ	0xFDA
  6669                           fsr2l	equ	0xFD9
  6670                           status	equ	0xFD8
  6671                           
  6672 ;; *************** function _I2C_Init *****************
  6673 ;; Defined at:
  6674 ;;		line 16 in file "i2c_utils_files/I2C_UTILS.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;		None
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;		None
  6679 ;; Return value:  Size  Location     Type
  6680 ;;		None               void
  6681 ;; Registers used:
  6682 ;;		wreg, status,2, status,0, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;Total ram usage:        0 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:    1
  6695 ;; This function calls:
  6696 ;;		_OpenI2C
  6697 ;; This function is called by:
  6698 ;;		_SYSTEM_Initialize
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           	psect	text59
  6703  010C10                     __ptext59:
  6704                           	opt stack 0
  6705  010C10                     _I2C_Init:
  6706                           	opt stack 28
  6707                           
  6708                           ;I2C_UTILS.c: 18: TRISCbits.RC4 = 1;
  6709                           
  6710                           ;incstack = 0
  6711  010C10  8894               	bsf	3988,4,c	;volatile
  6712                           
  6713                           ;I2C_UTILS.c: 19: TRISCbits.RC3 = 1;
  6714  010C12  8694               	bsf	3988,3,c	;volatile
  6715                           
  6716                           ;I2C_UTILS.c: 20: PORTCbits.SCL = 0;
  6717  010C14  9682               	bcf	3970,3,c	;volatile
  6718                           
  6719                           ;I2C_UTILS.c: 21: PORTCbits.SDA = 0;
  6720  010C16  9882               	bcf	3970,4,c	;volatile
  6721                           
  6722                           ;I2C_UTILS.c: 23: OpenI2C(0b00001000, 0b10000000);
  6723  010C18  0E80               	movlw	128
  6724  010C1A  6E01               	movwf	OpenI2C@slew,c
  6725  010C1C  0E08               	movlw	8
  6726  010C1E  ECDD  F085         	call	_OpenI2C
  6727                           
  6728                           ;I2C_UTILS.c: 24: SSPADD=0x09;
  6729  010C22  0E09               	movlw	9
  6730  010C24  6EC8               	movwf	4040,c	;volatile
  6731  010C26  0012               	return		;funcret
  6732  010C28                     __end_of_I2C_Init:
  6733                           	opt stack 0
  6734                           tblptru	equ	0xFF8
  6735                           tblptrh	equ	0xFF7
  6736                           tblptrl	equ	0xFF6
  6737                           tablat	equ	0xFF5
  6738                           prodh	equ	0xFF4
  6739                           prodl	equ	0xFF3
  6740                           intcon2	equ	0xFF1
  6741                           postinc0	equ	0xFEE
  6742                           wreg	equ	0xFE8
  6743                           postdec1	equ	0xFE5
  6744                           plusw1	equ	0xFE3
  6745                           fsr1l	equ	0xFE1
  6746                           indf2	equ	0xFDF
  6747                           postinc2	equ	0xFDE
  6748                           postdec2	equ	0xFDD
  6749                           plusw2	equ	0xFDB
  6750                           fsr2h	equ	0xFDA
  6751                           fsr2l	equ	0xFD9
  6752                           status	equ	0xFD8
  6753                           
  6754 ;; *************** function _OpenI2C *****************
  6755 ;; Defined at:
  6756 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c_open.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  sync_mode       1    wreg     unsigned char 
  6759 ;;  slew            1    0[COMRAM] unsigned char 
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;  sync_mode       1    1[COMRAM] unsigned char 
  6762 ;; Return value:  Size  Location     Type
  6763 ;;		None               void
  6764 ;; Registers used:
  6765 ;;		wreg, status,2, status,0
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6771 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6775 ;;Total ram usage:        2 bytes
  6776 ;; Hardware stack levels used:    1
  6777 ;; This function calls:
  6778 ;;		Nothing
  6779 ;; This function is called by:
  6780 ;;		_I2C_Init
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text60
  6785  010BBA                     __ptext60:
  6786                           	opt stack 0
  6787  010BBA                     _OpenI2C:
  6788                           	opt stack 28
  6789                           
  6790                           ;incstack = 0
  6791                           ;OpenI2C@sync_mode stored from wreg
  6792  010BBA  6E02               	movwf	OpenI2C@sync_mode,c
  6793  010BBC  0E3F               	movlw	63
  6794  010BBE  16C7               	andwf	4039,f,c	;volatile
  6795  010BC0  0E00               	movlw	0
  6796  010BC2  6EC6               	movwf	4038,c	;volatile
  6797  010BC4  0E00               	movlw	0
  6798  010BC6  6EC5               	movwf	4037,c	;volatile
  6799  010BC8  5002               	movf	OpenI2C@sync_mode,w,c
  6800  010BCA  12C6               	iorwf	4038,f,c	;volatile
  6801  010BCC  5001               	movf	OpenI2C@slew,w,c
  6802  010BCE  12C7               	iorwf	4039,f,c	;volatile
  6803  010BD0  8694               	bsf	3988,3,c	;volatile
  6804  010BD2  8894               	bsf	3988,4,c	;volatile
  6805  010BD4  8AC6               	bsf	4038,5,c	;volatile
  6806  010BD6  0012               	return		;funcret
  6807  010BD8                     __end_of_OpenI2C:
  6808                           	opt stack 0
  6809                           tblptru	equ	0xFF8
  6810                           tblptrh	equ	0xFF7
  6811                           tblptrl	equ	0xFF6
  6812                           tablat	equ	0xFF5
  6813                           prodh	equ	0xFF4
  6814                           prodl	equ	0xFF3
  6815                           intcon2	equ	0xFF1
  6816                           postinc0	equ	0xFEE
  6817                           wreg	equ	0xFE8
  6818                           postdec1	equ	0xFE5
  6819                           plusw1	equ	0xFE3
  6820                           fsr1l	equ	0xFE1
  6821                           indf2	equ	0xFDF
  6822                           postinc2	equ	0xFDE
  6823                           postdec2	equ	0xFDD
  6824                           plusw2	equ	0xFDB
  6825                           fsr2h	equ	0xFDA
  6826                           fsr2l	equ	0xFD9
  6827                           status	equ	0xFD8
  6828                           
  6829 ;; *************** function _DELAY_Init *****************
  6830 ;; Defined at:
  6831 ;;		line 6 in file "timer_files/DELAY.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;		None
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;		None
  6836 ;; Return value:  Size  Location     Type
  6837 ;;		None               void
  6838 ;; Registers used:
  6839 ;;		None
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6849 ;;Total ram usage:        0 bytes
  6850 ;; Hardware stack levels used:    1
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_SYSTEM_Initialize
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text61
  6859  010CC0                     __ptext61:
  6860                           	opt stack 0
  6861  010CC0                     _DELAY_Init:
  6862                           	opt stack 29
  6863                           
  6864                           ;DELAY.c: 8: T1CONbits.RD16 = 1;
  6865                           
  6866                           ;incstack = 0
  6867  010CC0  8ECD               	bsf	4045,7,c	;volatile
  6868                           
  6869                           ;DELAY.c: 9: T1CONbits.T1RUN = 0;
  6870  010CC2  9CCD               	bcf	4045,6,c	;volatile
  6871                           
  6872                           ;DELAY.c: 10: T1CONbits.T1CKPS1 = 0;
  6873  010CC4  9ACD               	bcf	4045,5,c	;volatile
  6874                           
  6875                           ;DELAY.c: 11: T1CONbits.T1CKPS0 = 0;
  6876  010CC6  98CD               	bcf	4045,4,c	;volatile
  6877                           
  6878                           ;DELAY.c: 12: T1CONbits.T1OSCEN = 0;
  6879  010CC8  96CD               	bcf	4045,3,c	;volatile
  6880                           
  6881                           ;DELAY.c: 14: T1CONbits.TMR1CS = 0;
  6882  010CCA  92CD               	bcf	4045,1,c	;volatile
  6883                           
  6884                           ;DELAY.c: 15: T1CONbits.TMR1ON = 0;
  6885  010CCC  90CD               	bcf	4045,0,c	;volatile
  6886  010CCE  0012               	return		;funcret
  6887  010CD0                     __end_of_DELAY_Init:
  6888                           	opt stack 0
  6889                           tblptru	equ	0xFF8
  6890                           tblptrh	equ	0xFF7
  6891                           tblptrl	equ	0xFF6
  6892                           tablat	equ	0xFF5
  6893                           prodh	equ	0xFF4
  6894                           prodl	equ	0xFF3
  6895                           intcon2	equ	0xFF1
  6896                           postinc0	equ	0xFEE
  6897                           wreg	equ	0xFE8
  6898                           postdec1	equ	0xFE5
  6899                           plusw1	equ	0xFE3
  6900                           fsr1l	equ	0xFE1
  6901                           indf2	equ	0xFDF
  6902                           postinc2	equ	0xFDE
  6903                           postdec2	equ	0xFDD
  6904                           plusw2	equ	0xFDB
  6905                           fsr2h	equ	0xFDA
  6906                           fsr2l	equ	0xFD9
  6907                           status	equ	0xFD8
  6908                           tblptru	equ	0xFF8
  6909                           tblptrh	equ	0xFF7
  6910                           tblptrl	equ	0xFF6
  6911                           tablat	equ	0xFF5
  6912                           prodh	equ	0xFF4
  6913                           prodl	equ	0xFF3
  6914                           intcon2	equ	0xFF1
  6915                           postinc0	equ	0xFEE
  6916                           wreg	equ	0xFE8
  6917                           postdec1	equ	0xFE5
  6918                           plusw1	equ	0xFE3
  6919                           fsr1l	equ	0xFE1
  6920                           indf2	equ	0xFDF
  6921                           postinc2	equ	0xFDE
  6922                           postdec2	equ	0xFDD
  6923                           plusw2	equ	0xFDB
  6924                           fsr2h	equ	0xFDA
  6925                           fsr2l	equ	0xFD9
  6926                           status	equ	0xFD8
  6927                           
  6928                           	psect	rparam
  6929  0000                     tblptru	equ	0xFF8
  6930                           tblptrh	equ	0xFF7
  6931                           tblptrl	equ	0xFF6
  6932                           tablat	equ	0xFF5
  6933                           prodh	equ	0xFF4
  6934                           prodl	equ	0xFF3
  6935                           intcon2	equ	0xFF1
  6936                           postinc0	equ	0xFEE
  6937                           wreg	equ	0xFE8
  6938                           postdec1	equ	0xFE5
  6939                           plusw1	equ	0xFE3
  6940                           fsr1l	equ	0xFE1
  6941                           indf2	equ	0xFDF
  6942                           postinc2	equ	0xFDE
  6943                           postdec2	equ	0xFDD
  6944                           plusw2	equ	0xFDB
  6945                           fsr2h	equ	0xFDA
  6946                           fsr2l	equ	0xFD9
  6947                           status	equ	0xFD8


Data Sizes:
    Strings     339
    Constant    0
    Data        130
    BSS         6
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      89
    BANK0           160      0      97
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          239      0       0

Pointer List with Targets:

    autoIncrement@p	PTR unsigned char  size(2) Largest target is 14
		 -> autoIncrement@NoAutoscroll(COMRAM[14]), autoIncrement@Autoscroll(COMRAM[11]), 

    charmap	PTR unsigned char [8] size(2) Largest target is 8
		 -> retarrow(BANK0[8]), cross(BANK0[8]), check(BANK0[8]), duck(BANK0[8]), 
		 -> heart(BANK0[8]), clock(BANK0[8]), note(BANK0[8]), bell(COMRAM[8]), 

    LCDcreateChar@charmap	PTR unsigned char  size(2) Largest target is 8
		 -> retarrow(BANK0[8]), cross(BANK0[8]), check(BANK0[8]), duck(BANK0[8]), 
		 -> heart(BANK0[8]), clock(BANK0[8]), note(BANK0[8]), bell(COMRAM[8]), 

    LCD_Write_Str@message	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_37(CODE[3]), STR_36(CODE[19]), STR_35(CODE[3]), STR_34(CODE[5]), 
		 -> STR_33(CODE[3]), STR_32(CODE[13]), STR_31(CODE[3]), STR_30(CODE[16]), 
		 -> STR_29(CODE[21]), STR_28(CODE[20]), STR_27(CODE[21]), STR_26(CODE[20]), 
		 -> STR_25(CODE[20]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[9]), 
		 -> STR_21(CODE[10]), STR_20(CODE[11]), STR_19(CODE[9]), STR_18(CODE[6]), 
		 -> STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[6]), STR_14(CODE[14]), 
		 -> STR_13(CODE[14]), STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[14]), 
		 -> STR_9(CODE[13]), STR_8(CODE[12]), STR_7(CODE[12]), STR_6(CODE[12]), 
		 -> STR_5(CODE[12]), STR_4(CODE[6]), STR_3(CODE[13]), STR_2(CODE[6]), 
		 -> STR_1(CODE[13]), 

    LCD_Write_Str@message_ptr	PTR unsigned char  size(2) Largest target is 21
		 -> STR_37(CODE[3]), STR_36(CODE[19]), STR_35(CODE[3]), STR_34(CODE[5]), 
		 -> STR_33(CODE[3]), STR_32(CODE[13]), STR_31(CODE[3]), STR_30(CODE[16]), 
		 -> STR_29(CODE[21]), STR_28(CODE[20]), STR_27(CODE[21]), STR_26(CODE[20]), 
		 -> STR_25(CODE[20]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[9]), 
		 -> STR_21(CODE[10]), STR_20(CODE[11]), STR_19(CODE[9]), STR_18(CODE[6]), 
		 -> STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[6]), STR_14(CODE[14]), 
		 -> STR_13(CODE[14]), STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[14]), 
		 -> STR_9(CODE[13]), STR_8(CODE[12]), STR_7(CODE[12]), STR_6(CODE[12]), 
		 -> STR_5(CODE[12]), STR_4(CODE[6]), STR_3(CODE[13]), STR_2(CODE[6]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _exerciseDisplay->_autoIncrement
    _printLeftAndRight->_LCDsetCursor
    _LCDrightToLeft->_LCDcommandWrite
    _LCDleftToRight->_LCDcommandWrite
    _printAt->_LCDsetCursor
    _displayOnOff->_LCDsetCursor
    _displayLeftRightScroll->_LCDsetCursor
    _LCDscrollDisplayRight->_LCDcommandWrite
    _LCDscrollDisplayLeft->_LCDcommandWrite
    _dataMemoryReading->_putHexString
    _putHexString->_LCDsetCursor
    _LCDreadDDRam->_LCDcommandWrite
    _LCDreadCGRam->_LCDcommandWrite
    _LCDdataRead->_LCDreceive
    _LCDcreateChar->_LCDcommandWrite
    _LCDcreateChar->_LCDdataWrite
    _cursorControl->_LCD_Write_Str
    _LCDhome->_LCDcommandWrite
    _controlMemoryReading->_LCDsetCursor
    _LCDcursorOn->_LCDcommandWrite
    _LCDblinkOn->_LCDcommandWrite
    _LCDcommandRead->_LCDreceive
    _LCDreceive->_LCDread4bits
    _LCDread4bits->_LCDpulseEnableNeg
    _LCDread4bits->_LCDpulseEnablePos
    _LCDpulseEnablePos->_LCDwritePCF8574
    _backLightControl->_LCDsetCursor
    _LCDnoBacklight->_LCDwritePCF8574
    _LCDbacklight->_LCDwritePCF8574
    _LCDreadPCF8574->_I2C_Read_Byte_Single_Reg
    _I2C_Read_Byte_Single_Reg->_WriteI2C
    _LCD_Write_Str->_LCDdataWrite
    _autoIncrement->_LCDsetCursor
    _LCDsetCursor->_LCDcommandWrite
    _LCDnoAutoscroll->_LCDcommandWrite
    _LCDcursorOff->_LCDcommandWrite
    _LCDblinkOff->_LCDcommandWrite
    _LCDautoscroll->_LCDcommandWrite
    _LCD_Write_Char->_LCDdataWrite
    _LCDdataWrite->_LCDsend
    _LCD_Init->_LCDcommandWrite
    _LCDdisplayOn->_LCDcommandWrite
    _LCDdisplayOff->_LCDcommandWrite
    _LCDclear->_LCDcommandWrite
    _LCDcommandWrite->_LCDsend
    _LCDsend->_LCDwrite4bits
    _LCDwrite4bits->_LCDpulseEnableNeg
    _LCDpulseEnableNeg->_LCDwritePCF8574
    _LCDwritePCF8574->_I2C_Write_Byte_Single_Reg
    _I2C_Write_Byte_Single_Reg->_WriteI2C
    _WriteI2C->_IdleI2C
    _I2C_Init->_OpenI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  191805
                  _SYSTEM_Initialize
                    _exerciseDisplay
 ---------------------------------------------------------------------------------
 (1) _exerciseDisplay                                      0     0      0  182233
                      _autoIncrement
                   _backLightControl
               _controlMemoryReading
                      _cursorControl
                  _dataMemoryReading
             _displayLeftRightScroll
                       _displayOnOff
                            _printAt
                  _printLeftAndRight
 ---------------------------------------------------------------------------------
 (2) _printLeftAndRight                                    0     0      0   18240
                  _DelayMilliseconds
                      _LCD_Write_Str
                        _LCDblinkOff
                           _LCDclear
                       _LCDcursorOff
                     _LCDleftToRight
                     _LCDrightToLeft
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (3) _LCDrightToLeft                                       0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDleftToRight                                       0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (2) _printAt                                              0     0      0   13455
                  _DelayMilliseconds
                      _LCD_Write_Str
                           _LCDclear
                       _LCDcursorOff
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (2) _displayOnOff                                         1     1      0   20693
                                             22 COMRAM     1     1      0
                  _DelayMilliseconds
                      _LCD_Write_Str
                        _LCDblinkOff
                           _LCDclear
                       _LCDcursorOff
                      _LCDdisplayOff
                       _LCDdisplayOn
                            _LCDhome
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (2) _displayLeftRightScroll                               2     2      0   18332
                                             22 COMRAM     2     2      0
                  _DelayMilliseconds
                      _LCD_Write_Str
                        _LCDblinkOff
                           _LCDclear
                       _LCDcursorOff
               _LCDscrollDisplayLeft
              _LCDscrollDisplayRight
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (3) _LCDscrollDisplayRight                                0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDscrollDisplayLeft                                 0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (2) _dataMemoryReading                                    7     7      0   39697
                                             27 COMRAM     7     7      0
                     _LCD_Write_Char
                      _LCD_Write_Str
                        _LCDblinkOff
                           _LCDclear
                      _LCDcreateChar
                       _LCDcursorOff
                            _LCDhome
                       _LCDreadCGRam
                       _LCDreadDDRam
                       _LCDsetCursor
                       _putHexString
 ---------------------------------------------------------------------------------
 (3) _putHexString                                         5     3      2    9942
                                             22 COMRAM     5     3      2
                     _LCD_Write_Char
                      _LCD_Write_Str
                       _LCDreadCGRam (ARG)
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (3) _LCDreadDDRam                                         1     1      0    4202
                                             12 COMRAM     1     1      0
                    _LCDcommandWrite
                        _LCDdataRead
 ---------------------------------------------------------------------------------
 (3) _LCDreadCGRam                                         1     1      0    4202
                                             12 COMRAM     1     1      0
                    _LCDcommandWrite
                        _LCDdataRead
 ---------------------------------------------------------------------------------
 (4) _LCDdataRead                                          0     0      0    2585
                         _LCDreceive
 ---------------------------------------------------------------------------------
 (3) _LCDcreateChar                                        5     3      2    3367
                                             12 COMRAM     5     3      2
                    _LCDcommandWrite
                       _LCDdataWrite
 ---------------------------------------------------------------------------------
 (2) _cursorControl                                        0     0      0   16635
                  _DelayMilliseconds
                      _LCD_Write_Str
                        _LCDblinkOff
                         _LCDblinkOn
                           _LCDclear
                       _LCDcursorOff
                        _LCDcursorOn
                            _LCDhome
 ---------------------------------------------------------------------------------
 (3) _LCDhome                                              0     0      0    2385
                  _DelayMicroseconds
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (2) _controlMemoryReading                                 3     3      0   25118
                                             22 COMRAM     3     3      0
                  _DelayMilliseconds
                     _LCD_Write_Char
                      _LCD_Write_Str
                  _LCDaddressCounter
                        _LCDblinkOff
                         _LCDblinkOn
                            _LCDbusy
                           _LCDclear
                       _LCDcursorOff
                        _LCDcursorOn
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (3) _LCDcursorOn                                          0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDbusy                                              0     0      0    2585
                     _LCDcommandRead
 ---------------------------------------------------------------------------------
 (3) _LCDblinkOn                                           0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDaddressCounter                                    0     0      0    2585
                     _LCDcommandRead
 ---------------------------------------------------------------------------------
 (4) _LCDcommandRead                                       0     0      0    2585
                         _LCDreceive
 ---------------------------------------------------------------------------------
 (5) _LCDreceive                                           4     4      0    2585
                                              8 COMRAM     4     4      0
                       _LCDread4bits
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (6) _LCDread4bits                                         2     2      0    2235
                                              6 COMRAM     2     2      0
                  _LCDpulseEnableNeg
                  _LCDpulseEnablePos
                     _LCDreadPCF8574
 ---------------------------------------------------------------------------------
 (7) _LCDpulseEnablePos                                    1     1      0    1050
                                              5 COMRAM     1     1      0
                  _DelayMicroseconds
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (2) _backLightControl                                     1     1      0   14091
                                             22 COMRAM     1     1      0
                  _DelayMilliseconds
                      _LCD_Write_Str
                       _LCDbacklight
                           _LCDclear
                       _LCDcursorOff
                     _LCDnoBacklight
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (3) _LCDnoBacklight                                       0     0      0     284
                     _LCDreadPCF8574
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (3) _LCDbacklight                                         0     0      0     284
                     _LCDreadPCF8574
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (7) _LCDreadPCF8574                                       0     0      0      68
           _I2C_Read_Byte_Single_Reg
 ---------------------------------------------------------------------------------
 (8) _I2C_Read_Byte_Single_Reg                             2     2      0      68
                                              2 COMRAM     2     2      0
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (9) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Str                                        4     2      2    4031
                                             12 COMRAM     4     2      2
                       _LCDdataWrite
 ---------------------------------------------------------------------------------
 (2) _autoIncrement                                       27    27      0   15972
                                             22 COMRAM    27    27      0
                  _DelayMilliseconds
                     _LCD_Write_Char
                      _LCDautoscroll
                        _LCDblinkOff
                           _LCDclear
                       _LCDcursorOff
                    _LCDnoAutoscroll
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (3) _LCDsetCursor                                        10     9      1    3990
                                             12 COMRAM    10     9      1
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDnoAutoscroll                                      0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDcursorOff                                         0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDblinkOff                                          0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDautoscroll                                        0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       1     1      0    1617
                                             12 COMRAM     1     1      0
                       _LCDdataWrite
 ---------------------------------------------------------------------------------
 (4) _LCDdataWrite                                         1     1      0    1595
                                             11 COMRAM     1     1      0
                            _LCDsend
 ---------------------------------------------------------------------------------
 (3) _DelayMilliseconds                                    4     2      2    1454
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    9572
                         _DELAY_Init
                           _I2C_Init
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    9464
                  _DelayMicroseconds
          _I2C_Write_Byte_Single_Reg
                           _LCDclear
                    _LCDcommandWrite
                      _LCDdisplayOff
                       _LCDdisplayOn
                      _LCDwrite4bits
 ---------------------------------------------------------------------------------
 (3) _LCDdisplayOn                                         0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDdisplayOff                                        0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDclear                                             0     0      0    2385
                  _DelayMicroseconds
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (4) _LCDcommandWrite                                      1     1      0    1595
                                             11 COMRAM     1     1      0
                            _LCDsend
 ---------------------------------------------------------------------------------
 (5) _LCDsend                                              4     3      1    1573
                                              7 COMRAM     4     3      1
                      _LCDwrite4bits
 ---------------------------------------------------------------------------------
 (6) _LCDwrite4bits                                        1     1      0    1310
                                              6 COMRAM     1     1      0
                  _LCDpulseEnableNeg
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (7) _LCDpulseEnableNeg                                    1     1      0    1050
                                              5 COMRAM     1     1      0
                  _DelayMicroseconds
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (7) _LCDwritePCF8574                                      1     1      0     216
                                              4 COMRAM     1     1      0
          _I2C_Write_Byte_Single_Reg
 ---------------------------------------------------------------------------------
 (8) _I2C_Write_Byte_Single_Reg                            2     1      1     194
                                              2 COMRAM     2     1      1
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (9) _WriteI2C                                             1     1      0      22
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (10) _IdleI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _DelayMicroseconds                                    4     2      2     790
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0     108
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (3) _OpenI2C                                              2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _DELAY_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _DELAY_Init
     _I2C_Init
       _OpenI2C
     _LCD_Init
       _DelayMicroseconds
       _I2C_Write_Byte_Single_Reg
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcommandWrite
         _LCDsend
           _LCDwrite4bits
             _LCDpulseEnableNeg
               _DelayMicroseconds
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _IdleI2C
                 _WriteI2C
                   _IdleI2C
       _LCDdisplayOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDdisplayOn
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDwrite4bits
         _LCDpulseEnableNeg
           _DelayMicroseconds
           _LCDwritePCF8574
             _I2C_Write_Byte_Single_Reg
               _IdleI2C
               _WriteI2C
                 _IdleI2C
         _LCDwritePCF8574
           _I2C_Write_Byte_Single_Reg
             _IdleI2C
             _WriteI2C
               _IdleI2C
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _exerciseDisplay
     _autoIncrement
       _DelayMilliseconds
       _LCD_Write_Char
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDautoscroll
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDnoAutoscroll
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _backLightControl
       _DelayMilliseconds
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDbacklight
         _LCDreadPCF8574
           _I2C_Read_Byte_Single_Reg
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         _LCDwritePCF8574
           _I2C_Write_Byte_Single_Reg
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDnoBacklight
         _LCDreadPCF8574
           _I2C_Read_Byte_Single_Reg
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         _LCDwritePCF8574
           _I2C_Write_Byte_Single_Reg
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _controlMemoryReading
       _DelayMilliseconds
       _LCD_Write_Char
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDaddressCounter
         _LCDcommandRead
           _LCDreceive
             _LCDread4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDpulseEnablePos
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDreadPCF8574
                 _I2C_Read_Byte_Single_Reg
                   _IdleI2C
                   _ReadI2C
                   _WriteI2C
                     _IdleI2C
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _IdleI2C
                 _WriteI2C
                   _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOn
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDbusy
         _LCDcommandRead
           _LCDreceive
             _LCDread4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDpulseEnablePos
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDreadPCF8574
                 _I2C_Read_Byte_Single_Reg
                   _IdleI2C
                   _ReadI2C
                   _WriteI2C
                     _IdleI2C
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _IdleI2C
                 _WriteI2C
                   _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOn
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _cursorControl
       _DelayMilliseconds
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOn
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOn
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDhome
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _dataMemoryReading
       _LCD_Write_Char
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcreateChar
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDhome
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDreadCGRam
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
         _LCDdataRead
           _LCDreceive
             _LCDread4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDpulseEnablePos
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDreadPCF8574
                 _I2C_Read_Byte_Single_Reg
                   _IdleI2C
                   _ReadI2C
                   _WriteI2C
                     _IdleI2C
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _IdleI2C
                 _WriteI2C
                   _IdleI2C
       _LCDreadDDRam
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
         _LCDdataRead
           _LCDreceive
             _LCDread4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDpulseEnablePos
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDreadPCF8574
                 _I2C_Read_Byte_Single_Reg
                   _IdleI2C
                   _ReadI2C
                   _WriteI2C
                     _IdleI2C
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _IdleI2C
                 _WriteI2C
                   _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _putHexString
         _LCD_Write_Char
           _LCDdataWrite
             _LCDsend
               _LCDwrite4bits
                 _LCDpulseEnableNeg
                   _DelayMicroseconds
                   _LCDwritePCF8574
                     _I2C_Write_Byte_Single_Reg
                       _IdleI2C
                       _WriteI2C
                         _IdleI2C
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
         _LCD_Write_Str
           _LCDdataWrite
             _LCDsend
               _LCDwrite4bits
                 _LCDpulseEnableNeg
                   _DelayMicroseconds
                   _LCDwritePCF8574
                     _I2C_Write_Byte_Single_Reg
                       _IdleI2C
                       _WriteI2C
                         _IdleI2C
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
         _LCDreadCGRam (ARG)
           _LCDcommandWrite
             _LCDsend
               _LCDwrite4bits
                 _LCDpulseEnableNeg
                   _DelayMicroseconds
                   _LCDwritePCF8574
                     _I2C_Write_Byte_Single_Reg
                       _IdleI2C
                       _WriteI2C
                         _IdleI2C
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
           _LCDdataRead
             _LCDreceive
               _LCDread4bits
                 _LCDpulseEnableNeg
                   _DelayMicroseconds
                   _LCDwritePCF8574
                     _I2C_Write_Byte_Single_Reg
                       _IdleI2C
                       _WriteI2C
                         _IdleI2C
                 _LCDpulseEnablePos
                   _DelayMicroseconds
                   _LCDwritePCF8574
                     _I2C_Write_Byte_Single_Reg
                       _IdleI2C
                       _WriteI2C
                         _IdleI2C
                 _LCDreadPCF8574
                   _I2C_Read_Byte_Single_Reg
                     _IdleI2C
                     _ReadI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
         _LCDsetCursor (ARG)
           _LCDcommandWrite
             _LCDsend
               _LCDwrite4bits
                 _LCDpulseEnableNeg
                   _DelayMicroseconds
                   _LCDwritePCF8574
                     _I2C_Write_Byte_Single_Reg
                       _IdleI2C
                       _WriteI2C
                         _IdleI2C
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
     _displayLeftRightScroll
       _DelayMilliseconds
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDscrollDisplayLeft
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDscrollDisplayRight
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _displayOnOff
       _DelayMilliseconds
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDdisplayOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDdisplayOn
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDhome
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _printAt
       _DelayMilliseconds
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _printLeftAndRight
       _DelayMilliseconds
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDleftToRight
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDrightToLeft
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CEE      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK12           EF      0       0      29        0.0%
BANK12              EF      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0      61       6       60.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      59       1       93.7%
BITSFR_8             0      0       0      40        0.0%
SFR_8                0      0       0      40        0.0%
BITSFR_7             0      0       0      40        0.0%
SFR_7                0      0       0      40        0.0%
BITSFR_6             0      0       0      40        0.0%
SFR_6                0      0       0      40        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BA       3        0.0%
DATA                 0      0      BA       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Sep 30 22:27:37 2015

           displayLeftRightScroll@x 0017                   _DelayMilliseconds 0A26  
                                 _x 0058                LCD_Write_Str@message 000D  
                       _SSPSTATbits 000FC7                       putHexString@c 001B  
                     putHexString@r 0017                                  l46 0B56  
                                l55 0AE4                                  l49 0B6E  
                                l58 0AF8                  ?_DelayMilliseconds 0001  
                  ?_LCDcommandWrite 0001                         __CFG_BORV$3 000000  
                     ?_displayOnOff 0001                        __CFG_CP0$OFF 000000  
                      __CFG_CP1$OFF 000000                        __CFG_CP2$OFF 000000  
                      __CFG_CP3$OFF 000000                        __CFG_CP4$OFF 000000  
                      __CFG_CP5$OFF 000000                         __CFG_OSC$XT 000000  
                               l170 097A                                 l430 03BA  
                               l423 06DC                                 l283 0AD0  
                               l291 0A3E                                 l519 090C  
                               l528 092C                                 l494 0C06  
                               l495 0C08                        __CFG_CPB$OFF 000000  
                      __CFG_CPD$OFF 000000                                 u801 0290  
                               u731 09C4                                 u791 027E  
                  _backLightControl 034A           __end_of_DelayMicroseconds 0AD8  
                               _hex 0032                         ?_LCDblinkOn 0001  
               ??_DelayMilliseconds 0003                                 prod 000FF3  
                               wreg 000FE8            __size_of_LCDwritePCF8574 0010  
                      __CFG_LVP$OFF 000000                 __size_of_DELAY_Init 0010  
                       ?_LCDreceive 0001                        __CFG_WDT$OFF 000000  
                              l2012 09FE                                l2024 09D8  
                              l2016 0A12                                l2104 0952  
                              l2108 0962                                l2300 0582  
                              l2142 0A32                                l2150 0A48  
                              l2232 02BC                                l2306 06D4  
                              l2252 032E                                l2246 0310  
                              l2238 02DA                                l2326 0736  
                              l2318 0706                                l2352 03B2  
                              l2272 051E                                l2370 0404  
                              l2522 001C                                l2290 0566  
                              l1900 0C9E                                l2364 03F0  
                              l2268 0516                                l2518 0014  
                              l2294 056E                                l2278 0532  
                              l2552 00D4                                l2528 003E  
                              l1924 0918                                l2572 0110  
                              l2564 00F2                                l2556 00DC  
                              l2644 0D9C                     __end_of_LCDhome 0C52  
                              l2590 013C                                l2582 0124  
                              l2576 0118                                l2578 011C  
                   __end_of_LCDbusy 0DBC                     __end_of_LCDsend 0B28  
                              STR_1 FF70                                STR_2 FFF0  
                              STR_3 FF56                                STR_4 FFD2  
                              STR_5 FF21                                STR_6 FF7D  
                              STR_7 FF21                                STR_8 FF95  
                              STR_9 FF63                                _TMR1 000FCE  
                      ?_LCDdataRead 0001                                _bell 004B  
                              _duck 00A1                                _main 0D98  
                              _note 00B1                    __end_of_I2C_Init 0C28  
                              fsr2h 000FDA                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                      ?_LCDblinkOff 0001                       _autoIncrement 0274  
                              prodl 000FF3                                start 0002  
                     __CFG_IESO$OFF 000000                     __end_of_IdleI2C 0CB0  
         __end_of_DelayMilliseconds 0A56       I2C_Write_Byte_Single_Reg@info 0003  
                     __CFG_MCLRE$ON 000000                        ___param_bank 000010  
                     _LCD_Write_Str 09F4                     __end_of_ReadI2C 0C10  
           autoIncrement@Autoscroll 0025          __size_of_LCDaddressCounter 0008  
                   __end_of_OpenI2C 0BD8                        ?_LCDcursorOn 0001  
            __size_of_LCDcreateChar 0044                    __end_of_LCD_Init 063E  
                    ??_displayOnOff 0017      __size_of_OSCILLATOR_Initialize 0002  
     __end_of_OSCILLATOR_Initialize 0DD6                    __end_of_LCDclear 0C66  
                     ?_LCDbacklight 0001                               ?_main 0001  
                             STR_10 FF3B                               STR_11 FF63  
                             STR_20 FFA1                               STR_12 FF1F  
     __size_of_controlMemoryReading 0134                               STR_21 FFB6  
                             STR_13 FF2D                               STR_14 FF3B  
                             STR_22 FFC0                               STR_30 FF0F  
                             STR_31 FFFB                               STR_15 FFD8  
                             STR_23 FFAC                               STR_16 FFDE  
                             STR_24 FF89                               STR_32 FF49  
                             STR_33 FFFB                               STR_17 FFE4  
                             STR_25 FEC0                               STR_34 FFF6  
                             STR_18 FFEA                               STR_26 FEE8  
                             STR_35 FFFB                               STR_19 FFC9  
                             STR_27 FEAB                               STR_36 FEFC  
                             STR_28 FED4                               STR_29 FEAB  
                             STR_37 FFFB              __size_of_LCDdisplayOff 000C  
                     __CFG_PWRT$OFF 000000                       __CFG_WRT0$OFF 000000  
                     __CFG_WRT1$OFF 000000                       __CFG_WRT2$OFF 000000  
                     __CFG_WRT3$OFF 000000                       __CFG_WRT4$OFF 000000  
                     __CFG_WRT5$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                    __CFG_EBTR2$OFF 000000                      __CFG_EBTR3$OFF 000000  
                    __CFG_EBTR4$OFF 000000                      __CFG_EBTR5$OFF 000000  
                  ?_LCDnoAutoscroll 0001                       ?_LCDdataWrite 0001  
                     __CFG_WRTB$OFF 000000                       __CFG_WRTC$OFF 000000  
                     __CFG_WRTD$OFF 000000                               _check 0089  
                    __CFG_EBTRB$OFF 000000                               _clock 0091  
                             _heart 00A9                               _cross 0099  
                 _printLeftAndRight 07C0                               tablat 000FF5  
                   __end_of_printAt 07C0                               plusw1 000FE3  
                             plusw2 000FDB                  ?_printLeftAndRight 0001  
                             status 000FD8                      ?_autoIncrement 0001  
                    __CFG_PBADEN$ON 000000              __size_of_LCDautoscroll 000C  
                dataMemoryReading@c 001F                  dataMemoryReading@i 0022  
                dataMemoryReading@p 0021                  dataMemoryReading@r 001E  
                dataMemoryReading@x 0020                       ?_LCDdisplayOn 0001  
                    ?_LCD_Write_Str 000D                 __size_of_LCDblinkOn 000C  
                    _LCD_Write_Char 0DA2                     __initialization 0896  
               ??_printLeftAndRight 0017                       ?_LCDreadDDRam 0001  
                     ?_LCDreadCGRam 0001                        __end_of_main 0DA2  
                     ?_LCDread4bits 0001                 __size_of_LCDreceive 003C  
          LCD_Write_Str@message_ptr 000F                      ??_LCDbacklight 0006  
                     ?_LCDcursorOff 0001                    LCDreceive@RsMode 000C  
                            ??_main 0032                _LCDscrollDisplayLeft 0CDE  
                     __activetblptr 000002          __size_of_DelayMicroseconds 002A  
                         ??_LCDhome 000D                           ??_LCDbusy 000D  
                         ??_LCDsend 0009                      ??_LCDdataWrite 000C  
                 _LCDpulseEnableNeg 0A82                   _LCDpulseEnablePos 0A56  
                     ?_LCDsetCursor 000D             __size_of_LCDnoBacklight 000C  
         __end_of_printLeftAndRight 0834                    LCDreceive@lownib 000B  
                ?_LCDpulseEnableNeg 0001                  ?_LCDpulseEnablePos 0001  
                  __end_of_WriteI2C 0938                     __CFG_BBSIZ$1024 000000  
                     _LCDcreateChar 0938                         OpenI2C@slew 0001  
           __size_of_LCDcommandRead 0008                           ??_IdleI2C 0001  
                 ??_LCDwritePCF8574 0005                              _SSPADD 000FC8  
                            _TRISA1 007C91                              _TRISB0 007C98  
                            _TRISA2 007C92                              _TRISB1 007C99  
                            _TRISA3 007C93                              _TRISB2 007C9A  
                            _TRISA4 007C94                              _TRISC1 007CA1  
                            _TRISA5 007C95                              _TRISC2 007CA2  
                            _TRISB4 007C9C                              _TRISB5 007C9D  
                            _SSPBUF 000FC9                 ??_LCDpulseEnableNeg 0006  
                         ??_ReadI2C 0001                 ??_LCDpulseEnablePos 0006  
                    ??_LCDdisplayOn 000D              __end_of_LCD_Write_Char 0DAC  
                     _LCDdisplayOff 0D8C                           ??_OpenI2C 0002  
        __size_of_DelayMilliseconds 0030                      __CFG_XINST$OFF 000000  
                      ??_DELAY_Init 0001                      ??_LCDreadDDRam 000D  
                    ??_LCDreadCGRam 000D                      ??_LCDread4bits 0007  
                    __CFG_STVREN$ON 000000                       displayOnOff@x 0017  
                    ??_LCDcursorOff 000D                     _exerciseDisplay 0B28  
             ?_LCDscrollDisplayLeft 0001             __size_of_LCDleftToRight 000C  
         __end_of_LCDpulseEnableNeg 0AAE             __size_of_LCDreadPCF8574 0008  
                   __CFG_BOREN$BOHW 000000           __end_of_LCDpulseEnablePos 0A82  
                     _LCDautoscroll 0D74                        __pdataCOMRAM 0032  
                         ?_I2C_Init 0001                     LCDsetCursor@col 0016  
                    ??_LCDsetCursor 000E                     LCDsetCursor@row 000D  
                      __mediumconst FEAA                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
            __size_of_cursorControl 00C6                           ??_printAt 0017  
                    ?_LCDcreateChar 000D                  __end_of_DELAY_Init 0CD0  
                   ??_autoIncrement 0017                   _SYSTEM_Initialize 0C28  
             LCD_Write_Char@message 000D                      LCDcreateChar@i 0010  
              __end_of_displayOnOff 0746                          __accesstop 0060  
           __end_of__initialization 08E2                           ?_LCD_Init 0001  
                ?_SYSTEM_Initialize 0001                      ?_LCDdisplayOff 0001  
                         ?_LCDclear 0001                     ??_LCD_Write_Str 000F  
              __size_of_LCDdataRead 0008                       ___rparam_used 000001  
          __end_of_backLightControl 0414                     ?_LCD_Write_Char 0001  
            __size_of_LCDwrite4bits 0014                __size_of_LCDblinkOff 000C  
                    __pcstackCOMRAM 0001                        __pidataBANK0 0834  
               ??_SYSTEM_Initialize 000D                        __functionset 0057  
              __size_of_LCDcursorOn 000C                      ?_LCDautoscroll 0001  
                        ??_I2C_Init 0003                        ??_LCDblinkOn 000D  
        __size_of_printLeftAndRight 0074   __size_of_I2C_Read_Byte_Single_Reg 0028  
                      ??_LCDreceive 0009           ?_I2C_Read_Byte_Single_Reg 0001  
         __end_of_SYSTEM_Initialize 0C3E               _LCDscrollDisplayRight 0CD0  
               LCDreadDDRam@address 000D                __end_of_LCDbacklight 0D50  
                        ??_LCD_Init 000D                          __pnvCOMRAM 0059  
                        ??_LCDclear 000D                   LCDreceive@highnib 000A  
                     _cursorControl 0414             __end_of_exerciseDisplay 0B4E  
              __end_of_LCDdataWrite 0CFA                  __end_of_LCDblinkOn 0D38  
            ??_LCDscrollDisplayLeft 000D                  __end_of_LCDreceive 09B8  
                         ?_WriteI2C 0001                 LCDreadCGRam@address 000D  
              LCDcommandWrite@value 000C          __size_of_LCDpulseEnableNeg 002C  
             controlMemoryReading@x 0019          __size_of_LCDpulseEnablePos 002C  
           __size_of_LCDrightToLeft 000C                       _LCDwrite4bits 0C66  
                putHexString@hexval 0018                __end_of_LCDdisplayOn 0D8C  
                           _LCDhome 0C3E                             _LCDbusy 0DB4  
                           _LCDsend 0B00                      _LCDnoBacklight 0D38  
                   ??_LCDcreateChar 000F            __size_of_LCDcommandWrite 000E  
              __end_of_LCDreadDDRam 0C8C                __end_of_LCDreadCGRam 0C9E  
              __end_of_LCDread4bits 0BF4                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
          ??_displayLeftRightScroll 0017                      _LCDcommandRead 0DC4  
                           _IdleI2C 0C9E                     ??_LCDdisplayOff 000D  
      __end_of_controlMemoryReading 0274                __end_of_LCDcursorOff 0D68  
                           _ReadI2C 0BF4                             _OpenI2C 0BBA  
                    ?_cursorControl 0001                             __Hparam 0000  
                      LCDsend@value 000B                             __Lparam 0000  
              __end_of_LCDsetCursor 09F4                     ??_LCDautoscroll 000D  
                           __pcinit 0896                          ??_WriteI2C 0002  
                           _charmap 0060                             __ramtop 0D00  
                 backLightControl@x 0017                      _LCDleftToRight 0D14  
                           __ptext0 0D98                             __ptext1 0B28  
                           __ptext2 07C0                             __ptext3 0D08  
                           __ptext4 0D14                             __ptext5 0746  
                           __ptext6 06C4                             __ptext7 04DA  
                           __ptext8 0CD0                             __ptext9 0CDE  
                    _LCDreadPCF8574 0DCC                      ?_LCDwrite4bits 0001  
            __end_of_LCDnoBacklight 0D44                           _T1CONbits 000FCD  
             _OSCILLATOR_Initialize 0DD4                     _LCDwritePCF8574 0CB0  
          ??_PIN_MANAGER_Initialize 0001                     __displaycontrol 0054  
                           _printAt 0746               __size_of_displayOnOff 0082  
            __end_of_LCDcommandRead 0DCC              ?_LCDscrollDisplayRight 0001  
        __size_of_SYSTEM_Initialize 0016                end_of_initialization 08E2  
                  LCDsetCursor@F120 0043                       __Lmediumconst FEAA  
          __size_of_LCDnoAutoscroll 000C                       ?_putHexString 0017  
                  ?_exerciseDisplay 0001                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE              __end_of_LCDleftToRight 0D20  
            __end_of_LCDreadPCF8574 0DD4                        _displayOnOff 06C4  
                         _PORTCbits 000F82                     ?_LCDnoBacklight 0001  
                         _TRISCbits 000F94  __size_of_I2C_Write_Byte_Single_Reg 0026  
                 __size_of_I2C_Init 0018               __size_of_LCDbacklight 000C  
                   ?_LCDcommandRead 0001          ?_I2C_Write_Byte_Single_Reg 0003  
                  ??_LCD_Write_Char 000D     __size_of_displayLeftRightScroll 00B6  
                 ??_LCDcommandWrite 000C               __size_of_LCDdataWrite 000E  
                   ??_cursorControl 0011                       __entrymodeset 0056  
                 __size_of_LCD_Init 00AE                   ?_backLightControl 0001  
                    ??_putHexString 0019                   __size_of_LCDclear 0014  
                ??_backLightControl 0017                     ?_LCDleftToRight 0001  
           __end_of_LCDwritePCF8574 0CC0    __end_of_I2C_Read_Byte_Single_Reg 0B00  
                   ?_LCDreadPCF8574 0001               __size_of_LCDdisplayOn 000C  
                   ??_LCDwrite4bits 0007                       __pidataCOMRAM 0B98  
                      _LCDbacklight 0D44              ?_OSCILLATOR_Initialize 0001  
              _controlMemoryReading 0140                      _LCDrightToLeft 0D08  
             __size_of_LCDreadDDRam 0012               __size_of_LCDreadCGRam 0012  
             __size_of_LCDread4bits 001C                 start_initialization 0896  
   __size_of_PIN_MANAGER_Initialize 0024                        _LCDdataWrite 0CEC  
             __size_of_LCDcursorOff 000C                      LCDsend@highnib 0009  
                  WriteI2C@data_out 0002   __end_of_I2C_Write_Byte_Single_Reg 0B74  
                     ??_LCDdataRead 000D               __size_of_LCDsetCursor 003C  
                     ??_LCDblinkOff 000D               __end_of_autoIncrement 034A  
                      _LCDdisplayOn 0D80               __end_of_LCD_Write_Str 0A26  
                 ??_LCDnoAutoscroll 000D                        _LCDreadDDRam 0C7A  
                      _LCDreadCGRam 0C8C                       ??_LCDcursorOn 000D  
                      _LCDread4bits 0BD8                LCDread4bits@RsEnMode 0008  
            _displayLeftRightScroll 04DA                         __pdataBANK0 0060  
                  __CFG_LPT1OSC$OFF 000000              __end_of_LCDrightToLeft 0D14  
         I2C_Read_Byte_Single_Reg@b 0004         displayLeftRightScroll@x_721 0018  
             ?_controlMemoryReading 0001                        _LCDcursorOff 0D5C  
                 _dataMemoryReading 0000                   __size_of_WriteI2C 004C  
                       __pbssCOMRAM 0053                            ?_LCDhome 0001  
                ?_dataMemoryReading 0001                            ?_LCDbusy 0001  
                          ?_LCDsend 0008                        _LCDsetCursor 09B8  
               ??_dataMemoryReading 001C                            ?_IdleI2C 0001  
                          ?_ReadI2C 0001                            ?_OpenI2C 0001  
                DelayMilliseconds@x 0003              _PIN_MANAGER_Initialize 0B74  
               __end_of_LCDdataRead 0DB4                       __pmediumconst FEAA  
               __end_of_LCDblinkOff 0D74                           __numlines 0059  
                  ?_LCDwritePCF8574 0001           __end_of_dataMemoryReading 0140  
                   ?_LCDrightToLeft 0001       __size_of_LCDscrollDisplayLeft 000E  
               __end_of_LCDcursorOn 0D2C            _I2C_Read_Byte_Single_Reg 0AD8  
                          _I2C_Init 0C10             ??_LCDscrollDisplayRight 000D  
              __end_of_putHexString 06C4                       LCDread4bits@b 0007  
                          ?_printAt 0001               __end_of_LCDcreateChar 097C  
                          _LCD_Init 0590               __end_of_LCDdisplayOff 0D98  
                          _LCDclear 0C52                 autoIncrement@F16653 007E  
               autoIncrement@F16655 0070                            _PIR1bits 000F9E  
                  __CFG_WDTPS$32768 000000                    ??_LCDnoBacklight 0006  
            ??_controlMemoryReading 0017                          _ADCON1bits 000FC1  
             __end_of_LCDautoscroll 0D80                    ??_LCDcommandRead 000D  
                   _LCDcommandWrite 0CFA                    __size_of_LCDhome 0014  
                  __size_of_LCDbusy 0008                    __size_of_LCDsend 0028  
                    autoIncrement@p 0030                         _INTCON2bits 000FF1  
       ??_I2C_Write_Byte_Single_Reg 0004                       LCDsend@RsMode 0008  
                         copy_data0 08B6                           copy_data1 08D6  
                 LCDdataWrite@value 000C                    OpenI2C@sync_mode 0002  
                       _LCDdataRead 0DAC                    __size_of_IdleI2C 0012  
                       _LCDblinkOff 0D68                       LCDsend@lownib 000A  
                  __size_of_ReadI2C 001C                    ??_LCDleftToRight 000D  
                          __Hrparam 0000            LCDwrite4bits@nibEnRsMode 0007  
                  __size_of_OpenI2C 001E                    ??_LCDreadPCF8574 0005  
                          __Lrparam 0000                          _DELAY_Init 0CC0  
           ??_OSCILLATOR_Initialize 0001                         _LCDcursorOn 0D20  
        __size_of_dataMemoryReading 0140                            _WriteI2C 08EC  
           LCDsetCursor@row_offsets 000E            __size_of_exerciseDisplay 0026  
         __size_of_backLightControl 00CA           autoIncrement@NoAutoscroll 0017  
            LCDpulseEnableNeg@_data 0006                            __ptext10 0000  
                          __ptext11 063E                            __ptext20 0DB4  
                          __ptext12 0C7A                            __ptext21 0D2C  
                          __ptext13 0C8C                            __ptext30 0DCC  
                          __ptext22 0DBC                            __ptext14 0DAC  
                          __ptext31 0AD8                            __ptext23 0DC4  
                          __ptext15 0938                            __ptext40 0DA2  
                          __ptext32 0BF4                            __ptext24 097C  
                          __ptext16 0414                            __ptext41 0CEC  
                          __ptext33 09F4                            __ptext25 0BD8  
                          __ptext17 0C3E                            __ptext50 0CFA  
                          __ptext42 0A26                            __ptext34 0274  
                          __ptext26 0A56                            __ptext18 0140  
                          __ptext51 0B00                            __ptext43 0C28  
                          __ptext35 09B8                            __ptext27 034A  
                          __ptext19 0D20                            __ptext60 0BBA  
                          __ptext52 0C66                            __ptext44 0B74  
                          __ptext36 0D50                            __ptext28 0D38  
                          __ptext61 0CC0                            __ptext53 0A82  
                          __ptext45 0DD4                            __ptext37 0D5C  
                          __ptext29 0D44                            __ptext54 0CB0  
                          __ptext46 0590                            __ptext38 0D68  
                          __ptext55 0B4E                            __ptext47 0D80  
                          __ptext39 0D74                            __ptext56 08EC  
                          __ptext48 0D8C                            __ptext57 0C9E  
                          __ptext49 0C52                            __ptext58 0AAE  
                          __ptext59 0C10                    __size_of_printAt 007A  
                   _LCDnoAutoscroll 0D50     I2C_Write_Byte_Single_Reg@device 0004  
                     __size_of_main 000A               __end_of_cursorControl 04DA  
           ?_displayLeftRightScroll 0001                            _retarrow 00B9  
            LCDpulseEnablePos@_data 0006           _I2C_Write_Byte_Single_Reg 0B4E  
        DelayMicroseconds@delayTime 0001          DelayMilliseconds@delayTime 0001  
                  __displayfunction 0055                LCDwritePCF8574@value 0005  
           __end_of_LCDcommandWrite 0D08                   _LCDaddressCounter 0DBC  
             __size_of_putHexString 0086      I2C_Read_Byte_Single_Reg@device 0003  
             __end_of_LCDwrite4bits 0C7A                  ?_LCDaddressCounter 0001  
                        _LCDblinkOn 0D2C                 ??_LCDaddressCounter 000D  
                        _LCDreceive 097C             ?_PIN_MANAGER_Initialize 0001  
    __end_of_displayLeftRightScroll 0590               LCDcreateChar@location 000F  
                  ??_LCDrightToLeft 000D                         ?_DELAY_Init 0001  
                      _putHexString 063E             __size_of_LCD_Write_Char 000A  
         __end_of_LCDaddressCounter 0DC4          ??_I2C_Read_Byte_Single_Reg 0003  
              LCDcreateChar@charmap 000D              __size_of_autoIncrement 00D6  
           __end_of_LCDnoAutoscroll 0D5C                   _DelayMicroseconds 0AAE  
    __size_of_LCDscrollDisplayRight 000E                         _SSPCON1bits 000FC6  
                       _SSPCON2bits 000FC5              __size_of_LCD_Write_Str 0032  
     __end_of_LCDscrollDisplayRight 0CDE                   ??_exerciseDisplay 0032  
                ?_DelayMicroseconds 0001      __end_of_PIN_MANAGER_Initialize 0B98  
      __end_of_LCDscrollDisplayLeft 0CEC                 ??_DelayMicroseconds 0003  
                     __backlightval 0053  
