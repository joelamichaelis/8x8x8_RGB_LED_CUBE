

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Oct 01 09:27:54 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           	psect	idataCOMRAM
    80  010BA6                     __pidataCOMRAM:
    81                           	opt stack 0
    82                           
    83                           ;initializer for _hex
    84  010BA6  30                 	db	48
    85  010BA7  31                 	db	49
    86  010BA8  32                 	db	50
    87  010BA9  33                 	db	51
    88  010BAA  34                 	db	52
    89  010BAB  35                 	db	53
    90  010BAC  36                 	db	54
    91  010BAD  37                 	db	55
    92  010BAE  38                 	db	56
    93  010BAF  39                 	db	57
    94  010BB0  41                 	db	65
    95  010BB1  42                 	db	66
    96  010BB2  43                 	db	67
    97  010BB3  44                 	db	68
    98  010BB4  45                 	db	69
    99  010BB5  46                 	db	70
   100  010BB6  00                 	db	0
   101                           
   102                           ;initializer for LCDsetCursor@F113
   103  010BB7  0000               	dw	0
   104  010BB9  0040               	dw	64
   105  010BBB  0014               	dw	20
   106  010BBD  0054               	dw	84
   107                           
   108                           ;initializer for _bell
   109  010BBF  04                 	db	4
   110  010BC0  0E                 	db	14
   111  010BC1  0E                 	db	14
   112  010BC2  0E                 	db	14
   113  010BC3  1F                 	db	31
   114  010BC4  00                 	db	0
   115  010BC5  04                 	db	4
   116  010BC6  00                 	db	0
   117                           
   118                           	psect	idataBANK0
   119  010842                     __pidataBANK0:
   120                           	opt stack 0
   121                           
   122                           ;initializer for _charmap
   123  010842  4B                 	db	low _bell
   124  010843  00                 	db	high _bell
   125  010844  B1                 	db	low _note
   126  010845  00                 	db	high _note
   127  010846  91                 	db	low _clock
   128  010847  00                 	db	high _clock
   129  010848  A9                 	db	low _heart
   130  010849  00                 	db	high _heart
   131  01084A  A1                 	db	low _duck
   132  01084B  00                 	db	high _duck
   133  01084C  89                 	db	low _check
   134  01084D  00                 	db	high _check
   135  01084E  99                 	db	low _cross
   136  01084F  00                 	db	high _cross
   137  010850  B9                 	db	low _retarrow
   138  010851  00                 	db	high _retarrow
   139                           
   140                           ;initializer for autoIncrement@F16648
   141  010852  4E                 	db	78
   142  010853  6F                 	db	111
   143  010854  20                 	db	32
   144  010855  41                 	db	65
   145  010856  75                 	db	117
   146  010857  74                 	db	116
   147  010858  6F                 	db	111
   148  010859  73                 	db	115
   149  01085A  63                 	db	99
   150  01085B  72                 	db	114
   151  01085C  6F                 	db	111
   152  01085D  6C                 	db	108
   153  01085E  6C                 	db	108
   154  01085F  00                 	db	0
   155                           
   156                           ;initializer for autoIncrement@F16646
   157  010860  41                 	db	65
   158  010861  75                 	db	117
   159  010862  74                 	db	116
   160  010863  6F                 	db	111
   161  010864  73                 	db	115
   162  010865  63                 	db	99
   163  010866  72                 	db	114
   164  010867  6F                 	db	111
   165  010868  6C                 	db	108
   166  010869  6C                 	db	108
   167  01086A  00                 	db	0
   168                           
   169                           ;initializer for _check
   170  01086B  00                 	db	0
   171  01086C  01                 	db	1
   172  01086D  03                 	db	3
   173  01086E  16                 	db	22
   174  01086F  1C                 	db	28
   175  010870  08                 	db	8
   176  010871  00                 	db	0
   177  010872  00                 	db	0
   178                           
   179                           ;initializer for _clock
   180  010873  00                 	db	0
   181  010874  0E                 	db	14
   182  010875  15                 	db	21
   183  010876  17                 	db	23
   184  010877  11                 	db	17
   185  010878  0E                 	db	14
   186  010879  00                 	db	0
   187  01087A  00                 	db	0
   188                           
   189                           ;initializer for _cross
   190  01087B  00                 	db	0
   191  01087C  1B                 	db	27
   192  01087D  0E                 	db	14
   193  01087E  04                 	db	4
   194  01087F  0E                 	db	14
   195  010880  1B                 	db	27
   196  010881  00                 	db	0
   197  010882  00                 	db	0
   198                           
   199                           ;initializer for _duck
   200  010883  00                 	db	0
   201  010884  0C                 	db	12
   202  010885  1D                 	db	29
   203  010886  0F                 	db	15
   204  010887  0F                 	db	15
   205  010888  06                 	db	6
   206  010889  00                 	db	0
   207  01088A  00                 	db	0
   208                           
   209                           ;initializer for _heart
   210  01088B  00                 	db	0
   211  01088C  0A                 	db	10
   212  01088D  1F                 	db	31
   213  01088E  1F                 	db	31
   214  01088F  0E                 	db	14
   215  010890  04                 	db	4
   216  010891  00                 	db	0
   217  010892  00                 	db	0
   218                           
   219                           ;initializer for _note
   220  010893  02                 	db	2
   221  010894  03                 	db	3
   222  010895  02                 	db	2
   223  010896  0E                 	db	14
   224  010897  1E                 	db	30
   225  010898  0C                 	db	12
   226  010899  00                 	db	0
   227  01089A  00                 	db	0
   228                           
   229                           ;initializer for _retarrow
   230  01089B  01                 	db	1
   231  01089C  01                 	db	1
   232  01089D  05                 	db	5
   233  01089E  09                 	db	9
   234  01089F  1F                 	db	31
   235  0108A0  08                 	db	8
   236  0108A1  04                 	db	4
   237  0108A2  00                 	db	0
   238                           
   239                           	psect	nvCOMRAM
   240  000059                     __pnvCOMRAM:
   241                           	opt stack 0
   242  000059                     __numlines:
   243                           	opt stack 0
   244  000059                     	ds	1
   245  0000                     _TMR1	set	4046
   246  0000                     _ADCON1bits	set	4033
   247  0000                     _INTCON2bits	set	4081
   248  0000                     _PIR1bits	set	3998
   249  0000                     _PORTCbits	set	3970
   250  0000                     _SSPADD	set	4040
   251  0000                     _SSPBUF	set	4041
   252  0000                     _SSPCON1	set	4038
   253  0000                     _SSPCON1bits	set	4038
   254  0000                     _SSPCON2	set	4037
   255  0000                     _SSPCON2bits	set	4037
   256  0000                     _SSPSTAT	set	4039
   257  0000                     _SSPSTATbits	set	4039
   258  0000                     _T1CONbits	set	4045
   259  0000                     _TRISCbits	set	3988
   260  0000                     _TRISA1	set	31889
   261  0000                     _TRISA2	set	31890
   262  0000                     _TRISA3	set	31891
   263  0000                     _TRISA4	set	31892
   264  0000                     _TRISA5	set	31893
   265  0000                     _TRISB0	set	31896
   266  0000                     _TRISB1	set	31897
   267  0000                     _TRISB2	set	31898
   268  0000                     _TRISB4	set	31900
   269  0000                     _TRISB5	set	31901
   270  0000                     _TRISC1	set	31905
   271  0000                     _TRISC2	set	31906
   272                           
   273                           	psect	mediumconst
   274  00FEAA                     __pmediumconst:
   275                           	opt stack 0
   276  00FEAA  00                 	db	0
   277  00FEAB                     STR_27:
   278  00FEAB  30                 	db	48	;'0'
   279  00FEAC  31                 	db	49	;'1'
   280  00FEAD  32                 	db	50	;'2'
   281  00FEAE  33                 	db	51	;'3'
   282  00FEAF  34                 	db	52	;'4'
   283  00FEB0  35                 	db	53	;'5'
   284  00FEB1  36                 	db	54	;'6'
   285  00FEB2  37                 	db	55	;'7'
   286  00FEB3  38                 	db	56	;'8'
   287  00FEB4  39                 	db	57	;'9'
   288  00FEB5  41                 	db	65	;'A'
   289  00FEB6  42                 	db	66	;'B'
   290  00FEB7  43                 	db	67	;'C'
   291  00FEB8  44                 	db	68	;'D'
   292  00FEB9  45                 	db	69	;'E'
   293  00FEBA  46                 	db	70	;'F'
   294  00FEBB  47                 	db	71	;'G'
   295  00FEBC  48                 	db	72	;'H'
   296  00FEBD  49                 	db	73	;'I'
   297  00FEBE  4A                 	db	74	;'J'
   298  00FEBF  00                 	db	0
   299  00FEC0                     STR_25:
   300  00FEC0  43                 	db	67	;'C'
   301  00FEC1  75                 	db	117	;'u'
   302  00FEC2  72                 	db	114	;'r'
   303  00FEC3  73                 	db	115	;'s'
   304  00FEC4  6F                 	db	111	;'o'
   305  00FEC5  72                 	db	114	;'r'
   306  00FEC6  20                 	db	32
   307  00FEC7  48                 	db	72	;'H'
   308  00FEC8  6F                 	db	111	;'o'
   309  00FEC9  6D                 	db	109	;'m'
   310  00FECA  65                 	db	101	;'e'
   311  00FECB  20                 	db	32
   312  00FECC  26                 	db	38
   313  00FECD  20                 	db	32
   314  00FECE  42                 	db	66	;'B'
   315  00FECF  6C                 	db	108	;'l'
   316  00FED0  69                 	db	105	;'i'
   317  00FED1  6E                 	db	110	;'n'
   318  00FED2  6B                 	db	107	;'k'
   319  00FED3  00                 	db	0
   320  00FED4                     STR_28:
   321  00FED4  50                 	db	80	;'P'
   322  00FED5  72                 	db	114	;'r'
   323  00FED6  69                 	db	105	;'i'
   324  00FED7  6E                 	db	110	;'n'
   325  00FED8  74                 	db	116	;'t'
   326  00FED9  20                 	db	32
   327  00FEDA  72                 	db	114	;'r'
   328  00FEDB  69                 	db	105	;'i'
   329  00FEDC  67                 	db	103	;'g'
   330  00FEDD  68                 	db	104	;'h'
   331  00FEDE  74                 	db	116	;'t'
   332  00FEDF  20                 	db	32
   333  00FEE0  74                 	db	116	;'t'
   334  00FEE1  6F                 	db	111	;'o'
   335  00FEE2  20                 	db	32
   336  00FEE3  6C                 	db	108	;'l'
   337  00FEE4  65                 	db	101	;'e'
   338  00FEE5  66                 	db	102	;'f'
   339  00FEE6  74                 	db	116	;'t'
   340  00FEE7  00                 	db	0
   341  00FEE8                     STR_26:
   342  00FEE8  50                 	db	80	;'P'
   343  00FEE9  72                 	db	114	;'r'
   344  00FEEA  69                 	db	105	;'i'
   345  00FEEB  6E                 	db	110	;'n'
   346  00FEEC  74                 	db	116	;'t'
   347  00FEED  20                 	db	32
   348  00FEEE  6C                 	db	108	;'l'
   349  00FEEF  65                 	db	101	;'e'
   350  00FEF0  66                 	db	102	;'f'
   351  00FEF1  74                 	db	116	;'t'
   352  00FEF2  20                 	db	32
   353  00FEF3  74                 	db	116	;'t'
   354  00FEF4  6F                 	db	111	;'o'
   355  00FEF5  20                 	db	32
   356  00FEF6  72                 	db	114	;'r'
   357  00FEF7  69                 	db	105	;'i'
   358  00FEF8  67                 	db	103	;'g'
   359  00FEF9  68                 	db	104	;'h'
   360  00FEFA  74                 	db	116	;'t'
   361  00FEFB  00                 	db	0
   362  00FEFC                     STR_36:
   363  00FEFC  42                 	db	66	;'B'
   364  00FEFD  65                 	db	101	;'e'
   365  00FEFE  6C                 	db	108	;'l'
   366  00FEFF  6C                 	db	108	;'l'
   367  00FF00  20                 	db	32
   368  00FF01  63                 	db	99	;'c'
   369  00FF02  68                 	db	104	;'h'
   370  00FF03  61                 	db	97	;'a'
   371  00FF04  72                 	db	114	;'r'
   372  00FF05  20                 	db	32
   373  00FF06  48                 	db	72	;'H'
   374  00FF07  65                 	db	101	;'e'
   375  00FF08  78                 	db	120	;'x'
   376  00FF09  20                 	db	32
   377  00FF0A  72                 	db	114	;'r'
   378  00FF0B  65                 	db	101	;'e'
   379  00FF0C  70                 	db	112	;'p'
   380  00FF0D  3B                 	db	59	;';'
   381  00FF0E  00                 	db	0
   382  00FF0F                     STR_30:
   383  00FF0F  41                 	db	65	;'A'
   384  00FF10  64                 	db	100	;'d'
   385  00FF11  64                 	db	100	;'d'
   386  00FF12  72                 	db	114	;'r'
   387  00FF13  20                 	db	32
   388  00FF14  43                 	db	67	;'C'
   389  00FF15  6F                 	db	111	;'o'
   390  00FF16  75                 	db	117	;'u'
   391  00FF17  6E                 	db	110	;'n'
   392  00FF18  74                 	db	116	;'t'
   393  00FF19  65                 	db	101	;'e'
   394  00FF1A  72                 	db	114	;'r'
   395  00FF1B  20                 	db	32
   396  00FF1C  3A                 	db	58	;':'
   397  00FF1D  20                 	db	32
   398  00FF1E  00                 	db	0
   399  00FF1F                     STR_12:
   400  00FF1F  20                 	db	32
   401  00FF20  20                 	db	32
   402  00FF21  20                 	db	32
   403  00FF22  20                 	db	32
   404  00FF23  20                 	db	32
   405  00FF24  20                 	db	32
   406  00FF25  20                 	db	32
   407  00FF26  20                 	db	32
   408  00FF27  20                 	db	32
   409  00FF28  20                 	db	32
   410  00FF29  20                 	db	32
   411  00FF2A  20                 	db	32
   412  00FF2B  20                 	db	32
   413  00FF2C  00                 	db	0
   414  00FF2D                     STR_13:
   415  00FF2D  42                 	db	66	;'B'
   416  00FF2E  61                 	db	97	;'a'
   417  00FF2F  63                 	db	99	;'c'
   418  00FF30  6B                 	db	107	;'k'
   419  00FF31  6C                 	db	108	;'l'
   420  00FF32  69                 	db	105	;'i'
   421  00FF33  67                 	db	103	;'g'
   422  00FF34  68                 	db	104	;'h'
   423  00FF35  74                 	db	116	;'t'
   424  00FF36  20                 	db	32
   425  00FF37  4F                 	db	79	;'O'
   426  00FF38  6E                 	db	110	;'n'
   427  00FF39  20                 	db	32
   428  00FF3A  00                 	db	0
   429  00FF3B                     STR_10:
   430  00FF3B  42                 	db	66	;'B'
   431  00FF3C  61                 	db	97	;'a'
   432  00FF3D  63                 	db	99	;'c'
   433  00FF3E  6B                 	db	107	;'k'
   434  00FF3F  6C                 	db	108	;'l'
   435  00FF40  69                 	db	105	;'i'
   436  00FF41  67                 	db	103	;'g'
   437  00FF42  68                 	db	104	;'h'
   438  00FF43  74                 	db	116	;'t'
   439  00FF44  20                 	db	32
   440  00FF45  4F                 	db	79	;'O'
   441  00FF46  66                 	db	102	;'f'
   442  00FF47  66                 	db	102	;'f'
   443  00FF48  00                 	db	0
   444  00FF49                     STR_32:
   445  00FF49  42                 	db	66	;'B'
   446  00FF4A  75                 	db	117	;'u'
   447  00FF4B  73                 	db	115	;'s'
   448  00FF4C  79                 	db	121	;'y'
   449  00FF4D  20                 	db	32
   450  00FF4E  46                 	db	70	;'F'
   451  00FF4F  6C                 	db	108	;'l'
   452  00FF50  61                 	db	97	;'a'
   453  00FF51  67                 	db	103	;'g'
   454  00FF52  20                 	db	32
   455  00FF53  3A                 	db	58	;':'
   456  00FF54  20                 	db	32
   457  00FF55  00                 	db	0
   458  00FF56                     STR_3:
   459  00FF56  53                 	db	83	;'S'
   460  00FF57  63                 	db	99	;'c'
   461  00FF58  72                 	db	114	;'r'
   462  00FF59  6F                 	db	111	;'o'
   463  00FF5A  6C                 	db	108	;'l'
   464  00FF5B  6C                 	db	108	;'l'
   465  00FF5C  20                 	db	32
   466  00FF5D  4C                 	db	76	;'L'
   467  00FF5E  65                 	db	101	;'e'
   468  00FF5F  66                 	db	102	;'f'
   469  00FF60  74                 	db	116	;'t'
   470  00FF61  20                 	db	32
   471  00FF62  00                 	db	0
   472  00FF63                     STR_9:
   473  00FF63  42                 	db	66	;'B'
   474  00FF64  61                 	db	97	;'a'
   475  00FF65  63                 	db	99	;'c'
   476  00FF66  6B                 	db	107	;'k'
   477  00FF67  6C                 	db	108	;'l'
   478  00FF68  69                 	db	105	;'i'
   479  00FF69  67                 	db	103	;'g'
   480  00FF6A  68                 	db	104	;'h'
   481  00FF6B  74                 	db	116	;'t'
   482  00FF6C  20                 	db	32
   483  00FF6D  4F                 	db	79	;'O'
   484  00FF6E  6E                 	db	110	;'n'
   485  00FF6F  00                 	db	0
   486  00FF70                     STR_1:
   487  00FF70  53                 	db	83	;'S'
   488  00FF71  63                 	db	99	;'c'
   489  00FF72  72                 	db	114	;'r'
   490  00FF73  6F                 	db	111	;'o'
   491  00FF74  6C                 	db	108	;'l'
   492  00FF75  6C                 	db	108	;'l'
   493  00FF76  20                 	db	32
   494  00FF77  52                 	db	82	;'R'
   495  00FF78  69                 	db	105	;'i'
   496  00FF79  67                 	db	103	;'g'
   497  00FF7A  68                 	db	104	;'h'
   498  00FF7B  74                 	db	116	;'t'
   499  00FF7C  00                 	db	0
   500  00FF7D                     STR_6:
   501  00FF7D  44                 	db	68	;'D'
   502  00FF7E  69                 	db	105	;'i'
   503  00FF7F  73                 	db	115	;'s'
   504  00FF80  70                 	db	112	;'p'
   505  00FF81  6C                 	db	108	;'l'
   506  00FF82  61                 	db	97	;'a'
   507  00FF83  79                 	db	121	;'y'
   508  00FF84  20                 	db	32
   509  00FF85  4F                 	db	79	;'O'
   510  00FF86  6E                 	db	110	;'n'
   511  00FF87  20                 	db	32
   512  00FF88  00                 	db	0
   513  00FF89                     STR_24:
   514  00FF89  43                 	db	67	;'C'
   515  00FF8A  75                 	db	117	;'u'
   516  00FF8B  72                 	db	114	;'r'
   517  00FF8C  73                 	db	115	;'s'
   518  00FF8D  6F                 	db	111	;'o'
   519  00FF8E  72                 	db	114	;'r'
   520  00FF8F  20                 	db	32
   521  00FF90  48                 	db	72	;'H'
   522  00FF91  6F                 	db	111	;'o'
   523  00FF92  6D                 	db	109	;'m'
   524  00FF93  65                 	db	101	;'e'
   525  00FF94  00                 	db	0
   526  00FF95                     STR_8:
   527  00FF95  44                 	db	68	;'D'
   528  00FF96  69                 	db	105	;'i'
   529  00FF97  73                 	db	115	;'s'
   530  00FF98  70                 	db	112	;'p'
   531  00FF99  6C                 	db	108	;'l'
   532  00FF9A  61                 	db	97	;'a'
   533  00FF9B  79                 	db	121	;'y'
   534  00FF9C  20                 	db	32
   535  00FF9D  4F                 	db	79	;'O'
   536  00FF9E  66                 	db	102	;'f'
   537  00FF9F  66                 	db	102	;'f'
   538  00FFA0  00                 	db	0
   539  00FFA1                     STR_20:
   540  00FFA1  43                 	db	67	;'C'
   541  00FFA2  75                 	db	117	;'u'
   542  00FFA3  72                 	db	114	;'r'
   543  00FFA4  73                 	db	115	;'s'
   544  00FFA5  6F                 	db	111	;'o'
   545  00FFA6  72                 	db	114	;'r'
   546  00FFA7  20                 	db	32
   547  00FFA8  4F                 	db	79	;'O'
   548  00FFA9  66                 	db	102	;'f'
   549  00FFAA  66                 	db	102	;'f'
   550  00FFAB  00                 	db	0
   551  00FFAC                     STR_23:
   552  00FFAC  42                 	db	66	;'B'
   553  00FFAD  6C                 	db	108	;'l'
   554  00FFAE  69                 	db	105	;'i'
   555  00FFAF  6E                 	db	110	;'n'
   556  00FFB0  6B                 	db	107	;'k'
   557  00FFB1  20                 	db	32
   558  00FFB2  4F                 	db	79	;'O'
   559  00FFB3  66                 	db	102	;'f'
   560  00FFB4  66                 	db	102	;'f'
   561  00FFB5  00                 	db	0
   562  00FFB6                     STR_21:
   563  00FFB6  43                 	db	67	;'C'
   564  00FFB7  75                 	db	117	;'u'
   565  00FFB8  72                 	db	114	;'r'
   566  00FFB9  73                 	db	115	;'s'
   567  00FFBA  6F                 	db	111	;'o'
   568  00FFBB  72                 	db	114	;'r'
   569  00FFBC  20                 	db	32
   570  00FFBD  4F                 	db	79	;'O'
   571  00FFBE  6E                 	db	110	;'n'
   572  00FFBF  00                 	db	0
   573  00FFC0                     STR_22:
   574  00FFC0  42                 	db	66	;'B'
   575  00FFC1  6C                 	db	108	;'l'
   576  00FFC2  69                 	db	105	;'i'
   577  00FFC3  6E                 	db	110	;'n'
   578  00FFC4  6B                 	db	107	;'k'
   579  00FFC5  20                 	db	32
   580  00FFC6  4F                 	db	79	;'O'
   581  00FFC7  6E                 	db	110	;'n'
   582  00FFC8  00                 	db	0
   583  00FFC9                     STR_19:
   584  00FFC9  50                 	db	80	;'P'
   585  00FFCA  72                 	db	114	;'r'
   586  00FFCB  69                 	db	105	;'i'
   587  00FFCC  6E                 	db	110	;'n'
   588  00FFCD  74                 	db	116	;'t'
   589  00FFCE  20                 	db	32
   590  00FFCF  61                 	db	97	;'a'
   591  00FFD0  74                 	db	116	;'t'
   592  00FFD1  00                 	db	0
   593  00FFD2                     STR_4:
   594  00FFD2  3C                 	db	60	;'<'
   595  00FFD3  2D                 	db	45
   596  00FFD4  2D                 	db	45
   597  00FFD5  2D                 	db	45
   598  00FFD6  2D                 	db	45
   599  00FFD7  00                 	db	0
   600  00FFD8                     STR_15:
   601  00FFD8  40                 	db	64	;'@'
   602  00FFD9  3A                 	db	58	;':'
   603  00FFDA  30                 	db	48	;'0'
   604  00FFDB  2C                 	db	44
   605  00FFDC  30                 	db	48	;'0'
   606  00FFDD  00                 	db	0
   607  00FFDE                     STR_16:
   608  00FFDE  40                 	db	64	;'@'
   609  00FFDF  3A                 	db	58	;':'
   610  00FFE0  31                 	db	49	;'1'
   611  00FFE1  2C                 	db	44
   612  00FFE2  31                 	db	49	;'1'
   613  00FFE3  00                 	db	0
   614  00FFE4                     STR_17:
   615  00FFE4  40                 	db	64	;'@'
   616  00FFE5  3A                 	db	58	;':'
   617  00FFE6  32                 	db	50	;'2'
   618  00FFE7  2C                 	db	44
   619  00FFE8  32                 	db	50	;'2'
   620  00FFE9  00                 	db	0
   621  00FFEA                     STR_18:
   622  00FFEA  40                 	db	64	;'@'
   623  00FFEB  3A                 	db	58	;':'
   624  00FFEC  33                 	db	51	;'3'
   625  00FFED  2C                 	db	44
   626  00FFEE  33                 	db	51	;'3'
   627  00FFEF  00                 	db	0
   628  00FFF0                     STR_2:
   629  00FFF0  2D                 	db	45
   630  00FFF1  2D                 	db	45
   631  00FFF2  2D                 	db	45
   632  00FFF3  2D                 	db	45
   633  00FFF4  3E                 	db	62	;'>'
   634  00FFF5  00                 	db	0
   635  00FFF6                     STR_34:
   636  00FFF6  51                 	db	81	;'Q'
   637  00FFF7  20                 	db	32
   638  00FFF8  3D                 	db	61	;'='
   639  00FFF9  20                 	db	32
   640  00FFFA  00                 	db	0
   641  00FFFB                     STR_31:
   642  00FFFB  30                 	db	48	;'0'
   643  00FFFC  78                 	db	120	;'x'
   644  00FFFD  00                 	db	0
   645  0000                     
   646                           ; #config settings
   647  00FFFE  00                 	db	0	; dummy byte at the end
   648  0000                     
   649                           	psect	cinit
   650  0108A4                     __pcinit:
   651                           	opt stack 0
   652  0108A4                     start_initialization:
   653                           	opt stack 0
   654  0108A4                     __initialization:
   655                           	opt stack 0
   656                           
   657                           ; Clear objects allocated to COMRAM (6 bytes)
   658  0108A4  6A58               	clrf	(__pbssCOMRAM+5)& (0+255),c
   659  0108A6  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
   660  0108A8  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   661  0108AA  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   662  0108AC  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   663  0108AE  6A53               	clrf	__pbssCOMRAM& (0+255),c
   664                           
   665                           ; Initialize objects allocated to BANK0 (97 bytes)
   666                           ; load TBLPTR registers with __pidataBANK0
   667  0108B0  0E42               	movlw	low __pidataBANK0
   668  0108B2  6EF6               	movwf	tblptrl,c
   669  0108B4  0E08               	movlw	high __pidataBANK0
   670  0108B6  6EF7               	movwf	tblptrh,c
   671  0108B8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   672  0108BA  6EF8               	movwf	tblptru,c
   673  0108BC  EE00  F060         	lfsr	0,__pdataBANK0
   674  0108C0  EE10 F061          	lfsr	1,97
   675  0108C4                     copy_data0:
   676  0108C4  0009               	tblrd		*+
   677  0108C6  CFF5 FFEE          	movff	tablat,postinc0
   678  0108CA  50E5               	movf	postdec1,w,c
   679  0108CC  50E1               	movf	fsr1l,w,c
   680  0108CE  E1FA               	bnz	copy_data0
   681                           
   682                           ; Initialize objects allocated to COMRAM (33 bytes)
   683                           ; load TBLPTR registers with __pidataCOMRAM
   684  0108D0  0EA6               	movlw	low __pidataCOMRAM
   685  0108D2  6EF6               	movwf	tblptrl,c
   686  0108D4  0E0B               	movlw	high __pidataCOMRAM
   687  0108D6  6EF7               	movwf	tblptrh,c
   688  0108D8  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   689  0108DA  6EF8               	movwf	tblptru,c
   690  0108DC  EE00  F032         	lfsr	0,__pdataCOMRAM
   691  0108E0  EE10 F021          	lfsr	1,33
   692  0108E4                     copy_data1:
   693  0108E4  0009               	tblrd		*+
   694  0108E6  CFF5 FFEE          	movff	tablat,postinc0
   695  0108EA  50E5               	movf	postdec1,w,c
   696  0108EC  50E1               	movf	fsr1l,w,c
   697  0108EE  E1FA               	bnz	copy_data1
   698  0108F0                     end_of_initialization:
   699                           	opt stack 0
   700  0108F0                     __end_of__initialization:
   701                           	opt stack 0
   702  0108F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   703  0108F2  6EF8               	movwf	tblptru,c
   704  0108F4  0100               	movlb	0
   705  0108F6  EFD3  F086         	goto	_main	;jump to C main() function
   706                           tblptru	equ	0xFF8
   707                           tblptrh	equ	0xFF7
   708                           tblptrl	equ	0xFF6
   709                           tablat	equ	0xFF5
   710                           postinc0	equ	0xFEE
   711                           postdec1	equ	0xFE5
   712                           fsr1l	equ	0xFE1
   713                           
   714                           	psect	bssCOMRAM
   715  000053                     __pbssCOMRAM:
   716                           	opt stack 0
   717  000053                     __backlightval:
   718                           	opt stack 0
   719  000053                     	ds	1
   720  000054                     __displaycontrol:
   721                           	opt stack 0
   722  000054                     	ds	1
   723  000055                     __displayfunction:
   724                           	opt stack 0
   725  000055                     	ds	1
   726  000056                     __entrymodeset:
   727                           	opt stack 0
   728  000056                     	ds	1
   729  000057                     __functionset:
   730                           	opt stack 0
   731  000057                     	ds	1
   732  000058                     _x:
   733                           	opt stack 0
   734  000058                     	ds	1
   735                           tblptru	equ	0xFF8
   736                           tblptrh	equ	0xFF7
   737                           tblptrl	equ	0xFF6
   738                           tablat	equ	0xFF5
   739                           postinc0	equ	0xFEE
   740                           postdec1	equ	0xFE5
   741                           fsr1l	equ	0xFE1
   742                           
   743                           	psect	dataCOMRAM
   744  000032                     __pdataCOMRAM:
   745                           	opt stack 0
   746  000032                     _hex:
   747                           	opt stack 0
   748  000032                     	ds	17
   749  000043                     LCDsetCursor@F113:
   750                           	opt stack 0
   751  000043                     	ds	8
   752  00004B                     _bell:
   753                           	opt stack 0
   754  00004B                     	ds	8
   755                           tblptru	equ	0xFF8
   756                           tblptrh	equ	0xFF7
   757                           tblptrl	equ	0xFF6
   758                           tablat	equ	0xFF5
   759                           postinc0	equ	0xFEE
   760                           postdec1	equ	0xFE5
   761                           fsr1l	equ	0xFE1
   762                           
   763                           	psect	dataBANK0
   764  000060                     __pdataBANK0:
   765                           	opt stack 0
   766  000060                     _charmap:
   767                           	opt stack 0
   768  000060                     	ds	16
   769  000070                     autoIncrement@F16648:
   770                           	opt stack 0
   771  000070                     	ds	14
   772  00007E                     autoIncrement@F16646:
   773                           	opt stack 0
   774  00007E                     	ds	11
   775  000089                     _check:
   776                           	opt stack 0
   777  000089                     	ds	8
   778  000091                     _clock:
   779                           	opt stack 0
   780  000091                     	ds	8
   781  000099                     _cross:
   782                           	opt stack 0
   783  000099                     	ds	8
   784  0000A1                     _duck:
   785                           	opt stack 0
   786  0000A1                     	ds	8
   787  0000A9                     _heart:
   788                           	opt stack 0
   789  0000A9                     	ds	8
   790  0000B1                     _note:
   791                           	opt stack 0
   792  0000B1                     	ds	8
   793  0000B9                     _retarrow:
   794                           	opt stack 0
   795  0000B9                     	ds	8
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           postinc0	equ	0xFEE
   801                           postdec1	equ	0xFE5
   802                           fsr1l	equ	0xFE1
   803                           
   804                           	psect	cstackCOMRAM
   805  000001                     __pcstackCOMRAM:
   806                           	opt stack 0
   807  000001                     ??_IdleI2C:
   808  000001                     OpenI2C@slew:
   809                           	opt stack 0
   810  000001                     DelayMicroseconds@delayTime:
   811                           	opt stack 0
   812  000001                     DelayMilliseconds@delayTime:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x0
   816  000001                     	ds	1
   817  000002                     OpenI2C@sync_mode:
   818                           	opt stack 0
   819  000002                     WriteI2C@data_out:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x1
   823  000002                     	ds	1
   824  000003                     ??_DelayMicroseconds:
   825  000003                     I2C_Write_Byte_Single_Reg@info:
   826                           	opt stack 0
   827  000003                     I2C_Read_Byte_Single_Reg@device:
   828                           	opt stack 0
   829  000003                     DelayMilliseconds@x:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x2
   833  000003                     	ds	1
   834  000004                     I2C_Write_Byte_Single_Reg@device:
   835                           	opt stack 0
   836  000004                     I2C_Read_Byte_Single_Reg@b:
   837                           	opt stack 0
   838                           
   839                           ; 1 bytes @ 0x3
   840  000004                     	ds	1
   841  000005                     LCDwritePCF8574@value:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x4
   845  000005                     	ds	1
   846  000006                     LCDpulseEnableNeg@_data:
   847                           	opt stack 0
   848  000006                     LCDpulseEnablePos@_data:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x5
   852  000006                     	ds	1
   853  000007                     LCDwrite4bits@nibEnRsMode:
   854                           	opt stack 0
   855  000007                     LCDread4bits@b:
   856                           	opt stack 0
   857                           
   858                           ; 1 bytes @ 0x6
   859  000007                     	ds	1
   860  000008                     LCDsend@RsMode:
   861                           	opt stack 0
   862  000008                     LCDread4bits@RsEnMode:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x7
   866  000008                     	ds	1
   867  000009                     ??_LCDreceive:
   868  000009                     LCDsend@highnib:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x8
   872  000009                     	ds	1
   873  00000A                     LCDsend@lownib:
   874                           	opt stack 0
   875  00000A                     LCDreceive@highnib:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x9
   879  00000A                     	ds	1
   880  00000B                     LCDsend@value:
   881                           	opt stack 0
   882  00000B                     LCDreceive@lownib:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0xA
   886  00000B                     	ds	1
   887  00000C                     LCDcommandWrite@value:
   888                           	opt stack 0
   889  00000C                     LCDdataWrite@value:
   890                           	opt stack 0
   891  00000C                     LCDreceive@RsMode:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0xB
   895  00000C                     	ds	1
   896  00000D                     LCD_Write_Char@message:
   897                           	opt stack 0
   898  00000D                     LCDsetCursor@row:
   899                           	opt stack 0
   900  00000D                     LCDreadDDRam@address:
   901                           	opt stack 0
   902  00000D                     LCDreadCGRam@address:
   903                           	opt stack 0
   904  00000D                     LCD_Write_Str@message:
   905                           	opt stack 0
   906  00000D                     LCDcreateChar@charmap:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0xC
   910  00000D                     	ds	1
   911  00000E                     LCDsetCursor@row_offsets:
   912                           	opt stack 0
   913                           
   914                           ; 8 bytes @ 0xD
   915  00000E                     	ds	1
   916  00000F                     LCDcreateChar@location:
   917                           	opt stack 0
   918  00000F                     LCD_Write_Str@message_ptr:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0xE
   922  00000F                     	ds	1
   923  000010                     LCDcreateChar@i:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0xF
   927  000010                     	ds	1
   928  000011                     
   929                           ; 0 bytes @ 0x10
   930  000011                     	ds	5
   931  000016                     LCDsetCursor@col:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x15
   935  000016                     	ds	1
   936  000017                     ??_controlMemoryReading:
   937  000017                     displayLeftRightScroll@x:
   938                           	opt stack 0
   939  000017                     displayOnOff@x:
   940                           	opt stack 0
   941  000017                     backLightControl@x:
   942                           	opt stack 0
   943  000017                     putHexString@r:
   944                           	opt stack 0
   945  000017                     autoIncrement@NoAutoscroll:
   946                           	opt stack 0
   947                           
   948                           ; 14 bytes @ 0x16
   949  000017                     	ds	1
   950  000018                     displayLeftRightScroll@x_713:
   951                           	opt stack 0
   952  000018                     putHexString@hexval:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x17
   956  000018                     	ds	1
   957  000019                     ??_putHexString:
   958  000019                     controlMemoryReading@x:
   959                           	opt stack 0
   960                           
   961                           ; 1 bytes @ 0x18
   962  000019                     	ds	2
   963  00001B                     putHexString@c:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x1A
   967  00001B                     	ds	1
   968  00001C                     ??_dataMemoryReading:
   969                           
   970                           ; 0 bytes @ 0x1B
   971  00001C                     	ds	2
   972  00001E                     dataMemoryReading@r:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x1D
   976  00001E                     	ds	1
   977  00001F                     dataMemoryReading@c:
   978                           	opt stack 0
   979                           
   980                           ; 1 bytes @ 0x1E
   981  00001F                     	ds	1
   982  000020                     dataMemoryReading@x:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x1F
   986  000020                     	ds	1
   987  000021                     dataMemoryReading@p:
   988                           	opt stack 0
   989                           
   990                           ; 1 bytes @ 0x20
   991  000021                     	ds	1
   992  000022                     dataMemoryReading@i:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x21
   996  000022                     	ds	3
   997  000025                     autoIncrement@Autoscroll:
   998                           	opt stack 0
   999                           
  1000                           ; 11 bytes @ 0x24
  1001  000025                     	ds	11
  1002  000030                     autoIncrement@p:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x2F
  1006  000030                     	ds	2
  1007  000032                     tblptru	equ	0xFF8
  1008                           tblptrh	equ	0xFF7
  1009                           tblptrl	equ	0xFF6
  1010                           tablat	equ	0xFF5
  1011                           postinc0	equ	0xFEE
  1012                           postdec1	equ	0xFE5
  1013                           fsr1l	equ	0xFE1
  1014                           
  1015                           ; 0 bytes @ 0x31
  1016 ;;
  1017 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1018 ;;
  1019 ;; *************** function _main *****************
  1020 ;; Defined at:
  1021 ;;		line 76 in file "main.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;		None               void
  1028 ;; Registers used:
  1029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels required when called:   12
  1041 ;; This function calls:
  1042 ;;		_SYSTEM_Initialize
  1043 ;;		_exerciseDisplay
  1044 ;; This function is called by:
  1045 ;;		Startup code after reset
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text0
  1050  010DA6                     __ptext0:
  1051                           	opt stack 0
  1052  010DA6                     _main:
  1053                           	opt stack 19
  1054                           
  1055                           ;main.c: 79: SYSTEM_Initialize();
  1056                           
  1057                           ;incstack = 0
  1058  010DA6  EC1B  F086         	call	_SYSTEM_Initialize	;wreg free
  1059  010DAA                     l2576:
  1060                           
  1061                           ;main.c: 82: exerciseDisplay();
  1062  010DAA  EC9B  F085         	call	_exerciseDisplay	;wreg free
  1063  010DAE  D7FD               	goto	l2576
  1064  010DB0                     __end_of_main:
  1065                           	opt stack 0
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           postinc0	equ	0xFEE
  1071                           postdec1	equ	0xFE5
  1072                           fsr1l	equ	0xFE1
  1073                           
  1074 ;; *************** function _exerciseDisplay *****************
  1075 ;; Defined at:
  1076 ;;		line 88 in file "main.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;		None               void
  1083 ;; Registers used:
  1084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1094 ;;Total ram usage:        0 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:   11
  1097 ;; This function calls:
  1098 ;;		_autoIncrement
  1099 ;;		_backLightControl
  1100 ;;		_controlMemoryReading
  1101 ;;		_cursorControl
  1102 ;;		_dataMemoryReading
  1103 ;;		_displayLeftRightScroll
  1104 ;;		_displayOnOff
  1105 ;;		_printAt
  1106 ;;		_printLeftAndRight
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text1
  1113  010B36                     __ptext1:
  1114                           	opt stack 0
  1115  010B36                     _exerciseDisplay:
  1116                           	opt stack 19
  1117                           
  1118                           ;main.c: 90: autoIncrement();
  1119                           
  1120                           ;incstack = 0
  1121  010B36  EC41  F081         	call	_autoIncrement	;wreg free
  1122                           
  1123                           ;main.c: 91: displayLeftRightScroll();
  1124  010B3A  EC74  F082         	call	_displayLeftRightScroll	;wreg free
  1125                           
  1126                           ;main.c: 92: displayOnOff();
  1127  010B3E  EC69  F083         	call	_displayOnOff	;wreg free
  1128                           
  1129                           ;main.c: 93: backLightControl();
  1130  010B42  ECAC  F081         	call	_backLightControl	;wreg free
  1131                           
  1132                           ;main.c: 94: printAt();
  1133  010B46  ECAA  F083         	call	_printAt	;wreg free
  1134                           
  1135                           ;main.c: 95: cursorControl();
  1136  010B4A  EC11  F082         	call	_cursorControl	;wreg free
  1137                           
  1138                           ;main.c: 96: printLeftAndRight();
  1139  010B4E  ECE7  F083         	call	_printLeftAndRight	;wreg free
  1140                           
  1141                           ;main.c: 97: controlMemoryReading();
  1142  010B52  ECA7  F080         	call	_controlMemoryReading	;wreg free
  1143                           
  1144                           ;main.c: 98: dataMemoryReading();
  1145  010B56  EC00  F080         	call	_dataMemoryReading	;wreg free
  1146  010B5A  0012               	return		;funcret
  1147  010B5C                     __end_of_exerciseDisplay:
  1148                           	opt stack 0
  1149                           tblptru	equ	0xFF8
  1150                           tblptrh	equ	0xFF7
  1151                           tblptrl	equ	0xFF6
  1152                           tablat	equ	0xFF5
  1153                           postinc0	equ	0xFEE
  1154                           postdec1	equ	0xFE5
  1155                           fsr1l	equ	0xFE1
  1156                           
  1157 ;; *************** function _printLeftAndRight *****************
  1158 ;; Defined at:
  1159 ;;		line 273 in file "main.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;		None               void
  1166 ;; Registers used:
  1167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    9
  1180 ;; This function calls:
  1181 ;;		_DelayMilliseconds
  1182 ;;		_LCD_Write_Str
  1183 ;;		_LCDblinkOff
  1184 ;;		_LCDclear
  1185 ;;		_LCDcursorOff
  1186 ;;		_LCDleftToRight
  1187 ;;		_LCDrightToLeft
  1188 ;;		_LCDsetCursor
  1189 ;; This function is called by:
  1190 ;;		_exerciseDisplay
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text2
  1195  0107CE                     __ptext2:
  1196                           	opt stack 0
  1197  0107CE                     _printLeftAndRight:
  1198                           	opt stack 20
  1199                           
  1200                           ;main.c: 275: LCDclear();
  1201                           
  1202                           ;incstack = 0
  1203  0107CE  EC30  F086         	call	_LCDclear	;wreg free
  1204                           
  1205                           ;main.c: 276: LCDcursorOff();
  1206  0107D2  ECB5  F086         	call	_LCDcursorOff	;wreg free
  1207                           
  1208                           ;main.c: 277: LCDblinkOff();
  1209  0107D6  ECBB  F086         	call	_LCDblinkOff	;wreg free
  1210                           
  1211                           ;main.c: 279: LCDleftToRight();
  1212  0107DA  EC91  F086         	call	_LCDleftToRight	;wreg free
  1213                           
  1214                           ;main.c: 280: LCD_Write_Str("Print left to right");
  1215  0107DE  0EE8               	movlw	low STR_26
  1216  0107E0  6E0D               	movwf	LCD_Write_Str@message,c
  1217  0107E2  0EFE               	movlw	high STR_26
  1218  0107E4  6E0E               	movwf	LCD_Write_Str@message+1,c
  1219  0107E6  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1220                           
  1221                           ;main.c: 281: LCDsetCursor(0,1);
  1222  0107EA  0E01               	movlw	1
  1223  0107EC  6E0D               	movwf	LCDsetCursor@row,c
  1224  0107EE  0E00               	movlw	0
  1225  0107F0  ECE3  F084         	call	_LCDsetCursor
  1226                           
  1227                           ;main.c: 282: LCD_Write_Str("0123456789ABCDEFGHIJ");
  1228  0107F4  0EAB               	movlw	low STR_27
  1229  0107F6  6E0D               	movwf	LCD_Write_Str@message,c
  1230  0107F8  0EFE               	movlw	high STR_27
  1231  0107FA  6E0E               	movwf	LCD_Write_Str@message+1,c
  1232  0107FC  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1233                           
  1234                           ;main.c: 283: LCDsetCursor(0,2);
  1235  010800  0E02               	movlw	2
  1236  010802  6E0D               	movwf	LCDsetCursor@row,c
  1237  010804  0E00               	movlw	0
  1238  010806  ECE3  F084         	call	_LCDsetCursor
  1239                           
  1240                           ;main.c: 284: LCD_Write_Str("Print right to left");
  1241  01080A  0ED4               	movlw	low STR_28
  1242  01080C  6E0D               	movwf	LCD_Write_Str@message,c
  1243  01080E  0EFE               	movlw	high STR_28
  1244  010810  6E0E               	movwf	LCD_Write_Str@message+1,c
  1245  010812  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1246                           
  1247                           ;main.c: 285: LCDrightToLeft();
  1248  010816  EC8B  F086         	call	_LCDrightToLeft	;wreg free
  1249                           
  1250                           ;main.c: 286: LCDsetCursor(19,4);
  1251  01081A  0E04               	movlw	4
  1252  01081C  6E0D               	movwf	LCDsetCursor@row,c
  1253  01081E  0E13               	movlw	19
  1254  010820  ECE3  F084         	call	_LCDsetCursor
  1255                           
  1256                           ;main.c: 287: LCD_Write_Str("0123456789ABCDEFGHIJ");
  1257  010824  0EAB               	movlw	low STR_27
  1258  010826  6E0D               	movwf	LCD_Write_Str@message,c
  1259  010828  0EFE               	movlw	high STR_27
  1260  01082A  6E0E               	movwf	LCD_Write_Str@message+1,c
  1261  01082C  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1262                           
  1263                           ;main.c: 288: LCDleftToRight();
  1264  010830  EC91  F086         	call	_LCDleftToRight	;wreg free
  1265                           
  1266                           ;main.c: 289: DelayMilliseconds(5000);
  1267  010834  0E13               	movlw	19
  1268  010836  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  1269  010838  0E88               	movlw	136
  1270  01083A  6E01               	movwf	DelayMilliseconds@delayTime,c
  1271  01083C  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  1272  010840  0012               	return		;funcret
  1273  010842                     __end_of_printLeftAndRight:
  1274                           	opt stack 0
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           postinc0	equ	0xFEE
  1280                           postdec1	equ	0xFE5
  1281                           fsr1l	equ	0xFE1
  1282                           
  1283 ;; *************** function _LCDrightToLeft *****************
  1284 ;; Defined at:
  1285 ;;		line 340 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    8
  1306 ;; This function calls:
  1307 ;;		_LCDcommandWrite
  1308 ;; This function is called by:
  1309 ;;		_printLeftAndRight
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text3
  1314  010D16                     __ptext3:
  1315                           	opt stack 0
  1316  010D16                     _LCDrightToLeft:
  1317                           	opt stack 20
  1318                           
  1319                           ;LCD_I2C_PCF8574.c: 341: _entrymodeset &= ~0x02;
  1320                           
  1321                           ;incstack = 0
  1322  010D16  9256               	bcf	__entrymodeset,1,c
  1323                           
  1324                           ;LCD_I2C_PCF8574.c: 343: LCDcommandWrite(0x04 | _entrymodeset);
  1325  010D18  5056               	movf	__entrymodeset,w,c
  1326  010D1A  0904               	iorlw	4
  1327  010D1C  EC84  F086         	call	_LCDcommandWrite
  1328  010D20  0012               	return		;funcret
  1329  010D22                     __end_of_LCDrightToLeft:
  1330                           	opt stack 0
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           postinc0	equ	0xFEE
  1336                           postdec1	equ	0xFE5
  1337                           fsr1l	equ	0xFE1
  1338                           
  1339 ;; *************** function _LCDleftToRight *****************
  1340 ;; Defined at:
  1341 ;;		line 333 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;		None               void
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1359 ;;Total ram usage:        0 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    8
  1362 ;; This function calls:
  1363 ;;		_LCDcommandWrite
  1364 ;; This function is called by:
  1365 ;;		_printLeftAndRight
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text4
  1370  010D22                     __ptext4:
  1371                           	opt stack 0
  1372  010D22                     _LCDleftToRight:
  1373                           	opt stack 20
  1374                           
  1375                           ;LCD_I2C_PCF8574.c: 334: _entrymodeset |= 0x02;
  1376                           
  1377                           ;incstack = 0
  1378  010D22  8256               	bsf	__entrymodeset,1,c
  1379                           
  1380                           ;LCD_I2C_PCF8574.c: 336: LCDcommandWrite(0x04 | _entrymodeset);
  1381  010D24  5056               	movf	__entrymodeset,w,c
  1382  010D26  0904               	iorlw	4
  1383  010D28  EC84  F086         	call	_LCDcommandWrite
  1384  010D2C  0012               	return		;funcret
  1385  010D2E                     __end_of_LCDleftToRight:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           postinc0	equ	0xFEE
  1392                           postdec1	equ	0xFE5
  1393                           fsr1l	equ	0xFE1
  1394                           
  1395 ;; *************** function _printAt *****************
  1396 ;; Defined at:
  1397 ;;		line 225 in file "main.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;		None               void
  1404 ;; Registers used:
  1405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    9
  1418 ;; This function calls:
  1419 ;;		_DelayMilliseconds
  1420 ;;		_LCD_Write_Str
  1421 ;;		_LCDclear
  1422 ;;		_LCDcursorOff
  1423 ;;		_LCDsetCursor
  1424 ;; This function is called by:
  1425 ;;		_exerciseDisplay
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text5
  1430  010754                     __ptext5:
  1431                           	opt stack 0
  1432  010754                     _printAt:
  1433                           	opt stack 20
  1434                           
  1435                           ;main.c: 227: LCDclear();
  1436                           
  1437                           ;incstack = 0
  1438  010754  EC30  F086         	call	_LCDclear	;wreg free
  1439                           
  1440                           ;main.c: 228: LCDcursorOff();
  1441  010758  ECB5  F086         	call	_LCDcursorOff	;wreg free
  1442                           
  1443                           ;main.c: 230: LCD_Write_Str("@:0,0");
  1444  01075C  0ED8               	movlw	low STR_15
  1445  01075E  6E0D               	movwf	LCD_Write_Str@message,c
  1446  010760  0EFF               	movlw	high STR_15
  1447  010762  6E0E               	movwf	LCD_Write_Str@message+1,c
  1448  010764  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1449                           
  1450                           ;main.c: 231: LCDsetCursor(1,1);
  1451  010768  0E01               	movlw	1
  1452  01076A  6E0D               	movwf	LCDsetCursor@row,c
  1453  01076C  0E01               	movlw	1
  1454  01076E  ECE3  F084         	call	_LCDsetCursor
  1455                           
  1456                           ;main.c: 232: LCD_Write_Str("@:1,1");
  1457  010772  0EDE               	movlw	low STR_16
  1458  010774  6E0D               	movwf	LCD_Write_Str@message,c
  1459  010776  0EFF               	movlw	high STR_16
  1460  010778  6E0E               	movwf	LCD_Write_Str@message+1,c
  1461  01077A  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1462                           
  1463                           ;main.c: 233: LCDsetCursor(2,2);
  1464  01077E  0E02               	movlw	2
  1465  010780  6E0D               	movwf	LCDsetCursor@row,c
  1466  010782  0E02               	movlw	2
  1467  010784  ECE3  F084         	call	_LCDsetCursor
  1468                           
  1469                           ;main.c: 234: LCD_Write_Str("@:2,2");
  1470  010788  0EE4               	movlw	low STR_17
  1471  01078A  6E0D               	movwf	LCD_Write_Str@message,c
  1472  01078C  0EFF               	movlw	high STR_17
  1473  01078E  6E0E               	movwf	LCD_Write_Str@message+1,c
  1474  010790  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1475                           
  1476                           ;main.c: 235: LCDsetCursor(3,3);
  1477  010794  0E03               	movlw	3
  1478  010796  6E0D               	movwf	LCDsetCursor@row,c
  1479  010798  0E03               	movlw	3
  1480  01079A  ECE3  F084         	call	_LCDsetCursor
  1481                           
  1482                           ;main.c: 236: LCD_Write_Str("@:3,3");
  1483  01079E  0EEA               	movlw	low STR_18
  1484  0107A0  6E0D               	movwf	LCD_Write_Str@message,c
  1485  0107A2  0EFF               	movlw	high STR_18
  1486  0107A4  6E0E               	movwf	LCD_Write_Str@message+1,c
  1487  0107A6  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1488                           
  1489                           ;main.c: 237: LCDsetCursor(12,0);
  1490  0107AA  0E00               	movlw	0
  1491  0107AC  6E0D               	movwf	LCDsetCursor@row,c
  1492  0107AE  0E0C               	movlw	12
  1493  0107B0  ECE3  F084         	call	_LCDsetCursor
  1494                           
  1495                           ;main.c: 238: LCD_Write_Str("Print at");
  1496  0107B4  0EC9               	movlw	low STR_19
  1497  0107B6  6E0D               	movwf	LCD_Write_Str@message,c
  1498  0107B8  0EFF               	movlw	high STR_19
  1499  0107BA  6E0E               	movwf	LCD_Write_Str@message+1,c
  1500  0107BC  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1501                           
  1502                           ;main.c: 239: DelayMilliseconds(3000);
  1503  0107C0  0E0B               	movlw	11
  1504  0107C2  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  1505  0107C4  0EB8               	movlw	184
  1506  0107C6  6E01               	movwf	DelayMilliseconds@delayTime,c
  1507  0107C8  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  1508  0107CC  0012               	return		;funcret
  1509  0107CE                     __end_of_printAt:
  1510                           	opt stack 0
  1511                           tblptru	equ	0xFF8
  1512                           tblptrh	equ	0xFF7
  1513                           tblptrl	equ	0xFF6
  1514                           tablat	equ	0xFF5
  1515                           postinc0	equ	0xFEE
  1516                           postdec1	equ	0xFE5
  1517                           fsr1l	equ	0xFE1
  1518                           
  1519 ;; *************** function _displayOnOff *****************
  1520 ;; Defined at:
  1521 ;;		line 167 in file "main.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  x               1   22[COMRAM] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;		None               void
  1528 ;; Registers used:
  1529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1539 ;;Total ram usage:        1 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    9
  1542 ;; This function calls:
  1543 ;;		_DelayMilliseconds
  1544 ;;		_LCD_Write_Str
  1545 ;;		_LCDblinkOff
  1546 ;;		_LCDclear
  1547 ;;		_LCDcursorOff
  1548 ;;		_LCDdisplayOff
  1549 ;;		_LCDdisplayOn
  1550 ;;		_LCDhome
  1551 ;;		_LCDsetCursor
  1552 ;; This function is called by:
  1553 ;;		_exerciseDisplay
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text6
  1558  0106D2                     __ptext6:
  1559                           	opt stack 0
  1560  0106D2                     _displayOnOff:
  1561                           	opt stack 20
  1562                           
  1563                           ;main.c: 169: LCDclear();
  1564                           
  1565                           ;incstack = 0
  1566  0106D2  EC30  F086         	call	_LCDclear	;wreg free
  1567                           
  1568                           ;main.c: 170: LCDcursorOff();
  1569  0106D6  ECB5  F086         	call	_LCDcursorOff	;wreg free
  1570                           
  1571                           ;main.c: 171: LCDblinkOff();
  1572  0106DA  ECBB  F086         	call	_LCDblinkOff	;wreg free
  1573                           
  1574                           ;main.c: 172: for (unsigned char x = 0; x < 6; x++)
  1575  0106DE  0E00               	movlw	0
  1576  0106E0  6E17               	movwf	displayOnOff@x,c
  1577  0106E2                     l2260:
  1578  0106E2  0E05               	movlw	5
  1579  0106E4  6417               	cpfsgt	displayOnOff@x,c
  1580  0106E6  D001               	goto	l399
  1581  0106E8  0012               	return	
  1582  0106EA                     l399:
  1583                           
  1584                           ;main.c: 173: {
  1585                           ;main.c: 174: if (x%2) {
  1586  0106EA  A017               	btfss	displayOnOff@x,0,c
  1587  0106EC  D013               	goto	l2272
  1588                           
  1589                           ;main.c: 175: LCDhome();
  1590  0106EE  EC26  F086         	call	_LCDhome	;wreg free
  1591                           
  1592                           ;main.c: 176: LCD_Write_Str("           ");
  1593  0106F2  0E21               	movlw	low (STR_12+2)
  1594  0106F4  6E0D               	movwf	LCD_Write_Str@message,c
  1595  0106F6  0EFF               	movlw	high (STR_12+2)
  1596  0106F8  6E0E               	movwf	LCD_Write_Str@message+1,c
  1597  0106FA  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1598                           
  1599                           ;main.c: 177: LCDhome();
  1600  0106FE  EC26  F086         	call	_LCDhome	;wreg free
  1601                           
  1602                           ;main.c: 178: LCD_Write_Str("Display On ");
  1603  010702  0E7D               	movlw	low STR_6
  1604  010704  6E0D               	movwf	LCD_Write_Str@message,c
  1605  010706  0EFF               	movlw	high STR_6
  1606  010708  6E0E               	movwf	LCD_Write_Str@message+1,c
  1607  01070A  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1608                           
  1609                           ;main.c: 179: LCDdisplayOn();
  1610  01070E  ECC7  F086         	call	_LCDdisplayOn	;wreg free
  1611                           
  1612                           ;main.c: 180: } else {
  1613  010712  D018               	goto	l2280
  1614  010714                     l2272:
  1615                           
  1616                           ;main.c: 181: LCDsetCursor(0,0);
  1617  010714  0E00               	movlw	0
  1618  010716  6E0D               	movwf	LCDsetCursor@row,c
  1619  010718  0E00               	movlw	0
  1620  01071A  ECE3  F084         	call	_LCDsetCursor
  1621                           
  1622                           ;main.c: 182: LCD_Write_Str("           ");
  1623  01071E  0E21               	movlw	low (STR_12+2)
  1624  010720  6E0D               	movwf	LCD_Write_Str@message,c
  1625  010722  0EFF               	movlw	high (STR_12+2)
  1626  010724  6E0E               	movwf	LCD_Write_Str@message+1,c
  1627  010726  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1628                           
  1629                           ;main.c: 183: LCDsetCursor(0,0);
  1630  01072A  0E00               	movlw	0
  1631  01072C  6E0D               	movwf	LCDsetCursor@row,c
  1632  01072E  0E00               	movlw	0
  1633  010730  ECE3  F084         	call	_LCDsetCursor
  1634                           
  1635                           ;main.c: 184: LCD_Write_Str("Display Off");
  1636  010734  0E95               	movlw	low STR_8
  1637  010736  6E0D               	movwf	LCD_Write_Str@message,c
  1638  010738  0EFF               	movlw	high STR_8
  1639  01073A  6E0E               	movwf	LCD_Write_Str@message+1,c
  1640  01073C  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1641                           
  1642                           ;main.c: 185: LCDdisplayOff();
  1643  010740  ECCD  F086         	call	_LCDdisplayOff	;wreg free
  1644  010744                     l2280:
  1645                           
  1646                           ;main.c: 186: }
  1647                           ;main.c: 187: DelayMilliseconds(750);
  1648  010744  0E02               	movlw	2
  1649  010746  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  1650  010748  0EEE               	movlw	238
  1651  01074A  6E01               	movwf	DelayMilliseconds@delayTime,c
  1652  01074C  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  1653  010750  2A17               	incf	displayOnOff@x,f,c
  1654  010752  D7C7               	goto	l2260
  1655  010754                     __end_of_displayOnOff:
  1656                           	opt stack 0
  1657                           tblptru	equ	0xFF8
  1658                           tblptrh	equ	0xFF7
  1659                           tblptrl	equ	0xFF6
  1660                           tablat	equ	0xFF5
  1661                           postinc0	equ	0xFEE
  1662                           postdec1	equ	0xFE5
  1663                           fsr1l	equ	0xFE1
  1664                           
  1665 ;; *************** function _displayLeftRightScroll *****************
  1666 ;; Defined at:
  1667 ;;		line 136 in file "main.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  x               1   23[COMRAM] unsigned char 
  1672 ;;  x               1   22[COMRAM] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;		None               void
  1675 ;; Registers used:
  1676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1686 ;;Total ram usage:        2 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    9
  1689 ;; This function calls:
  1690 ;;		_DelayMilliseconds
  1691 ;;		_LCD_Write_Str
  1692 ;;		_LCDblinkOff
  1693 ;;		_LCDclear
  1694 ;;		_LCDcursorOff
  1695 ;;		_LCDscrollDisplayLeft
  1696 ;;		_LCDscrollDisplayRight
  1697 ;;		_LCDsetCursor
  1698 ;; This function is called by:
  1699 ;;		_exerciseDisplay
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text7
  1704  0104E8                     __ptext7:
  1705                           	opt stack 0
  1706  0104E8                     _displayLeftRightScroll:
  1707                           	opt stack 20
  1708                           
  1709                           ;main.c: 138: LCDclear();
  1710                           
  1711                           ;incstack = 0
  1712  0104E8  EC30  F086         	call	_LCDclear	;wreg free
  1713                           
  1714                           ;main.c: 139: LCDcursorOff();
  1715  0104EC  ECB5  F086         	call	_LCDcursorOff	;wreg free
  1716                           
  1717                           ;main.c: 140: LCDblinkOff();
  1718  0104F0  ECBB  F086         	call	_LCDblinkOff	;wreg free
  1719                           
  1720                           ;main.c: 141: LCDsetCursor(0,0);
  1721  0104F4  0E00               	movlw	0
  1722  0104F6  6E0D               	movwf	LCDsetCursor@row,c
  1723  0104F8  0E00               	movlw	0
  1724  0104FA  ECE3  F084         	call	_LCDsetCursor
  1725                           
  1726                           ;main.c: 142: LCD_Write_Str("Scroll Right");
  1727  0104FE  0E70               	movlw	low STR_1
  1728  010500  6E0D               	movwf	LCD_Write_Str@message,c
  1729  010502  0EFF               	movlw	high STR_1
  1730  010504  6E0E               	movwf	LCD_Write_Str@message+1,c
  1731  010506  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1732                           
  1733                           ;main.c: 143: LCDsetCursor(0,1);
  1734  01050A  0E01               	movlw	1
  1735  01050C  6E0D               	movwf	LCDsetCursor@row,c
  1736  01050E  0E00               	movlw	0
  1737  010510  ECE3  F084         	call	_LCDsetCursor
  1738                           
  1739                           ;main.c: 144: LCD_Write_Str("---->");
  1740  010514  0EF0               	movlw	low STR_2
  1741  010516  6E0D               	movwf	LCD_Write_Str@message,c
  1742  010518  0EFF               	movlw	high STR_2
  1743  01051A  6E0E               	movwf	LCD_Write_Str@message+1,c
  1744  01051C  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1745                           
  1746                           ;main.c: 145: for (unsigned char x = 0; x< 8; x++)
  1747  010520  0E00               	movlw	0
  1748  010522  6E17               	movwf	displayLeftRightScroll@x,c
  1749  010524                     l2222:
  1750  010524  0E07               	movlw	7
  1751  010526  6417               	cpfsgt	displayLeftRightScroll@x,c
  1752  010528  D001               	goto	l2226
  1753  01052A  D00A               	goto	l2232
  1754  01052C                     l2226:
  1755                           
  1756                           ;main.c: 146: {
  1757                           ;main.c: 147: LCDscrollDisplayRight();
  1758  01052C  EC6F  F086         	call	_LCDscrollDisplayRight	;wreg free
  1759                           
  1760                           ;main.c: 148: DelayMilliseconds(500);
  1761  010530  0E01               	movlw	1
  1762  010532  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  1763  010534  0EF4               	movlw	244
  1764  010536  6E01               	movwf	DelayMilliseconds@delayTime,c
  1765  010538  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  1766  01053C  2A17               	incf	displayLeftRightScroll@x,f,c
  1767  01053E  D7F2               	goto	l2222
  1768  010540                     l2232:
  1769                           
  1770                           ;main.c: 149: }
  1771                           ;main.c: 151: LCDclear();
  1772  010540  EC30  F086         	call	_LCDclear	;wreg free
  1773                           
  1774                           ;main.c: 152: LCDsetCursor(8,0);
  1775  010544  0E00               	movlw	0
  1776  010546  6E0D               	movwf	LCDsetCursor@row,c
  1777  010548  0E08               	movlw	8
  1778  01054A  ECE3  F084         	call	_LCDsetCursor
  1779                           
  1780                           ;main.c: 153: LCD_Write_Str("Scroll Left ");
  1781  01054E  0E56               	movlw	low STR_3
  1782  010550  6E0D               	movwf	LCD_Write_Str@message,c
  1783  010552  0EFF               	movlw	high STR_3
  1784  010554  6E0E               	movwf	LCD_Write_Str@message+1,c
  1785  010556  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1786                           
  1787                           ;main.c: 154: LCDsetCursor(8,1);
  1788  01055A  0E01               	movlw	1
  1789  01055C  6E0D               	movwf	LCDsetCursor@row,c
  1790  01055E  0E08               	movlw	8
  1791  010560  ECE3  F084         	call	_LCDsetCursor
  1792                           
  1793                           ;main.c: 155: LCD_Write_Str("<----");
  1794  010564  0ED2               	movlw	low STR_4
  1795  010566  6E0D               	movwf	LCD_Write_Str@message,c
  1796  010568  0EFF               	movlw	high STR_4
  1797  01056A  6E0E               	movwf	LCD_Write_Str@message+1,c
  1798  01056C  EC01  F085         	call	_LCD_Write_Str	;wreg free
  1799                           
  1800                           ;main.c: 156: for (unsigned char x = 0; x< 8; x++)
  1801  010570  0E00               	movlw	0
  1802  010572  6E18               	movwf	displayLeftRightScroll@x_713,c
  1803  010574                     l2244:
  1804  010574  0E07               	movlw	7
  1805  010576  6418               	cpfsgt	displayLeftRightScroll@x_713,c
  1806  010578  D001               	goto	l2248
  1807  01057A  D00A               	goto	l2254
  1808  01057C                     l2248:
  1809                           
  1810                           ;main.c: 157: {
  1811                           ;main.c: 158: LCDscrollDisplayLeft();
  1812  01057C  EC76  F086         	call	_LCDscrollDisplayLeft	;wreg free
  1813                           
  1814                           ;main.c: 159: DelayMilliseconds(500);
  1815  010580  0E01               	movlw	1
  1816  010582  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  1817  010584  0EF4               	movlw	244
  1818  010586  6E01               	movwf	DelayMilliseconds@delayTime,c
  1819  010588  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  1820  01058C  2A18               	incf	displayLeftRightScroll@x_713,f,c
  1821  01058E  D7F2               	goto	l2244
  1822  010590                     l2254:
  1823                           
  1824                           ;main.c: 160: }
  1825                           ;main.c: 162: DelayMilliseconds(5000);
  1826  010590  0E13               	movlw	19
  1827  010592  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  1828  010594  0E88               	movlw	136
  1829  010596  6E01               	movwf	DelayMilliseconds@delayTime,c
  1830  010598  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  1831  01059C  0012               	return		;funcret
  1832  01059E                     __end_of_displayLeftRightScroll:
  1833                           	opt stack 0
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           postinc0	equ	0xFEE
  1839                           postdec1	equ	0xFE5
  1840                           fsr1l	equ	0xFE1
  1841                           
  1842 ;; *************** function _LCDscrollDisplayRight *****************
  1843 ;; Defined at:
  1844 ;;		line 325 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;		None               void
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;Total ram usage:        0 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    8
  1865 ;; This function calls:
  1866 ;;		_LCDcommandWrite
  1867 ;; This function is called by:
  1868 ;;		_displayLeftRightScroll
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text8
  1873  010CDE                     __ptext8:
  1874                           	opt stack 0
  1875  010CDE                     _LCDscrollDisplayRight:
  1876                           	opt stack 20
  1877                           
  1878                           ;LCD_I2C_PCF8574.c: 326: _displaycontrol |= 0x04;
  1879                           
  1880                           ;incstack = 0
  1881  010CDE  8454               	bsf	__displaycontrol,2,c
  1882                           
  1883                           ;LCD_I2C_PCF8574.c: 327: _displaycontrol |= 0x08;
  1884  010CE0  8654               	bsf	__displaycontrol,3,c
  1885                           
  1886                           ;LCD_I2C_PCF8574.c: 328: LCDcommandWrite(0x10 | _displaycontrol);
  1887  010CE2  5054               	movf	__displaycontrol,w,c
  1888  010CE4  0910               	iorlw	16
  1889  010CE6  EC84  F086         	call	_LCDcommandWrite
  1890  010CEA  0012               	return		;funcret
  1891  010CEC                     __end_of_LCDscrollDisplayRight:
  1892                           	opt stack 0
  1893                           tblptru	equ	0xFF8
  1894                           tblptrh	equ	0xFF7
  1895                           tblptrl	equ	0xFF6
  1896                           tablat	equ	0xFF5
  1897                           postinc0	equ	0xFEE
  1898                           postdec1	equ	0xFE5
  1899                           fsr1l	equ	0xFE1
  1900                           
  1901 ;; *************** function _LCDscrollDisplayLeft *****************
  1902 ;; Defined at:
  1903 ;;		line 319 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;		None               void
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    8
  1924 ;; This function calls:
  1925 ;;		_LCDcommandWrite
  1926 ;; This function is called by:
  1927 ;;		_displayLeftRightScroll
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text9
  1932  010CEC                     __ptext9:
  1933                           	opt stack 0
  1934  010CEC                     _LCDscrollDisplayLeft:
  1935                           	opt stack 20
  1936                           
  1937                           ;LCD_I2C_PCF8574.c: 320: _displaycontrol &= ~0x04;
  1938                           
  1939                           ;incstack = 0
  1940  010CEC  9454               	bcf	__displaycontrol,2,c
  1941                           
  1942                           ;LCD_I2C_PCF8574.c: 321: _displaycontrol |= 0x08;
  1943  010CEE  8654               	bsf	__displaycontrol,3,c
  1944                           
  1945                           ;LCD_I2C_PCF8574.c: 322: LCDcommandWrite(0x10 | _displaycontrol);
  1946  010CF0  5054               	movf	__displaycontrol,w,c
  1947  010CF2  0910               	iorlw	16
  1948  010CF4  EC84  F086         	call	_LCDcommandWrite
  1949  010CF8  0012               	return		;funcret
  1950  010CFA                     __end_of_LCDscrollDisplayLeft:
  1951                           	opt stack 0
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           postinc0	equ	0xFEE
  1957                           postdec1	equ	0xFE5
  1958                           fsr1l	equ	0xFE1
  1959                           
  1960 ;; *************** function _dataMemoryReading *****************
  1961 ;; Defined at:
  1962 ;;		line 327 in file "main.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  c               1   30[COMRAM] unsigned char 
  1967 ;;  r               1   29[COMRAM] unsigned char 
  1968 ;;  i               1   33[COMRAM] unsigned char 
  1969 ;;  p               1   32[COMRAM] unsigned char 
  1970 ;;  x               1   31[COMRAM] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;		None               void
  1973 ;; Registers used:
  1974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;Total ram usage:        7 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:   10
  1987 ;; This function calls:
  1988 ;;		_DelayMilliseconds
  1989 ;;		_LCD_Write_Char
  1990 ;;		_LCD_Write_Str
  1991 ;;		_LCDblinkOff
  1992 ;;		_LCDclear
  1993 ;;		_LCDcreateChar
  1994 ;;		_LCDcursorOff
  1995 ;;		_LCDhome
  1996 ;;		_LCDreadCGRam
  1997 ;;		_LCDreadDDRam
  1998 ;;		_LCDsetCursor
  1999 ;;		_putHexString
  2000 ;; This function is called by:
  2001 ;;		_exerciseDisplay
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text10
  2006  010000                     __ptext10:
  2007                           	opt stack 0
  2008  010000                     _dataMemoryReading:
  2009                           	opt stack 19
  2010                           
  2011                           ;main.c: 329: unsigned char x = 0;
  2012                           
  2013                           ;incstack = 0
  2014  010000  0E00               	movlw	0
  2015  010002  6E20               	movwf	dataMemoryReading@x,c
  2016                           
  2017                           ;main.c: 331: LCDclear();
  2018  010004  EC30  F086         	call	_LCDclear	;wreg free
  2019                           
  2020                           ;main.c: 332: LCDcursorOff();
  2021  010008  ECB5  F086         	call	_LCDcursorOff	;wreg free
  2022                           
  2023                           ;main.c: 333: LCDblinkOff();
  2024  01000C  ECBB  F086         	call	_LCDblinkOff	;wreg free
  2025                           
  2026                           ;main.c: 335: for (unsigned char p = 0; p < 8 ; p++)
  2027  010010  0E00               	movlw	0
  2028  010012  6E21               	movwf	dataMemoryReading@p,c
  2029  010014                     l2472:
  2030  010014  0E07               	movlw	7
  2031  010016  6421               	cpfsgt	dataMemoryReading@p,c
  2032  010018  D001               	goto	l2476
  2033  01001A  D011               	goto	l2482
  2034  01001C                     l2476:
  2035                           
  2036                           ;main.c: 336: LCDcreateChar(p, charmap[p]);
  2037  01001C  5021               	movf	dataMemoryReading@p,w,c
  2038  01001E  0D02               	mullw	2
  2039  010020  0E60               	movlw	low _charmap
  2040  010022  24F3               	addwf	prodl,w,c
  2041  010024  6ED9               	movwf	fsr2l,c
  2042  010026  0E00               	movlw	high _charmap
  2043  010028  20F4               	addwfc	prodh,w,c
  2044  01002A  6EDA               	movwf	fsr2h,c
  2045  01002C  CFDE F00D          	movff	postinc2,LCDcreateChar@charmap
  2046  010030  CFDD F00E          	movff	postdec2,LCDcreateChar@charmap+1
  2047  010034  5021               	movf	dataMemoryReading@p,w,c
  2048  010036  ECA3  F084         	call	_LCDcreateChar
  2049  01003A  2A21               	incf	dataMemoryReading@p,f,c
  2050  01003C  D7EB               	goto	l2472
  2051  01003E                     l2482:
  2052                           
  2053                           ;main.c: 337: LCDhome();
  2054  01003E  EC26  F086         	call	_LCDhome	;wreg free
  2055                           
  2056                           ;main.c: 339: LCDsetCursor(0,0);
  2057  010042  0E00               	movlw	0
  2058  010044  6E0D               	movwf	LCDsetCursor@row,c
  2059  010046  0E00               	movlw	0
  2060  010048  ECE3  F084         	call	_LCDsetCursor
  2061                           
  2062                           ;main.c: 340: LCD_Write_Str("Q = ");
  2063  01004C  0EF6               	movlw	low STR_34
  2064  01004E  6E0D               	movwf	LCD_Write_Str@message,c
  2065  010050  0EFF               	movlw	high STR_34
  2066  010052  6E0E               	movwf	LCD_Write_Str@message+1,c
  2067  010054  EC01  F085         	call	_LCD_Write_Str	;wreg free
  2068                           
  2069                           ;main.c: 342: x = LCDreadDDRam(0x00);
  2070  010058  0E00               	movlw	0
  2071  01005A  EC44  F086         	call	_LCDreadDDRam
  2072  01005E  6E20               	movwf	dataMemoryReading@x,c
  2073                           
  2074                           ;main.c: 343: LCDsetCursor(4,0);
  2075  010060  0E00               	movlw	0
  2076  010062  6E0D               	movwf	LCDsetCursor@row,c
  2077  010064  0E04               	movlw	4
  2078  010066  ECE3  F084         	call	_LCDsetCursor
  2079                           
  2080                           ;main.c: 344: LCD_Write_Str("0x");
  2081  01006A  0EFB               	movlw	low STR_31
  2082  01006C  6E0D               	movwf	LCD_Write_Str@message,c
  2083  01006E  0EFF               	movlw	high STR_31
  2084  010070  6E0E               	movwf	LCD_Write_Str@message+1,c
  2085  010072  EC01  F085         	call	_LCD_Write_Str	;wreg free
  2086                           
  2087                           ;main.c: 345: LCDsetCursor(6,0);
  2088  010076  0E00               	movlw	0
  2089  010078  6E0D               	movwf	LCDsetCursor@row,c
  2090  01007A  0E06               	movlw	6
  2091  01007C  ECE3  F084         	call	_LCDsetCursor
  2092                           
  2093                           ;main.c: 346: LCD_Write_Char((char) hex[(x>>4)& 0x0f]);
  2094  010080  3820               	swapf	dataMemoryReading@x,w,c
  2095  010082  0B0F               	andlw	15
  2096  010084  0B0F               	andlw	15
  2097  010086  6E1C               	movwf	??_dataMemoryReading& (0+255),c
  2098  010088  6A1D               	clrf	(??_dataMemoryReading+1)& (0+255),c
  2099  01008A  0E32               	movlw	low _hex
  2100  01008C  241C               	addwf	??_dataMemoryReading,w,c
  2101  01008E  6ED9               	movwf	fsr2l,c
  2102  010090  0E00               	movlw	high _hex
  2103  010092  201D               	addwfc	??_dataMemoryReading+1,w,c
  2104  010094  6EDA               	movwf	fsr2h,c
  2105  010096  50DF               	movf	indf2,w,c
  2106  010098  ECD8  F086         	call	_LCD_Write_Char
  2107                           
  2108                           ;main.c: 347: LCDsetCursor(7,0);
  2109  01009C  0E00               	movlw	0
  2110  01009E  6E0D               	movwf	LCDsetCursor@row,c
  2111  0100A0  0E07               	movlw	7
  2112  0100A2  ECE3  F084         	call	_LCDsetCursor
  2113                           
  2114                           ;main.c: 348: LCD_Write_Char((char) hex[x & 0x0f]);
  2115  0100A6  5020               	movf	dataMemoryReading@x,w,c
  2116  0100A8  0B0F               	andlw	15
  2117  0100AA  6E1C               	movwf	??_dataMemoryReading& (0+255),c
  2118  0100AC  6A1D               	clrf	(??_dataMemoryReading+1)& (0+255),c
  2119  0100AE  0E32               	movlw	low _hex
  2120  0100B0  241C               	addwf	??_dataMemoryReading,w,c
  2121  0100B2  6ED9               	movwf	fsr2l,c
  2122  0100B4  0E00               	movlw	high _hex
  2123  0100B6  201D               	addwfc	??_dataMemoryReading+1,w,c
  2124  0100B8  6EDA               	movwf	fsr2h,c
  2125  0100BA  50DF               	movf	indf2,w,c
  2126  0100BC  ECD8  F086         	call	_LCD_Write_Char
  2127                           
  2128                           ;main.c: 349: LCDsetCursor(8,0);
  2129  0100C0  0E00               	movlw	0
  2130  0100C2  6E0D               	movwf	LCDsetCursor@row,c
  2131  0100C4  0E08               	movlw	8
  2132  0100C6  ECE3  F084         	call	_LCDsetCursor
  2133                           
  2134                           ;main.c: 350: LCD_Write_Char(',');
  2135  0100CA  0E2C               	movlw	44
  2136  0100CC  ECD8  F086         	call	_LCD_Write_Char
  2137                           
  2138                           ;main.c: 352: for (unsigned char i = 0; i < 8; i++)
  2139  0100D0  0E00               	movlw	0
  2140  0100D2  6E22               	movwf	dataMemoryReading@i,c
  2141  0100D4                     l2506:
  2142  0100D4  0E07               	movlw	7
  2143  0100D6  6422               	cpfsgt	dataMemoryReading@i,c
  2144  0100D8  D001               	goto	l2510
  2145  0100DA  D00B               	goto	l2518
  2146  0100DC                     l2510:
  2147                           
  2148                           ;main.c: 353: {
  2149                           ;main.c: 354: LCDsetCursor(i+10,0);
  2150  0100DC  0E00               	movlw	0
  2151  0100DE  6E0D               	movwf	LCDsetCursor@row,c
  2152  0100E0  5022               	movf	dataMemoryReading@i,w,c
  2153  0100E2  0F0A               	addlw	10
  2154  0100E4  ECE3  F084         	call	_LCDsetCursor
  2155                           
  2156                           ;main.c: 355: LCD_Write_Char(i);
  2157  0100E8  5022               	movf	dataMemoryReading@i,w,c
  2158  0100EA  ECD8  F086         	call	_LCD_Write_Char
  2159  0100EE  2A22               	incf	dataMemoryReading@i,f,c
  2160  0100F0  D7F1               	goto	l2506
  2161  0100F2                     l2518:
  2162                           
  2163                           ;main.c: 356: }
  2164                           ;main.c: 358: LCDsetCursor(0,1);
  2165  0100F2  0E01               	movlw	1
  2166  0100F4  6E0D               	movwf	LCDsetCursor@row,c
  2167  0100F6  0E00               	movlw	0
  2168  0100F8  ECE3  F084         	call	_LCDsetCursor
  2169                           
  2170                           ;main.c: 359: LCD_Write_Str("Bell char Hex rep;");
  2171  0100FC  0EFC               	movlw	low STR_36
  2172  0100FE  6E0D               	movwf	LCD_Write_Str@message,c
  2173  010100  0EFE               	movlw	high STR_36
  2174  010102  6E0E               	movwf	LCD_Write_Str@message+1,c
  2175  010104  EC01  F085         	call	_LCD_Write_Str	;wreg free
  2176                           
  2177                           ;main.c: 361: x = 0;
  2178  010108  0E00               	movlw	0
  2179  01010A  6E20               	movwf	dataMemoryReading@x,c
  2180                           
  2181                           ;main.c: 362: for (unsigned char r = 0; r < 2; r++)
  2182  01010C  0E00               	movlw	0
  2183  01010E  6E1E               	movwf	dataMemoryReading@r,c
  2184  010110                     l2526:
  2185  010110  0E01               	movlw	1
  2186  010112  641E               	cpfsgt	dataMemoryReading@r,c
  2187  010114  D001               	goto	l2530
  2188  010116  D014               	goto	l2548
  2189  010118                     l2530:
  2190                           
  2191                           ;main.c: 363: for (unsigned char c = 0; c < 4; c++)
  2192  010118  0E00               	movlw	0
  2193  01011A  6E1F               	movwf	dataMemoryReading@c,c
  2194  01011C                     l2532:
  2195  01011C  0E03               	movlw	3
  2196  01011E  641F               	cpfsgt	dataMemoryReading@c,c
  2197  010120  D001               	goto	l2536
  2198  010122  D00C               	goto	l2544
  2199  010124                     l2536:
  2200                           
  2201                           ;main.c: 364: putHexString(c, r, LCDreadCGRam(x++));
  2202  010124  C01E  F017         	movff	dataMemoryReading@r,putHexString@r
  2203  010128  5020               	movf	dataMemoryReading@x,w,c
  2204  01012A  EC4D  F086         	call	_LCDreadCGRam
  2205  01012E  6E18               	movwf	putHexString@hexval,c
  2206  010130  501F               	movf	dataMemoryReading@c,w,c
  2207  010132  EC26  F083         	call	_putHexString
  2208  010136  2A20               	incf	dataMemoryReading@x,f,c
  2209  010138  2A1F               	incf	dataMemoryReading@c,f,c
  2210  01013A  D7F0               	goto	l2532
  2211  01013C                     l2544:
  2212  01013C  2A1E               	incf	dataMemoryReading@r,f,c
  2213  01013E  D7E8               	goto	l2526
  2214  010140                     l2548:
  2215                           
  2216                           ;main.c: 365: DelayMilliseconds(5000);
  2217  010140  0E13               	movlw	19
  2218  010142  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2219  010144  0E88               	movlw	136
  2220  010146  6E01               	movwf	DelayMilliseconds@delayTime,c
  2221  010148  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  2222  01014C  0012               	return		;funcret
  2223  01014E                     __end_of_dataMemoryReading:
  2224                           	opt stack 0
  2225                           tblptru	equ	0xFF8
  2226                           tblptrh	equ	0xFF7
  2227                           tblptrl	equ	0xFF6
  2228                           tablat	equ	0xFF5
  2229                           prodh	equ	0xFF4
  2230                           prodl	equ	0xFF3
  2231                           postinc0	equ	0xFEE
  2232                           postdec1	equ	0xFE5
  2233                           fsr1l	equ	0xFE1
  2234                           indf2	equ	0xFDF
  2235                           postinc2	equ	0xFDE
  2236                           postdec2	equ	0xFDD
  2237                           fsr2h	equ	0xFDA
  2238                           fsr2l	equ	0xFD9
  2239                           
  2240 ;; *************** function _putHexString *****************
  2241 ;; Defined at:
  2242 ;;		line 370 in file "main.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  c               1    wreg     unsigned char 
  2245 ;;  r               1   22[COMRAM] unsigned char 
  2246 ;;  hexval          1   23[COMRAM] unsigned char 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  c               1   26[COMRAM] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;		None               void
  2251 ;; Registers used:
  2252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2261 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2262 ;;Total ram usage:        5 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    9
  2265 ;; This function calls:
  2266 ;;		_LCD_Write_Char
  2267 ;;		_LCD_Write_Str
  2268 ;;		_LCDsetCursor
  2269 ;; This function is called by:
  2270 ;;		_dataMemoryReading
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text11
  2275  01064C                     __ptext11:
  2276                           	opt stack 0
  2277  01064C                     _putHexString:
  2278                           	opt stack 19
  2279                           
  2280                           ;incstack = 0
  2281                           ;putHexString@c stored from wreg
  2282  01064C  6E1B               	movwf	putHexString@c,c
  2283                           
  2284                           ;main.c: 372: LCDsetCursor(0+(5*c),2+(2*r));
  2285  01064E  5017               	movf	putHexString@r,w,c
  2286  010650  0D02               	mullw	2
  2287  010652  50F3               	movf	prodl,w,c
  2288  010654  0F02               	addlw	2
  2289  010656  6E0D               	movwf	LCDsetCursor@row,c
  2290  010658  501B               	movf	putHexString@c,w,c
  2291  01065A  0D05               	mullw	5
  2292  01065C  50F3               	movf	prodl,w,c
  2293  01065E  ECE3  F084         	call	_LCDsetCursor
  2294                           
  2295                           ;main.c: 373: LCD_Write_Str("0x");
  2296  010662  0EFB               	movlw	low STR_31
  2297  010664  6E0D               	movwf	LCD_Write_Str@message,c
  2298  010666  0EFF               	movlw	high STR_31
  2299  010668  6E0E               	movwf	LCD_Write_Str@message+1,c
  2300  01066A  EC01  F085         	call	_LCD_Write_Str	;wreg free
  2301                           
  2302                           ;main.c: 374: LCDsetCursor(2+(5*c),2+(2*r));
  2303  01066E  5017               	movf	putHexString@r,w,c
  2304  010670  0D02               	mullw	2
  2305  010672  50F3               	movf	prodl,w,c
  2306  010674  0F02               	addlw	2
  2307  010676  6E0D               	movwf	LCDsetCursor@row,c
  2308  010678  501B               	movf	putHexString@c,w,c
  2309  01067A  0D05               	mullw	5
  2310  01067C  50F3               	movf	prodl,w,c
  2311  01067E  0F02               	addlw	2
  2312  010680  ECE3  F084         	call	_LCDsetCursor
  2313                           
  2314                           ;main.c: 375: LCD_Write_Char((char) hex[(hexval>>4)& 0x0f]);
  2315  010684  3818               	swapf	putHexString@hexval,w,c
  2316  010686  0B0F               	andlw	15
  2317  010688  0B0F               	andlw	15
  2318  01068A  6E19               	movwf	??_putHexString& (0+255),c
  2319  01068C  6A1A               	clrf	(??_putHexString+1)& (0+255),c
  2320  01068E  0E32               	movlw	low _hex
  2321  010690  2419               	addwf	??_putHexString,w,c
  2322  010692  6ED9               	movwf	fsr2l,c
  2323  010694  0E00               	movlw	high _hex
  2324  010696  201A               	addwfc	??_putHexString+1,w,c
  2325  010698  6EDA               	movwf	fsr2h,c
  2326  01069A  50DF               	movf	indf2,w,c
  2327  01069C  ECD8  F086         	call	_LCD_Write_Char
  2328                           
  2329                           ;main.c: 376: LCDsetCursor(3+(5*c),2+(2*r));
  2330  0106A0  5017               	movf	putHexString@r,w,c
  2331  0106A2  0D02               	mullw	2
  2332  0106A4  50F3               	movf	prodl,w,c
  2333  0106A6  0F02               	addlw	2
  2334  0106A8  6E0D               	movwf	LCDsetCursor@row,c
  2335  0106AA  501B               	movf	putHexString@c,w,c
  2336  0106AC  0D05               	mullw	5
  2337  0106AE  50F3               	movf	prodl,w,c
  2338  0106B0  0F03               	addlw	3
  2339  0106B2  ECE3  F084         	call	_LCDsetCursor
  2340                           
  2341                           ;main.c: 377: LCD_Write_Char((char) hex[hexval & 0x0f]);
  2342  0106B6  5018               	movf	putHexString@hexval,w,c
  2343  0106B8  0B0F               	andlw	15
  2344  0106BA  6E19               	movwf	??_putHexString& (0+255),c
  2345  0106BC  6A1A               	clrf	(??_putHexString+1)& (0+255),c
  2346  0106BE  0E32               	movlw	low _hex
  2347  0106C0  2419               	addwf	??_putHexString,w,c
  2348  0106C2  6ED9               	movwf	fsr2l,c
  2349  0106C4  0E00               	movlw	high _hex
  2350  0106C6  201A               	addwfc	??_putHexString+1,w,c
  2351  0106C8  6EDA               	movwf	fsr2h,c
  2352  0106CA  50DF               	movf	indf2,w,c
  2353  0106CC  ECD8  F086         	call	_LCD_Write_Char
  2354  0106D0  0012               	return		;funcret
  2355  0106D2                     __end_of_putHexString:
  2356                           	opt stack 0
  2357                           tblptru	equ	0xFF8
  2358                           tblptrh	equ	0xFF7
  2359                           tblptrl	equ	0xFF6
  2360                           tablat	equ	0xFF5
  2361                           prodh	equ	0xFF4
  2362                           prodl	equ	0xFF3
  2363                           postinc0	equ	0xFEE
  2364                           postdec1	equ	0xFE5
  2365                           fsr1l	equ	0xFE1
  2366                           indf2	equ	0xFDF
  2367                           postinc2	equ	0xFDE
  2368                           postdec2	equ	0xFDD
  2369                           fsr2h	equ	0xFDA
  2370                           fsr2l	equ	0xFD9
  2371                           
  2372 ;; *************** function _LCDreadDDRam *****************
  2373 ;; Defined at:
  2374 ;;		line 408 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  address         1    wreg     unsigned char 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  address         1   12[COMRAM] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      unsigned char 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2391 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2392 ;;Total ram usage:        1 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    8
  2395 ;; This function calls:
  2396 ;;		_LCDcommandWrite
  2397 ;;		_LCDdataRead
  2398 ;; This function is called by:
  2399 ;;		_dataMemoryReading
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text12
  2404  010C88                     __ptext12:
  2405                           	opt stack 0
  2406  010C88                     _LCDreadDDRam:
  2407                           	opt stack 20
  2408                           
  2409                           ;incstack = 0
  2410                           ;LCDreadDDRam@address stored from wreg
  2411  010C88  6E0D               	movwf	LCDreadDDRam@address,c
  2412                           
  2413                           ;LCD_I2C_PCF8574.c: 410: LCDcommandWrite(0x80 | (address & 0b01111111));
  2414  010C8A  500D               	movf	LCDreadDDRam@address,w,c
  2415  010C8C  0B7F               	andlw	127
  2416  010C8E  0980               	iorlw	128
  2417  010C90  EC84  F086         	call	_LCDcommandWrite
  2418                           
  2419                           ;LCD_I2C_PCF8574.c: 411: return LCDdataRead();
  2420  010C94  ECDD  F086         	call	_LCDdataRead	;wreg free
  2421  010C98  0012               	return	
  2422  010C9A                     __end_of_LCDreadDDRam:
  2423                           	opt stack 0
  2424                           tblptru	equ	0xFF8
  2425                           tblptrh	equ	0xFF7
  2426                           tblptrl	equ	0xFF6
  2427                           tablat	equ	0xFF5
  2428                           prodh	equ	0xFF4
  2429                           prodl	equ	0xFF3
  2430                           postinc0	equ	0xFEE
  2431                           postdec1	equ	0xFE5
  2432                           fsr1l	equ	0xFE1
  2433                           indf2	equ	0xFDF
  2434                           postinc2	equ	0xFDE
  2435                           postdec2	equ	0xFDD
  2436                           fsr2h	equ	0xFDA
  2437                           fsr2l	equ	0xFD9
  2438                           
  2439 ;; *************** function _LCDreadCGRam *****************
  2440 ;; Defined at:
  2441 ;;		line 414 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  address         1    wreg     unsigned char 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  address         1   12[COMRAM] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      unsigned char 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2459 ;;Total ram usage:        1 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    8
  2462 ;; This function calls:
  2463 ;;		_LCDcommandWrite
  2464 ;;		_LCDdataRead
  2465 ;; This function is called by:
  2466 ;;		_dataMemoryReading
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text13
  2471  010C9A                     __ptext13:
  2472                           	opt stack 0
  2473  010C9A                     _LCDreadCGRam:
  2474                           	opt stack 20
  2475                           
  2476                           ;incstack = 0
  2477                           ;LCDreadCGRam@address stored from wreg
  2478  010C9A  6E0D               	movwf	LCDreadCGRam@address,c
  2479                           
  2480                           ;LCD_I2C_PCF8574.c: 416: LCDcommandWrite(0x40 | (address & 0b00111111));
  2481  010C9C  500D               	movf	LCDreadCGRam@address,w,c
  2482  010C9E  0B3F               	andlw	63
  2483  010CA0  0940               	iorlw	64
  2484  010CA2  EC84  F086         	call	_LCDcommandWrite
  2485                           
  2486                           ;LCD_I2C_PCF8574.c: 417: return LCDdataRead();
  2487  010CA6  ECDD  F086         	call	_LCDdataRead	;wreg free
  2488  010CAA  0012               	return	
  2489  010CAC                     __end_of_LCDreadCGRam:
  2490                           	opt stack 0
  2491                           tblptru	equ	0xFF8
  2492                           tblptrh	equ	0xFF7
  2493                           tblptrl	equ	0xFF6
  2494                           tablat	equ	0xFF5
  2495                           prodh	equ	0xFF4
  2496                           prodl	equ	0xFF3
  2497                           postinc0	equ	0xFEE
  2498                           postdec1	equ	0xFE5
  2499                           fsr1l	equ	0xFE1
  2500                           indf2	equ	0xFDF
  2501                           postinc2	equ	0xFDE
  2502                           postdec2	equ	0xFDD
  2503                           fsr2h	equ	0xFDA
  2504                           fsr2l	equ	0xFD9
  2505                           
  2506 ;; *************** function _LCDdataRead *****************
  2507 ;; Defined at:
  2508 ;;		line 396 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      unsigned char 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    7
  2529 ;; This function calls:
  2530 ;;		_LCDreceive
  2531 ;; This function is called by:
  2532 ;;		_LCDreadDDRam
  2533 ;;		_LCDreadCGRam
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text14
  2538  010DBA                     __ptext14:
  2539                           	opt stack 0
  2540  010DBA                     _LCDdataRead:
  2541                           	opt stack 20
  2542                           
  2543                           ;LCD_I2C_PCF8574.c: 397: return LCDreceive(0b00000001);
  2544                           
  2545                           ;incstack = 0
  2546  010DBA  0E01               	movlw	1
  2547  010DBC  ECC5  F084         	call	_LCDreceive
  2548  010DC0  0012               	return	
  2549  010DC2                     __end_of_LCDdataRead:
  2550                           	opt stack 0
  2551                           tblptru	equ	0xFF8
  2552                           tblptrh	equ	0xFF7
  2553                           tblptrl	equ	0xFF6
  2554                           tablat	equ	0xFF5
  2555                           prodh	equ	0xFF4
  2556                           prodl	equ	0xFF3
  2557                           postinc0	equ	0xFEE
  2558                           postdec1	equ	0xFE5
  2559                           fsr1l	equ	0xFE1
  2560                           indf2	equ	0xFDF
  2561                           postinc2	equ	0xFDE
  2562                           postdec2	equ	0xFDD
  2563                           fsr2h	equ	0xFDA
  2564                           fsr2l	equ	0xFD9
  2565                           
  2566 ;; *************** function _LCDcreateChar *****************
  2567 ;; Defined at:
  2568 ;;		line 362 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  location        1    wreg     unsigned char 
  2571 ;;  charmap         2   12[COMRAM] PTR unsigned char 
  2572 ;;		 -> retarrow(8), cross(8), check(8), duck(8), 
  2573 ;;		 -> heart(8), clock(8), note(8), bell(8), 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  location        1   14[COMRAM] unsigned char 
  2576 ;;  i               2   15[COMRAM] int 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;		None               void
  2579 ;; Registers used:
  2580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2587 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2589 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2590 ;;Total ram usage:        5 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    8
  2593 ;; This function calls:
  2594 ;;		_LCDcommandWrite
  2595 ;;		_LCDdataWrite
  2596 ;; This function is called by:
  2597 ;;		_dataMemoryReading
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text15
  2602  010946                     __ptext15:
  2603                           	opt stack 0
  2604  010946                     _LCDcreateChar:
  2605                           	opt stack 20
  2606                           
  2607                           ;incstack = 0
  2608                           ;LCDcreateChar@location stored from wreg
  2609  010946  6E0F               	movwf	LCDcreateChar@location,c
  2610                           
  2611                           ;LCD_I2C_PCF8574.c: 363: location &= 0x7;
  2612  010948  0E07               	movlw	7
  2613  01094A  160F               	andwf	LCDcreateChar@location,f,c
  2614                           
  2615                           ;LCD_I2C_PCF8574.c: 364: LCDcommandWrite(0x40 | (location << 3));
  2616  01094C  380F               	swapf	LCDcreateChar@location,w,c
  2617  01094E  42E8               	rrncf	wreg,f,c
  2618  010950  0BF8               	andlw	248
  2619  010952  0940               	iorlw	64
  2620  010954  EC84  F086         	call	_LCDcommandWrite
  2621                           
  2622                           ;LCD_I2C_PCF8574.c: 365: for (int i=0; i<8; i++)
  2623  010958  0E00               	movlw	0
  2624  01095A  6E11               	movwf	LCDcreateChar@i+1,c
  2625  01095C  0E00               	movlw	0
  2626  01095E  6E10               	movwf	LCDcreateChar@i,c
  2627  010960                     l2058:
  2628  010960  BE11               	btfsc	LCDcreateChar@i+1,7,c
  2629  010962  D006               	goto	l2062
  2630  010964  5011               	movf	LCDcreateChar@i+1,w,c
  2631  010966  E110               	bnz	l146
  2632  010968  0E08               	movlw	8
  2633  01096A  5C10               	subwf	LCDcreateChar@i,w,c
  2634  01096C  B0D8               	btfsc	status,0,c
  2635  01096E  0012               	return	
  2636  010970                     l2062:
  2637                           
  2638                           ;LCD_I2C_PCF8574.c: 366: LCDdataWrite(charmap[i]);
  2639  010970  5010               	movf	LCDcreateChar@i,w,c
  2640  010972  240D               	addwf	LCDcreateChar@charmap,w,c
  2641  010974  6ED9               	movwf	fsr2l,c
  2642  010976  5011               	movf	LCDcreateChar@i+1,w,c
  2643  010978  200E               	addwfc	LCDcreateChar@charmap+1,w,c
  2644  01097A  6EDA               	movwf	fsr2h,c
  2645  01097C  50DF               	movf	indf2,w,c
  2646  01097E  EC7D  F086         	call	_LCDdataWrite
  2647  010982  4A10               	infsnz	LCDcreateChar@i,f,c
  2648  010984  2A11               	incf	LCDcreateChar@i+1,f,c
  2649  010986  D7EC               	goto	l2058
  2650  010988                     l146:
  2651  010988  0012               	return		;funcret
  2652  01098A                     __end_of_LCDcreateChar:
  2653                           	opt stack 0
  2654                           tblptru	equ	0xFF8
  2655                           tblptrh	equ	0xFF7
  2656                           tblptrl	equ	0xFF6
  2657                           tablat	equ	0xFF5
  2658                           prodh	equ	0xFF4
  2659                           prodl	equ	0xFF3
  2660                           postinc0	equ	0xFEE
  2661                           wreg	equ	0xFE8
  2662                           postdec1	equ	0xFE5
  2663                           fsr1l	equ	0xFE1
  2664                           indf2	equ	0xFDF
  2665                           postinc2	equ	0xFDE
  2666                           postdec2	equ	0xFDD
  2667                           fsr2h	equ	0xFDA
  2668                           fsr2l	equ	0xFD9
  2669                           status	equ	0xFD8
  2670                           
  2671 ;; *************** function _cursorControl *****************
  2672 ;; Defined at:
  2673 ;;		line 243 in file "main.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;		None               void
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2691 ;;Total ram usage:        0 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    9
  2694 ;; This function calls:
  2695 ;;		_DelayMilliseconds
  2696 ;;		_LCD_Write_Str
  2697 ;;		_LCDblinkOff
  2698 ;;		_LCDblinkOn
  2699 ;;		_LCDclear
  2700 ;;		_LCDcursorOff
  2701 ;;		_LCDcursorOn
  2702 ;;		_LCDhome
  2703 ;; This function is called by:
  2704 ;;		_exerciseDisplay
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text16
  2709  010422                     __ptext16:
  2710                           	opt stack 0
  2711  010422                     _cursorControl:
  2712                           	opt stack 20
  2713                           
  2714                           ;main.c: 245: LCDclear();
  2715                           
  2716                           ;incstack = 0
  2717  010422  EC30  F086         	call	_LCDclear	;wreg free
  2718                           
  2719                           ;main.c: 246: LCDcursorOff();
  2720  010426  ECB5  F086         	call	_LCDcursorOff	;wreg free
  2721                           
  2722                           ;main.c: 247: LCD_Write_Str("Cursor Off");
  2723  01042A  0EA1               	movlw	low STR_20
  2724  01042C  6E0D               	movwf	LCD_Write_Str@message,c
  2725  01042E  0EFF               	movlw	high STR_20
  2726  010430  6E0E               	movwf	LCD_Write_Str@message+1,c
  2727  010432  EC01  F085         	call	_LCD_Write_Str	;wreg free
  2728                           
  2729                           ;main.c: 248: DelayMilliseconds(1500);
  2730  010436  0E05               	movlw	5
  2731  010438  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2732  01043A  0EDC               	movlw	220
  2733  01043C  6E01               	movwf	DelayMilliseconds@delayTime,c
  2734  01043E  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  2735                           
  2736                           ;main.c: 249: LCDclear();
  2737  010442  EC30  F086         	call	_LCDclear	;wreg free
  2738                           
  2739                           ;main.c: 250: LCDcursorOn();
  2740  010446  EC97  F086         	call	_LCDcursorOn	;wreg free
  2741                           
  2742                           ;main.c: 251: LCD_Write_Str("Cursor On");
  2743  01044A  0EB6               	movlw	low STR_21
  2744  01044C  6E0D               	movwf	LCD_Write_Str@message,c
  2745  01044E  0EFF               	movlw	high STR_21
  2746  010450  6E0E               	movwf	LCD_Write_Str@message+1,c
  2747  010452  EC01  F085         	call	_LCD_Write_Str	;wreg free
  2748                           
  2749                           ;main.c: 252: DelayMilliseconds(1500);
  2750  010456  0E05               	movlw	5
  2751  010458  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2752  01045A  0EDC               	movlw	220
  2753  01045C  6E01               	movwf	DelayMilliseconds@delayTime,c
  2754  01045E  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  2755                           
  2756                           ;main.c: 253: LCDclear();
  2757  010462  EC30  F086         	call	_LCDclear	;wreg free
  2758                           
  2759                           ;main.c: 254: LCDblinkOn();
  2760  010466  EC9D  F086         	call	_LCDblinkOn	;wreg free
  2761                           
  2762                           ;main.c: 255: LCD_Write_Str("Blink On");
  2763  01046A  0EC0               	movlw	low STR_22
  2764  01046C  6E0D               	movwf	LCD_Write_Str@message,c
  2765  01046E  0EFF               	movlw	high STR_22
  2766  010470  6E0E               	movwf	LCD_Write_Str@message+1,c
  2767  010472  EC01  F085         	call	_LCD_Write_Str	;wreg free
  2768                           
  2769                           ;main.c: 256: DelayMilliseconds(1500);
  2770  010476  0E05               	movlw	5
  2771  010478  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2772  01047A  0EDC               	movlw	220
  2773  01047C  6E01               	movwf	DelayMilliseconds@delayTime,c
  2774  01047E  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  2775                           
  2776                           ;main.c: 257: LCDclear();
  2777  010482  EC30  F086         	call	_LCDclear	;wreg free
  2778                           
  2779                           ;main.c: 258: LCDblinkOff();
  2780  010486  ECBB  F086         	call	_LCDblinkOff	;wreg free
  2781                           
  2782                           ;main.c: 259: LCD_Write_Str("Blink Off");
  2783  01048A  0EAC               	movlw	low STR_23
  2784  01048C  6E0D               	movwf	LCD_Write_Str@message,c
  2785  01048E  0EFF               	movlw	high STR_23
  2786  010490  6E0E               	movwf	LCD_Write_Str@message+1,c
  2787  010492  EC01  F085         	call	_LCD_Write_Str	;wreg free
  2788                           
  2789                           ;main.c: 260: DelayMilliseconds(1500);
  2790  010496  0E05               	movlw	5
  2791  010498  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2792  01049A  0EDC               	movlw	220
  2793  01049C  6E01               	movwf	DelayMilliseconds@delayTime,c
  2794  01049E  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  2795                           
  2796                           ;main.c: 261: LCDclear();
  2797  0104A2  EC30  F086         	call	_LCDclear	;wreg free
  2798                           
  2799                           ;main.c: 262: LCD_Write_Str("Cursor Home");
  2800  0104A6  0E89               	movlw	low STR_24
  2801  0104A8  6E0D               	movwf	LCD_Write_Str@message,c
  2802  0104AA  0EFF               	movlw	high STR_24
  2803  0104AC  6E0E               	movwf	LCD_Write_Str@message+1,c
  2804  0104AE  EC01  F085         	call	_LCD_Write_Str	;wreg free
  2805                           
  2806                           ;main.c: 263: LCDhome();
  2807  0104B2  EC26  F086         	call	_LCDhome	;wreg free
  2808                           
  2809                           ;main.c: 264: DelayMilliseconds(1500);
  2810  0104B6  0E05               	movlw	5
  2811  0104B8  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2812  0104BA  0EDC               	movlw	220
  2813  0104BC  6E01               	movwf	DelayMilliseconds@delayTime,c
  2814  0104BE  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  2815                           
  2816                           ;main.c: 265: LCDclear();
  2817  0104C2  EC30  F086         	call	_LCDclear	;wreg free
  2818                           
  2819                           ;main.c: 266: LCD_Write_Str("Cursor Home & Blink");
  2820  0104C6  0EC0               	movlw	low STR_25
  2821  0104C8  6E0D               	movwf	LCD_Write_Str@message,c
  2822  0104CA  0EFE               	movlw	high STR_25
  2823  0104CC  6E0E               	movwf	LCD_Write_Str@message+1,c
  2824  0104CE  EC01  F085         	call	_LCD_Write_Str	;wreg free
  2825                           
  2826                           ;main.c: 267: LCDhome();
  2827  0104D2  EC26  F086         	call	_LCDhome	;wreg free
  2828                           
  2829                           ;main.c: 268: LCDblinkOn();
  2830  0104D6  EC9D  F086         	call	_LCDblinkOn	;wreg free
  2831                           
  2832                           ;main.c: 269: DelayMilliseconds(3000);
  2833  0104DA  0E0B               	movlw	11
  2834  0104DC  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2835  0104DE  0EB8               	movlw	184
  2836  0104E0  6E01               	movwf	DelayMilliseconds@delayTime,c
  2837  0104E2  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  2838  0104E6  0012               	return		;funcret
  2839  0104E8                     __end_of_cursorControl:
  2840                           	opt stack 0
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           prodh	equ	0xFF4
  2846                           prodl	equ	0xFF3
  2847                           postinc0	equ	0xFEE
  2848                           wreg	equ	0xFE8
  2849                           postdec1	equ	0xFE5
  2850                           fsr1l	equ	0xFE1
  2851                           indf2	equ	0xFDF
  2852                           postinc2	equ	0xFDE
  2853                           postdec2	equ	0xFDD
  2854                           fsr2h	equ	0xFDA
  2855                           fsr2l	equ	0xFD9
  2856                           status	equ	0xFD8
  2857                           
  2858 ;; *************** function _LCDhome *****************
  2859 ;; Defined at:
  2860 ;;		line 267 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;		None
  2865 ;; Return value:  Size  Location     Type
  2866 ;;		None               void
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2878 ;;Total ram usage:        0 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    8
  2881 ;; This function calls:
  2882 ;;		_DelayMicroseconds
  2883 ;;		_LCDcommandWrite
  2884 ;; This function is called by:
  2885 ;;		_displayOnOff
  2886 ;;		_cursorControl
  2887 ;;		_dataMemoryReading
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text17
  2892  010C4C                     __ptext17:
  2893                           	opt stack 0
  2894  010C4C                     _LCDhome:
  2895                           	opt stack 20
  2896                           
  2897                           ;LCD_I2C_PCF8574.c: 268: LCDcommandWrite(0x02);
  2898                           
  2899                           ;incstack = 0
  2900  010C4C  0E02               	movlw	2
  2901  010C4E  EC84  F086         	call	_LCDcommandWrite
  2902                           
  2903                           ;LCD_I2C_PCF8574.c: 272: DelayMicroseconds(30000);
  2904  010C52  0E75               	movlw	117
  2905  010C54  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  2906  010C56  0E30               	movlw	48
  2907  010C58  6E01               	movwf	DelayMicroseconds@delayTime,c
  2908  010C5A  EC5E  F085         	call	_DelayMicroseconds	;wreg free
  2909  010C5E  0012               	return		;funcret
  2910  010C60                     __end_of_LCDhome:
  2911                           	opt stack 0
  2912                           tblptru	equ	0xFF8
  2913                           tblptrh	equ	0xFF7
  2914                           tblptrl	equ	0xFF6
  2915                           tablat	equ	0xFF5
  2916                           prodh	equ	0xFF4
  2917                           prodl	equ	0xFF3
  2918                           postinc0	equ	0xFEE
  2919                           wreg	equ	0xFE8
  2920                           postdec1	equ	0xFE5
  2921                           fsr1l	equ	0xFE1
  2922                           indf2	equ	0xFDF
  2923                           postinc2	equ	0xFDE
  2924                           postdec2	equ	0xFDD
  2925                           fsr2h	equ	0xFDA
  2926                           fsr2l	equ	0xFD9
  2927                           status	equ	0xFD8
  2928                           
  2929 ;; *************** function _controlMemoryReading *****************
  2930 ;; Defined at:
  2931 ;;		line 292 in file "main.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;		None
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  x               1   24[COMRAM] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;		None               void
  2938 ;; Registers used:
  2939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;Total ram usage:        3 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    9
  2952 ;; This function calls:
  2953 ;;		_DelayMilliseconds
  2954 ;;		_LCD_Write_Char
  2955 ;;		_LCD_Write_Str
  2956 ;;		_LCDaddressCounter
  2957 ;;		_LCDblinkOff
  2958 ;;		_LCDblinkOn
  2959 ;;		_LCDbusy
  2960 ;;		_LCDclear
  2961 ;;		_LCDcursorOff
  2962 ;;		_LCDcursorOn
  2963 ;;		_LCDsetCursor
  2964 ;; This function is called by:
  2965 ;;		_exerciseDisplay
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text18
  2970  01014E                     __ptext18:
  2971                           	opt stack 0
  2972  01014E                     _controlMemoryReading:
  2973                           	opt stack 20
  2974                           
  2975                           ;main.c: 294: unsigned char x = 0;
  2976                           
  2977                           ;incstack = 0
  2978  01014E  0E00               	movlw	0
  2979  010150  6E19               	movwf	controlMemoryReading@x,c
  2980                           
  2981                           ;main.c: 296: LCDclear();
  2982  010152  EC30  F086         	call	_LCDclear	;wreg free
  2983                           
  2984                           ;main.c: 297: LCDcursorOn();
  2985  010156  EC97  F086         	call	_LCDcursorOn	;wreg free
  2986                           
  2987                           ;main.c: 298: LCDblinkOn();
  2988  01015A  EC9D  F086         	call	_LCDblinkOn	;wreg free
  2989                           
  2990                           ;main.c: 299: LCDsetCursor(1,1);
  2991  01015E  0E01               	movlw	1
  2992  010160  6E0D               	movwf	LCDsetCursor@row,c
  2993  010162  0E01               	movlw	1
  2994  010164  ECE3  F084         	call	_LCDsetCursor
  2995                           
  2996                           ;main.c: 300: DelayMilliseconds(2000);
  2997  010168  0E07               	movlw	7
  2998  01016A  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  2999  01016C  0ED0               	movlw	208
  3000  01016E  6E01               	movwf	DelayMilliseconds@delayTime,c
  3001  010170  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  3002                           
  3003                           ;main.c: 301: x = LCDaddressCounter();
  3004  010174  ECE5  F086         	call	_LCDaddressCounter	;wreg free
  3005  010178  6E19               	movwf	controlMemoryReading@x,c
  3006                           
  3007                           ;main.c: 302: LCDcursorOff();
  3008  01017A  ECB5  F086         	call	_LCDcursorOff	;wreg free
  3009                           
  3010                           ;main.c: 303: LCDblinkOff();
  3011  01017E  ECBB  F086         	call	_LCDblinkOff	;wreg free
  3012                           
  3013                           ;main.c: 304: LCDsetCursor(0,2);
  3014  010182  0E02               	movlw	2
  3015  010184  6E0D               	movwf	LCDsetCursor@row,c
  3016  010186  0E00               	movlw	0
  3017  010188  ECE3  F084         	call	_LCDsetCursor
  3018                           
  3019                           ;main.c: 305: LCD_Write_Str("Addr Counter : ");
  3020  01018C  0E0F               	movlw	low STR_30
  3021  01018E  6E0D               	movwf	LCD_Write_Str@message,c
  3022  010190  0EFF               	movlw	high STR_30
  3023  010192  6E0E               	movwf	LCD_Write_Str@message+1,c
  3024  010194  EC01  F085         	call	_LCD_Write_Str	;wreg free
  3025                           
  3026                           ;main.c: 306: LCDsetCursor(15,2);
  3027  010198  0E02               	movlw	2
  3028  01019A  6E0D               	movwf	LCDsetCursor@row,c
  3029  01019C  0E0F               	movlw	15
  3030  01019E  ECE3  F084         	call	_LCDsetCursor
  3031                           
  3032                           ;main.c: 307: LCD_Write_Str("0x");
  3033  0101A2  0EFB               	movlw	low STR_31
  3034  0101A4  6E0D               	movwf	LCD_Write_Str@message,c
  3035  0101A6  0EFF               	movlw	high STR_31
  3036  0101A8  6E0E               	movwf	LCD_Write_Str@message+1,c
  3037  0101AA  EC01  F085         	call	_LCD_Write_Str	;wreg free
  3038                           
  3039                           ;main.c: 308: LCDsetCursor(17,2);
  3040  0101AE  0E02               	movlw	2
  3041  0101B0  6E0D               	movwf	LCDsetCursor@row,c
  3042  0101B2  0E11               	movlw	17
  3043  0101B4  ECE3  F084         	call	_LCDsetCursor
  3044                           
  3045                           ;main.c: 309: LCD_Write_Char((char) hex[(x>>4)& 0x0f]);
  3046  0101B8  3819               	swapf	controlMemoryReading@x,w,c
  3047  0101BA  0B0F               	andlw	15
  3048  0101BC  0B0F               	andlw	15
  3049  0101BE  6E17               	movwf	??_controlMemoryReading& (0+255),c
  3050  0101C0  6A18               	clrf	(??_controlMemoryReading+1)& (0+255),c
  3051  0101C2  0E32               	movlw	low _hex
  3052  0101C4  2417               	addwf	??_controlMemoryReading,w,c
  3053  0101C6  6ED9               	movwf	fsr2l,c
  3054  0101C8  0E00               	movlw	high _hex
  3055  0101CA  2018               	addwfc	??_controlMemoryReading+1,w,c
  3056  0101CC  6EDA               	movwf	fsr2h,c
  3057  0101CE  50DF               	movf	indf2,w,c
  3058  0101D0  ECD8  F086         	call	_LCD_Write_Char
  3059                           
  3060                           ;main.c: 310: LCDsetCursor(18,2);
  3061  0101D4  0E02               	movlw	2
  3062  0101D6  6E0D               	movwf	LCDsetCursor@row,c
  3063  0101D8  0E12               	movlw	18
  3064  0101DA  ECE3  F084         	call	_LCDsetCursor
  3065                           
  3066                           ;main.c: 311: LCD_Write_Char((char) hex[x & 0x0f]);
  3067  0101DE  5019               	movf	controlMemoryReading@x,w,c
  3068  0101E0  0B0F               	andlw	15
  3069  0101E2  6E17               	movwf	??_controlMemoryReading& (0+255),c
  3070  0101E4  6A18               	clrf	(??_controlMemoryReading+1)& (0+255),c
  3071  0101E6  0E32               	movlw	low _hex
  3072  0101E8  2417               	addwf	??_controlMemoryReading,w,c
  3073  0101EA  6ED9               	movwf	fsr2l,c
  3074  0101EC  0E00               	movlw	high _hex
  3075  0101EE  2018               	addwfc	??_controlMemoryReading+1,w,c
  3076  0101F0  6EDA               	movwf	fsr2h,c
  3077  0101F2  50DF               	movf	indf2,w,c
  3078  0101F4  ECD8  F086         	call	_LCD_Write_Char
  3079                           
  3080                           ;main.c: 314: x = LCDbusy();
  3081  0101F8  ECE1  F086         	call	_LCDbusy	;wreg free
  3082  0101FC  6E19               	movwf	controlMemoryReading@x,c
  3083                           
  3084                           ;main.c: 315: LCDsetCursor(0,3);
  3085  0101FE  0E03               	movlw	3
  3086  010200  6E0D               	movwf	LCDsetCursor@row,c
  3087  010202  0E00               	movlw	0
  3088  010204  ECE3  F084         	call	_LCDsetCursor
  3089                           
  3090                           ;main.c: 316: LCD_Write_Str("Busy Flag : ");
  3091  010208  0E49               	movlw	low STR_32
  3092  01020A  6E0D               	movwf	LCD_Write_Str@message,c
  3093  01020C  0EFF               	movlw	high STR_32
  3094  01020E  6E0E               	movwf	LCD_Write_Str@message+1,c
  3095  010210  EC01  F085         	call	_LCD_Write_Str	;wreg free
  3096                           
  3097                           ;main.c: 317: LCDsetCursor(12,3);
  3098  010214  0E03               	movlw	3
  3099  010216  6E0D               	movwf	LCDsetCursor@row,c
  3100  010218  0E0C               	movlw	12
  3101  01021A  ECE3  F084         	call	_LCDsetCursor
  3102                           
  3103                           ;main.c: 318: LCD_Write_Str("0x");
  3104  01021E  0EFB               	movlw	low STR_31
  3105  010220  6E0D               	movwf	LCD_Write_Str@message,c
  3106  010222  0EFF               	movlw	high STR_31
  3107  010224  6E0E               	movwf	LCD_Write_Str@message+1,c
  3108  010226  EC01  F085         	call	_LCD_Write_Str	;wreg free
  3109                           
  3110                           ;main.c: 319: LCDsetCursor(14,3);
  3111  01022A  0E03               	movlw	3
  3112  01022C  6E0D               	movwf	LCDsetCursor@row,c
  3113  01022E  0E0E               	movlw	14
  3114  010230  ECE3  F084         	call	_LCDsetCursor
  3115                           
  3116                           ;main.c: 320: LCD_Write_Char((char) hex[(x>>4)& 0x0f]);
  3117  010234  3819               	swapf	controlMemoryReading@x,w,c
  3118  010236  0B0F               	andlw	15
  3119  010238  0B0F               	andlw	15
  3120  01023A  6E17               	movwf	??_controlMemoryReading& (0+255),c
  3121  01023C  6A18               	clrf	(??_controlMemoryReading+1)& (0+255),c
  3122  01023E  0E32               	movlw	low _hex
  3123  010240  2417               	addwf	??_controlMemoryReading,w,c
  3124  010242  6ED9               	movwf	fsr2l,c
  3125  010244  0E00               	movlw	high _hex
  3126  010246  2018               	addwfc	??_controlMemoryReading+1,w,c
  3127  010248  6EDA               	movwf	fsr2h,c
  3128  01024A  50DF               	movf	indf2,w,c
  3129  01024C  ECD8  F086         	call	_LCD_Write_Char
  3130                           
  3131                           ;main.c: 321: LCDsetCursor(15,3);
  3132  010250  0E03               	movlw	3
  3133  010252  6E0D               	movwf	LCDsetCursor@row,c
  3134  010254  0E0F               	movlw	15
  3135  010256  ECE3  F084         	call	_LCDsetCursor
  3136                           
  3137                           ;main.c: 322: LCD_Write_Char((char) hex[x & 0x0f]);
  3138  01025A  5019               	movf	controlMemoryReading@x,w,c
  3139  01025C  0B0F               	andlw	15
  3140  01025E  6E17               	movwf	??_controlMemoryReading& (0+255),c
  3141  010260  6A18               	clrf	(??_controlMemoryReading+1)& (0+255),c
  3142  010262  0E32               	movlw	low _hex
  3143  010264  2417               	addwf	??_controlMemoryReading,w,c
  3144  010266  6ED9               	movwf	fsr2l,c
  3145  010268  0E00               	movlw	high _hex
  3146  01026A  2018               	addwfc	??_controlMemoryReading+1,w,c
  3147  01026C  6EDA               	movwf	fsr2h,c
  3148  01026E  50DF               	movf	indf2,w,c
  3149  010270  ECD8  F086         	call	_LCD_Write_Char
  3150                           
  3151                           ;main.c: 323: DelayMilliseconds(5000);
  3152  010274  0E13               	movlw	19
  3153  010276  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  3154  010278  0E88               	movlw	136
  3155  01027A  6E01               	movwf	DelayMilliseconds@delayTime,c
  3156  01027C  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  3157  010280  0012               	return		;funcret
  3158  010282                     __end_of_controlMemoryReading:
  3159                           	opt stack 0
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           prodh	equ	0xFF4
  3165                           prodl	equ	0xFF3
  3166                           postinc0	equ	0xFEE
  3167                           wreg	equ	0xFE8
  3168                           postdec1	equ	0xFE5
  3169                           fsr1l	equ	0xFE1
  3170                           indf2	equ	0xFDF
  3171                           postinc2	equ	0xFDE
  3172                           postdec2	equ	0xFDD
  3173                           fsr2h	equ	0xFDA
  3174                           fsr2l	equ	0xFD9
  3175                           status	equ	0xFD8
  3176                           
  3177 ;; *************** function _LCDcursorOn *****************
  3178 ;; Defined at:
  3179 ;;		line 303 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;		None               void
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;Total ram usage:        0 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    8
  3200 ;; This function calls:
  3201 ;;		_LCDcommandWrite
  3202 ;; This function is called by:
  3203 ;;		_cursorControl
  3204 ;;		_controlMemoryReading
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	text19
  3209  010D2E                     __ptext19:
  3210                           	opt stack 0
  3211  010D2E                     _LCDcursorOn:
  3212                           	opt stack 20
  3213                           
  3214                           ;LCD_I2C_PCF8574.c: 304: _displayfunction |= 0x02;
  3215                           
  3216                           ;incstack = 0
  3217  010D2E  8255               	bsf	__displayfunction,1,c
  3218                           
  3219                           ;LCD_I2C_PCF8574.c: 305: LCDcommandWrite(0x08 | _displayfunction);
  3220  010D30  5055               	movf	__displayfunction,w,c
  3221  010D32  0908               	iorlw	8
  3222  010D34  EC84  F086         	call	_LCDcommandWrite
  3223  010D38  0012               	return		;funcret
  3224  010D3A                     __end_of_LCDcursorOn:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           prodh	equ	0xFF4
  3231                           prodl	equ	0xFF3
  3232                           postinc0	equ	0xFEE
  3233                           wreg	equ	0xFE8
  3234                           postdec1	equ	0xFE5
  3235                           fsr1l	equ	0xFE1
  3236                           indf2	equ	0xFDF
  3237                           postinc2	equ	0xFDE
  3238                           postdec2	equ	0xFDD
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243 ;; *************** function _LCDbusy *****************
  3244 ;; Defined at:
  3245 ;;		line 400 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      unsigned char 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3263 ;;Total ram usage:        0 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    8
  3266 ;; This function calls:
  3267 ;;		_LCDcommandRead
  3268 ;; This function is called by:
  3269 ;;		_controlMemoryReading
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text20
  3274  010DC2                     __ptext20:
  3275                           	opt stack 0
  3276  010DC2                     _LCDbusy:
  3277                           	opt stack 20
  3278                           
  3279                           ;LCD_I2C_PCF8574.c: 401: return LCDcommandRead() & 0b10000000;
  3280                           
  3281                           ;incstack = 0
  3282  010DC2  ECE9  F086         	call	_LCDcommandRead	;wreg free
  3283  010DC6  0B80               	andlw	128
  3284  010DC8  0012               	return	
  3285  010DCA                     __end_of_LCDbusy:
  3286                           	opt stack 0
  3287                           tblptru	equ	0xFF8
  3288                           tblptrh	equ	0xFF7
  3289                           tblptrl	equ	0xFF6
  3290                           tablat	equ	0xFF5
  3291                           prodh	equ	0xFF4
  3292                           prodl	equ	0xFF3
  3293                           postinc0	equ	0xFEE
  3294                           wreg	equ	0xFE8
  3295                           postdec1	equ	0xFE5
  3296                           fsr1l	equ	0xFE1
  3297                           indf2	equ	0xFDF
  3298                           postinc2	equ	0xFDE
  3299                           postdec2	equ	0xFDD
  3300                           fsr2h	equ	0xFDA
  3301                           fsr2l	equ	0xFD9
  3302                           status	equ	0xFD8
  3303                           
  3304 ;; *************** function _LCDblinkOn *****************
  3305 ;; Defined at:
  3306 ;;		line 314 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;		None               void
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    8
  3327 ;; This function calls:
  3328 ;;		_LCDcommandWrite
  3329 ;; This function is called by:
  3330 ;;		_cursorControl
  3331 ;;		_controlMemoryReading
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           	psect	text21
  3336  010D3A                     __ptext21:
  3337                           	opt stack 0
  3338  010D3A                     _LCDblinkOn:
  3339                           	opt stack 20
  3340                           
  3341                           ;LCD_I2C_PCF8574.c: 315: _displayfunction |= 0x01;
  3342                           
  3343                           ;incstack = 0
  3344  010D3A  8055               	bsf	__displayfunction,0,c
  3345                           
  3346                           ;LCD_I2C_PCF8574.c: 316: LCDcommandWrite(0x08 | _displayfunction);
  3347  010D3C  5055               	movf	__displayfunction,w,c
  3348  010D3E  0908               	iorlw	8
  3349  010D40  EC84  F086         	call	_LCDcommandWrite
  3350  010D44  0012               	return		;funcret
  3351  010D46                     __end_of_LCDblinkOn:
  3352                           	opt stack 0
  3353                           tblptru	equ	0xFF8
  3354                           tblptrh	equ	0xFF7
  3355                           tblptrl	equ	0xFF6
  3356                           tablat	equ	0xFF5
  3357                           prodh	equ	0xFF4
  3358                           prodl	equ	0xFF3
  3359                           postinc0	equ	0xFEE
  3360                           wreg	equ	0xFE8
  3361                           postdec1	equ	0xFE5
  3362                           fsr1l	equ	0xFE1
  3363                           indf2	equ	0xFDF
  3364                           postinc2	equ	0xFDE
  3365                           postdec2	equ	0xFDD
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function _LCDaddressCounter *****************
  3371 ;; Defined at:
  3372 ;;		line 404 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      unsigned char 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    8
  3393 ;; This function calls:
  3394 ;;		_LCDcommandRead
  3395 ;; This function is called by:
  3396 ;;		_controlMemoryReading
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text22
  3401  010DCA                     __ptext22:
  3402                           	opt stack 0
  3403  010DCA                     _LCDaddressCounter:
  3404                           	opt stack 20
  3405                           
  3406                           ;LCD_I2C_PCF8574.c: 405: return LCDcommandRead() & 0b01111111;
  3407                           
  3408                           ;incstack = 0
  3409  010DCA  ECE9  F086         	call	_LCDcommandRead	;wreg free
  3410  010DCE  0B7F               	andlw	127
  3411  010DD0  0012               	return	
  3412  010DD2                     __end_of_LCDaddressCounter:
  3413                           	opt stack 0
  3414                           tblptru	equ	0xFF8
  3415                           tblptrh	equ	0xFF7
  3416                           tblptrl	equ	0xFF6
  3417                           tablat	equ	0xFF5
  3418                           prodh	equ	0xFF4
  3419                           prodl	equ	0xFF3
  3420                           postinc0	equ	0xFEE
  3421                           wreg	equ	0xFE8
  3422                           postdec1	equ	0xFE5
  3423                           fsr1l	equ	0xFE1
  3424                           indf2	equ	0xFDF
  3425                           postinc2	equ	0xFDE
  3426                           postdec2	equ	0xFDD
  3427                           fsr2h	equ	0xFDA
  3428                           fsr2l	equ	0xFD9
  3429                           status	equ	0xFD8
  3430                           
  3431 ;; *************** function _LCDcommandRead *****************
  3432 ;; Defined at:
  3433 ;;		line 388 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      unsigned char 
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0, cstack
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3451 ;;Total ram usage:        0 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    7
  3454 ;; This function calls:
  3455 ;;		_LCDreceive
  3456 ;; This function is called by:
  3457 ;;		_LCDbusy
  3458 ;;		_LCDaddressCounter
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text23
  3463  010DD2                     __ptext23:
  3464                           	opt stack 0
  3465  010DD2                     _LCDcommandRead:
  3466                           	opt stack 20
  3467                           
  3468                           ;LCD_I2C_PCF8574.c: 389: return LCDreceive(0b00000001 & ~0b00000001);
  3469                           
  3470                           ;incstack = 0
  3471  010DD2  0E00               	movlw	0
  3472  010DD4  ECC5  F084         	call	_LCDreceive
  3473  010DD8  0012               	return	
  3474  010DDA                     __end_of_LCDcommandRead:
  3475                           	opt stack 0
  3476                           tblptru	equ	0xFF8
  3477                           tblptrh	equ	0xFF7
  3478                           tblptrl	equ	0xFF6
  3479                           tablat	equ	0xFF5
  3480                           prodh	equ	0xFF4
  3481                           prodl	equ	0xFF3
  3482                           postinc0	equ	0xFEE
  3483                           wreg	equ	0xFE8
  3484                           postdec1	equ	0xFE5
  3485                           fsr1l	equ	0xFE1
  3486                           indf2	equ	0xFDF
  3487                           postinc2	equ	0xFDE
  3488                           postdec2	equ	0xFDD
  3489                           fsr2h	equ	0xFDA
  3490                           fsr2l	equ	0xFD9
  3491                           status	equ	0xFD8
  3492                           
  3493 ;; *************** function _LCDreceive *****************
  3494 ;; Defined at:
  3495 ;;		line 438 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  RsMode          1    wreg     unsigned char 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  RsMode          1   11[COMRAM] unsigned char 
  3500 ;;  lownib          1   10[COMRAM] unsigned char 
  3501 ;;  highnib         1    9[COMRAM] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      unsigned char 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3512 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;Total ram usage:        4 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    6
  3518 ;; This function calls:
  3519 ;;		_LCDread4bits
  3520 ;;		_LCDwritePCF8574
  3521 ;; This function is called by:
  3522 ;;		_LCDcommandRead
  3523 ;;		_LCDdataRead
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text24
  3528  01098A                     __ptext24:
  3529                           	opt stack 0
  3530  01098A                     _LCDreceive:
  3531                           	opt stack 20
  3532                           
  3533                           ;incstack = 0
  3534                           ;LCDreceive@RsMode stored from wreg
  3535  01098A  6E0C               	movwf	LCDreceive@RsMode,c
  3536                           
  3537                           ;LCD_I2C_PCF8574.c: 439: unsigned char highnib;
  3538                           ;LCD_I2C_PCF8574.c: 440: unsigned char lownib;
  3539                           ;LCD_I2C_PCF8574.c: 442: LCDwritePCF8574(0b11110000 | (0b00000100 & ~0b00000100) | RsMod
      +                          e);
  3540  01098C  500C               	movf	LCDreceive@RsMode,w,c
  3541  01098E  09F0               	iorlw	240
  3542  010990  EC5F  F086         	call	_LCDwritePCF8574
  3543                           
  3544                           ;LCD_I2C_PCF8574.c: 443: highnib = LCDread4bits(0b11110000 | 0b00000100 | RsMode);
  3545  010994  500C               	movf	LCDreceive@RsMode,w,c
  3546  010996  09F4               	iorlw	244
  3547  010998  ECF3  F085         	call	_LCDread4bits
  3548  01099C  6E0A               	movwf	LCDreceive@highnib,c
  3549                           
  3550                           ;LCD_I2C_PCF8574.c: 444: lownib = LCDread4bits(0b11110000 | 0b00000100 | RsMode);
  3551  01099E  500C               	movf	LCDreceive@RsMode,w,c
  3552  0109A0  09F4               	iorlw	244
  3553  0109A2  ECF3  F085         	call	_LCDread4bits
  3554  0109A6  6E0B               	movwf	LCDreceive@lownib,c
  3555                           
  3556                           ;LCD_I2C_PCF8574.c: 445: LCDwritePCF8574((0b11110000 & ~0b11110000) | 0b00000100 | RsMod
      +                          e);
  3557  0109A8  500C               	movf	LCDreceive@RsMode,w,c
  3558  0109AA  0904               	iorlw	4
  3559  0109AC  EC5F  F086         	call	_LCDwritePCF8574
  3560                           
  3561                           ;LCD_I2C_PCF8574.c: 446: return (unsigned char) ((highnib & 0xF0) | ((lownib & 0xF0) >> 
      +                          4));
  3562  0109B0  C00B  F009         	movff	LCDreceive@lownib,??_LCDreceive
  3563  0109B4  3A09               	swapf	??_LCDreceive,f,c
  3564  0109B6  0E0F               	movlw	15
  3565  0109B8  1609               	andwf	??_LCDreceive,f,c
  3566  0109BA  0E0F               	movlw	15
  3567  0109BC  1609               	andwf	??_LCDreceive,f,c
  3568  0109BE  500A               	movf	LCDreceive@highnib,w,c
  3569  0109C0  0BF0               	andlw	240
  3570  0109C2  1009               	iorwf	??_LCDreceive,w,c
  3571  0109C4  0012               	return	
  3572  0109C6                     __end_of_LCDreceive:
  3573                           	opt stack 0
  3574                           tblptru	equ	0xFF8
  3575                           tblptrh	equ	0xFF7
  3576                           tblptrl	equ	0xFF6
  3577                           tablat	equ	0xFF5
  3578                           prodh	equ	0xFF4
  3579                           prodl	equ	0xFF3
  3580                           postinc0	equ	0xFEE
  3581                           wreg	equ	0xFE8
  3582                           postdec1	equ	0xFE5
  3583                           fsr1l	equ	0xFE1
  3584                           indf2	equ	0xFDF
  3585                           postinc2	equ	0xFDE
  3586                           postdec2	equ	0xFDD
  3587                           fsr2h	equ	0xFDA
  3588                           fsr2l	equ	0xFD9
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function _LCDread4bits *****************
  3592 ;; Defined at:
  3593 ;;		line 457 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  RsEnMode        1    wreg     unsigned char 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  RsEnMode        1    7[COMRAM] unsigned char 
  3598 ;;  b               1    6[COMRAM] unsigned char 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      unsigned char 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;Total ram usage:        2 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    5
  3615 ;; This function calls:
  3616 ;;		_LCDpulseEnableNeg
  3617 ;;		_LCDpulseEnablePos
  3618 ;;		_LCDreadPCF8574
  3619 ;; This function is called by:
  3620 ;;		_LCDreceive
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text25
  3625  010BE6                     __ptext25:
  3626                           	opt stack 0
  3627  010BE6                     _LCDread4bits:
  3628                           	opt stack 20
  3629                           
  3630                           ;incstack = 0
  3631                           ;LCDread4bits@RsEnMode stored from wreg
  3632  010BE6  6E08               	movwf	LCDread4bits@RsEnMode,c
  3633                           
  3634                           ;LCD_I2C_PCF8574.c: 458: unsigned char b;
  3635                           ;LCD_I2C_PCF8574.c: 459: LCDpulseEnablePos(RsEnMode | 0b00000010);
  3636  010BE8  5008               	movf	LCDread4bits@RsEnMode,w,c
  3637  010BEA  0902               	iorlw	2
  3638  010BEC  EC32  F085         	call	_LCDpulseEnablePos
  3639                           
  3640                           ;LCD_I2C_PCF8574.c: 460: b = LCDreadPCF8574();
  3641  010BF0  ECED  F086         	call	_LCDreadPCF8574	;wreg free
  3642  010BF4  6E07               	movwf	LCDread4bits@b,c
  3643                           
  3644                           ;LCD_I2C_PCF8574.c: 461: LCDpulseEnableNeg(RsEnMode | 0b00000010);
  3645  010BF6  5008               	movf	LCDread4bits@RsEnMode,w,c
  3646  010BF8  0902               	iorlw	2
  3647  010BFA  EC48  F085         	call	_LCDpulseEnableNeg
  3648                           
  3649                           ;LCD_I2C_PCF8574.c: 462: return b;
  3650  010BFE  5007               	movf	LCDread4bits@b,w,c
  3651  010C00  0012               	return	
  3652  010C02                     __end_of_LCDread4bits:
  3653                           	opt stack 0
  3654                           tblptru	equ	0xFF8
  3655                           tblptrh	equ	0xFF7
  3656                           tblptrl	equ	0xFF6
  3657                           tablat	equ	0xFF5
  3658                           prodh	equ	0xFF4
  3659                           prodl	equ	0xFF3
  3660                           postinc0	equ	0xFEE
  3661                           wreg	equ	0xFE8
  3662                           postdec1	equ	0xFE5
  3663                           fsr1l	equ	0xFE1
  3664                           indf2	equ	0xFDF
  3665                           postinc2	equ	0xFDE
  3666                           postdec2	equ	0xFDD
  3667                           fsr2h	equ	0xFDA
  3668                           fsr2l	equ	0xFD9
  3669                           status	equ	0xFD8
  3670                           
  3671 ;; *************** function _LCDpulseEnablePos *****************
  3672 ;; Defined at:
  3673 ;;		line 473 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  _data           1    wreg     unsigned char 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  _data           1    5[COMRAM] unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;		None               void
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3691 ;;Total ram usage:        1 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    4
  3694 ;; This function calls:
  3695 ;;		_DelayMicroseconds
  3696 ;;		_LCDwritePCF8574
  3697 ;; This function is called by:
  3698 ;;		_LCDread4bits
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text26
  3703  010A64                     __ptext26:
  3704                           	opt stack 0
  3705  010A64                     _LCDpulseEnablePos:
  3706                           	opt stack 20
  3707                           
  3708                           ;incstack = 0
  3709                           ;LCDpulseEnablePos@_data stored from wreg
  3710  010A64  6E06               	movwf	LCDpulseEnablePos@_data,c
  3711                           
  3712                           ;LCD_I2C_PCF8574.c: 474: LCDwritePCF8574(_data & ~0b00000100);
  3713  010A66  5006               	movf	LCDpulseEnablePos@_data,w,c
  3714  010A68  0BFB               	andlw	251
  3715  010A6A  EC5F  F086         	call	_LCDwritePCF8574
  3716                           
  3717                           ;LCD_I2C_PCF8574.c: 475: DelayMicroseconds(1);
  3718  010A6E  0E00               	movlw	0
  3719  010A70  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  3720  010A72  0E01               	movlw	1
  3721  010A74  6E01               	movwf	DelayMicroseconds@delayTime,c
  3722  010A76  EC5E  F085         	call	_DelayMicroseconds	;wreg free
  3723                           
  3724                           ;LCD_I2C_PCF8574.c: 477: LCDwritePCF8574(_data | 0b00000100);
  3725  010A7A  5006               	movf	LCDpulseEnablePos@_data,w,c
  3726  010A7C  0904               	iorlw	4
  3727  010A7E  EC5F  F086         	call	_LCDwritePCF8574
  3728                           
  3729                           ;LCD_I2C_PCF8574.c: 478: DelayMicroseconds(50);
  3730  010A82  0E00               	movlw	0
  3731  010A84  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  3732  010A86  0E32               	movlw	50
  3733  010A88  6E01               	movwf	DelayMicroseconds@delayTime,c
  3734  010A8A  EC5E  F085         	call	_DelayMicroseconds	;wreg free
  3735  010A8E  0012               	return		;funcret
  3736  010A90                     __end_of_LCDpulseEnablePos:
  3737                           	opt stack 0
  3738                           tblptru	equ	0xFF8
  3739                           tblptrh	equ	0xFF7
  3740                           tblptrl	equ	0xFF6
  3741                           tablat	equ	0xFF5
  3742                           prodh	equ	0xFF4
  3743                           prodl	equ	0xFF3
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           postdec1	equ	0xFE5
  3747                           fsr1l	equ	0xFE1
  3748                           indf2	equ	0xFDF
  3749                           postinc2	equ	0xFDE
  3750                           postdec2	equ	0xFDD
  3751                           fsr2h	equ	0xFDA
  3752                           fsr2l	equ	0xFD9
  3753                           status	equ	0xFD8
  3754                           
  3755 ;; *************** function _backLightControl *****************
  3756 ;; Defined at:
  3757 ;;		line 191 in file "main.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  x               1   22[COMRAM] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;		None               void
  3764 ;; Registers used:
  3765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3775 ;;Total ram usage:        1 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    9
  3778 ;; This function calls:
  3779 ;;		_DelayMilliseconds
  3780 ;;		_LCD_Write_Str
  3781 ;;		_LCDbacklight
  3782 ;;		_LCDclear
  3783 ;;		_LCDcursorOff
  3784 ;;		_LCDnoBacklight
  3785 ;;		_LCDsetCursor
  3786 ;; This function is called by:
  3787 ;;		_exerciseDisplay
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text27
  3792  010358                     __ptext27:
  3793                           	opt stack 0
  3794  010358                     _backLightControl:
  3795                           	opt stack 20
  3796                           
  3797                           ;main.c: 193: LCDclear();
  3798                           
  3799                           ;incstack = 0
  3800  010358  EC30  F086         	call	_LCDclear	;wreg free
  3801                           
  3802                           ;main.c: 194: LCDcursorOff();
  3803  01035C  ECB5  F086         	call	_LCDcursorOff	;wreg free
  3804                           
  3805                           ;main.c: 195: LCDbacklight();
  3806  010360  ECA9  F086         	call	_LCDbacklight	;wreg free
  3807                           
  3808                           ;main.c: 196: LCD_Write_Str("Backlight On");
  3809  010364  0E63               	movlw	low STR_9
  3810  010366  6E0D               	movwf	LCD_Write_Str@message,c
  3811  010368  0EFF               	movlw	high STR_9
  3812  01036A  6E0E               	movwf	LCD_Write_Str@message+1,c
  3813  01036C  EC01  F085         	call	_LCD_Write_Str	;wreg free
  3814                           
  3815                           ;main.c: 197: DelayMilliseconds(1000);
  3816  010370  0E03               	movlw	3
  3817  010372  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  3818  010374  0EE8               	movlw	232
  3819  010376  6E01               	movwf	DelayMilliseconds@delayTime,c
  3820  010378  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  3821                           
  3822                           ;main.c: 198: LCDclear();
  3823  01037C  EC30  F086         	call	_LCDclear	;wreg free
  3824                           
  3825                           ;main.c: 200: LCDnoBacklight();
  3826  010380  ECA3  F086         	call	_LCDnoBacklight	;wreg free
  3827                           
  3828                           ;main.c: 201: LCD_Write_Str("Backlight Off");
  3829  010384  0E3B               	movlw	low STR_10
  3830  010386  6E0D               	movwf	LCD_Write_Str@message,c
  3831  010388  0EFF               	movlw	high STR_10
  3832  01038A  6E0E               	movwf	LCD_Write_Str@message+1,c
  3833  01038C  EC01  F085         	call	_LCD_Write_Str	;wreg free
  3834                           
  3835                           ;main.c: 202: DelayMilliseconds(1000);
  3836  010390  0E03               	movlw	3
  3837  010392  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  3838  010394  0EE8               	movlw	232
  3839  010396  6E01               	movwf	DelayMilliseconds@delayTime,c
  3840  010398  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  3841                           
  3842                           ;main.c: 203: LCDclear();
  3843  01039C  EC30  F086         	call	_LCDclear	;wreg free
  3844                           
  3845                           ;main.c: 205: LCDbacklight();
  3846  0103A0  ECA9  F086         	call	_LCDbacklight	;wreg free
  3847                           
  3848                           ;main.c: 206: LCD_Write_Str("Backlight On");
  3849  0103A4  0E63               	movlw	low STR_9
  3850  0103A6  6E0D               	movwf	LCD_Write_Str@message,c
  3851  0103A8  0EFF               	movlw	high STR_9
  3852  0103AA  6E0E               	movwf	LCD_Write_Str@message+1,c
  3853  0103AC  EC01  F085         	call	_LCD_Write_Str	;wreg free
  3854                           
  3855                           ;main.c: 207: DelayMilliseconds(1000);
  3856  0103B0  0E03               	movlw	3
  3857  0103B2  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  3858  0103B4  0EE8               	movlw	232
  3859  0103B6  6E01               	movwf	DelayMilliseconds@delayTime,c
  3860  0103B8  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  3861                           
  3862                           ;main.c: 208: for (unsigned char x = 0; x < 6; x++)
  3863  0103BC  0E00               	movlw	0
  3864  0103BE  6E17               	movwf	backLightControl@x,c
  3865  0103C0                     l2306:
  3866  0103C0  0E05               	movlw	5
  3867  0103C2  6417               	cpfsgt	backLightControl@x,c
  3868  0103C4  D001               	goto	l406
  3869  0103C6  0012               	return	
  3870  0103C8                     l406:
  3871                           
  3872                           ;main.c: 209: {
  3873                           ;main.c: 210: if (x%2) {
  3874  0103C8  A017               	btfss	backLightControl@x,0,c
  3875  0103CA  D019               	goto	l2318
  3876                           
  3877                           ;main.c: 211: LCDsetCursor(0,0);
  3878  0103CC  0E00               	movlw	0
  3879  0103CE  6E0D               	movwf	LCDsetCursor@row,c
  3880  0103D0  0E00               	movlw	0
  3881  0103D2  ECE3  F084         	call	_LCDsetCursor
  3882                           
  3883                           ;main.c: 212: LCD_Write_Str("             ");
  3884  0103D6  0E1F               	movlw	low STR_12
  3885  0103D8  6E0D               	movwf	LCD_Write_Str@message,c
  3886  0103DA  0EFF               	movlw	high STR_12
  3887  0103DC  6E0E               	movwf	LCD_Write_Str@message+1,c
  3888  0103DE  EC01  F085         	call	_LCD_Write_Str	;wreg free
  3889                           
  3890                           ;main.c: 213: LCDsetCursor(0,0);
  3891  0103E2  0E00               	movlw	0
  3892  0103E4  6E0D               	movwf	LCDsetCursor@row,c
  3893  0103E6  0E00               	movlw	0
  3894  0103E8  ECE3  F084         	call	_LCDsetCursor
  3895                           
  3896                           ;main.c: 214: LCD_Write_Str("Backlight On ");
  3897  0103EC  0E2D               	movlw	low STR_13
  3898  0103EE  6E0D               	movwf	LCD_Write_Str@message,c
  3899  0103F0  0EFF               	movlw	high STR_13
  3900  0103F2  6E0E               	movwf	LCD_Write_Str@message+1,c
  3901  0103F4  EC01  F085         	call	_LCD_Write_Str	;wreg free
  3902                           
  3903                           ;main.c: 215: LCDbacklight();
  3904  0103F8  ECA9  F086         	call	_LCDbacklight	;wreg free
  3905                           
  3906                           ;main.c: 216: } else {
  3907  0103FC  D00A               	goto	l2324
  3908  0103FE                     l2318:
  3909                           
  3910                           ;main.c: 217: LCDclear();
  3911  0103FE  EC30  F086         	call	_LCDclear	;wreg free
  3912                           
  3913                           ;main.c: 218: LCD_Write_Str("Backlight Off");
  3914  010402  0E3B               	movlw	low STR_10
  3915  010404  6E0D               	movwf	LCD_Write_Str@message,c
  3916  010406  0EFF               	movlw	high STR_10
  3917  010408  6E0E               	movwf	LCD_Write_Str@message+1,c
  3918  01040A  EC01  F085         	call	_LCD_Write_Str	;wreg free
  3919                           
  3920                           ;main.c: 219: LCDnoBacklight();
  3921  01040E  ECA3  F086         	call	_LCDnoBacklight	;wreg free
  3922  010412                     l2324:
  3923                           
  3924                           ;main.c: 220: }
  3925                           ;main.c: 221: DelayMilliseconds(750);
  3926  010412  0E02               	movlw	2
  3927  010414  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  3928  010416  0EEE               	movlw	238
  3929  010418  6E01               	movwf	DelayMilliseconds@delayTime,c
  3930  01041A  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  3931  01041E  2A17               	incf	backLightControl@x,f,c
  3932  010420  D7CF               	goto	l2306
  3933  010422                     __end_of_backLightControl:
  3934                           	opt stack 0
  3935                           tblptru	equ	0xFF8
  3936                           tblptrh	equ	0xFF7
  3937                           tblptrl	equ	0xFF6
  3938                           tablat	equ	0xFF5
  3939                           prodh	equ	0xFF4
  3940                           prodl	equ	0xFF3
  3941                           postinc0	equ	0xFEE
  3942                           wreg	equ	0xFE8
  3943                           postdec1	equ	0xFE5
  3944                           fsr1l	equ	0xFE1
  3945                           indf2	equ	0xFDF
  3946                           postinc2	equ	0xFDE
  3947                           postdec2	equ	0xFDD
  3948                           fsr2h	equ	0xFDA
  3949                           fsr2l	equ	0xFD9
  3950                           status	equ	0xFD8
  3951                           
  3952 ;; *************** function _LCDnoBacklight *****************
  3953 ;; Defined at:
  3954 ;;		line 370 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;		None
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;		None               void
  3961 ;; Registers used:
  3962 ;;		wreg, status,2, status,0, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3972 ;;Total ram usage:        0 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:    4
  3975 ;; This function calls:
  3976 ;;		_LCDreadPCF8574
  3977 ;;		_LCDwritePCF8574
  3978 ;; This function is called by:
  3979 ;;		_backLightControl
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text28
  3984  010D46                     __ptext28:
  3985                           	opt stack 0
  3986  010D46                     _LCDnoBacklight:
  3987                           	opt stack 24
  3988                           
  3989                           ;LCD_I2C_PCF8574.c: 371: _backlightval &= ~0b00001000;
  3990                           
  3991                           ;incstack = 0
  3992  010D46  9653               	bcf	__backlightval,3,c
  3993                           
  3994                           ;LCD_I2C_PCF8574.c: 372: LCDwritePCF8574(LCDreadPCF8574());
  3995  010D48  ECED  F086         	call	_LCDreadPCF8574	;wreg free
  3996  010D4C  EC5F  F086         	call	_LCDwritePCF8574
  3997  010D50  0012               	return		;funcret
  3998  010D52                     __end_of_LCDnoBacklight:
  3999                           	opt stack 0
  4000                           tblptru	equ	0xFF8
  4001                           tblptrh	equ	0xFF7
  4002                           tblptrl	equ	0xFF6
  4003                           tablat	equ	0xFF5
  4004                           prodh	equ	0xFF4
  4005                           prodl	equ	0xFF3
  4006                           postinc0	equ	0xFEE
  4007                           wreg	equ	0xFE8
  4008                           postdec1	equ	0xFE5
  4009                           fsr1l	equ	0xFE1
  4010                           indf2	equ	0xFDF
  4011                           postinc2	equ	0xFDE
  4012                           postdec2	equ	0xFDD
  4013                           fsr2h	equ	0xFDA
  4014                           fsr2l	equ	0xFD9
  4015                           status	equ	0xFD8
  4016                           
  4017 ;; *************** function _LCDbacklight *****************
  4018 ;; Defined at:
  4019 ;;		line 375 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;		None
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;		None               void
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4037 ;;Total ram usage:        0 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    4
  4040 ;; This function calls:
  4041 ;;		_LCDreadPCF8574
  4042 ;;		_LCDwritePCF8574
  4043 ;; This function is called by:
  4044 ;;		_backLightControl
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text29
  4049  010D52                     __ptext29:
  4050                           	opt stack 0
  4051  010D52                     _LCDbacklight:
  4052                           	opt stack 24
  4053                           
  4054                           ;LCD_I2C_PCF8574.c: 376: _backlightval |= 0b00001000;
  4055                           
  4056                           ;incstack = 0
  4057  010D52  8653               	bsf	__backlightval,3,c
  4058                           
  4059                           ;LCD_I2C_PCF8574.c: 377: LCDwritePCF8574(LCDreadPCF8574());
  4060  010D54  ECED  F086         	call	_LCDreadPCF8574	;wreg free
  4061  010D58  EC5F  F086         	call	_LCDwritePCF8574
  4062  010D5C  0012               	return		;funcret
  4063  010D5E                     __end_of_LCDbacklight:
  4064                           	opt stack 0
  4065                           tblptru	equ	0xFF8
  4066                           tblptrh	equ	0xFF7
  4067                           tblptrl	equ	0xFF6
  4068                           tablat	equ	0xFF5
  4069                           prodh	equ	0xFF4
  4070                           prodl	equ	0xFF3
  4071                           postinc0	equ	0xFEE
  4072                           wreg	equ	0xFE8
  4073                           postdec1	equ	0xFE5
  4074                           fsr1l	equ	0xFE1
  4075                           indf2	equ	0xFDF
  4076                           postinc2	equ	0xFDE
  4077                           postdec2	equ	0xFDD
  4078                           fsr2h	equ	0xFDA
  4079                           fsr2l	equ	0xFD9
  4080                           status	equ	0xFD8
  4081                           
  4082 ;; *************** function _LCDreadPCF8574 *****************
  4083 ;; Defined at:
  4084 ;;		line 487 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      unsigned char 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;Total ram usage:        0 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    3
  4105 ;; This function calls:
  4106 ;;		_I2C_Read_Byte_Single_Reg
  4107 ;; This function is called by:
  4108 ;;		_LCDnoBacklight
  4109 ;;		_LCDbacklight
  4110 ;;		_LCDread4bits
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text30
  4115  010DDA                     __ptext30:
  4116                           	opt stack 0
  4117  010DDA                     _LCDreadPCF8574:
  4118                           	opt stack 21
  4119                           
  4120                           ;LCD_I2C_PCF8574.c: 488: return I2C_Read_Byte_Single_Reg((0x27<<1));
  4121                           
  4122                           ;incstack = 0
  4123  010DDA  0E4E               	movlw	78
  4124  010DDC  EC73  F085         	call	_I2C_Read_Byte_Single_Reg
  4125  010DE0  0012               	return	
  4126  010DE2                     __end_of_LCDreadPCF8574:
  4127                           	opt stack 0
  4128                           tblptru	equ	0xFF8
  4129                           tblptrh	equ	0xFF7
  4130                           tblptrl	equ	0xFF6
  4131                           tablat	equ	0xFF5
  4132                           prodh	equ	0xFF4
  4133                           prodl	equ	0xFF3
  4134                           postinc0	equ	0xFEE
  4135                           wreg	equ	0xFE8
  4136                           postdec1	equ	0xFE5
  4137                           fsr1l	equ	0xFE1
  4138                           indf2	equ	0xFDF
  4139                           postinc2	equ	0xFDE
  4140                           postdec2	equ	0xFDD
  4141                           fsr2h	equ	0xFDA
  4142                           fsr2l	equ	0xFD9
  4143                           status	equ	0xFD8
  4144                           
  4145 ;; *************** function _I2C_Read_Byte_Single_Reg *****************
  4146 ;; Defined at:
  4147 ;;		line 39 in file "i2c_utils_files/I2C_UTILS.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  device          1    wreg     unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  device          1    2[COMRAM] unsigned char 
  4152 ;;  b               1    3[COMRAM] unsigned char 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      unsigned char 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4166 ;;Total ram usage:        2 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    2
  4169 ;; This function calls:
  4170 ;;		_IdleI2C
  4171 ;;		_ReadI2C
  4172 ;;		_WriteI2C
  4173 ;; This function is called by:
  4174 ;;		_LCDreadPCF8574
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text31
  4179  010AE6                     __ptext31:
  4180                           	opt stack 0
  4181  010AE6                     _I2C_Read_Byte_Single_Reg:
  4182                           	opt stack 21
  4183                           
  4184                           ;incstack = 0
  4185                           ;I2C_Read_Byte_Single_Reg@device stored from wreg
  4186  010AE6  6E03               	movwf	I2C_Read_Byte_Single_Reg@device,c
  4187                           
  4188                           ;I2C_UTILS.c: 41: unsigned char b = 0;
  4189  010AE8  0E00               	movlw	0
  4190  010AEA  6E04               	movwf	I2C_Read_Byte_Single_Reg@b,c
  4191                           
  4192                           ;I2C_UTILS.c: 43: IdleI2C();
  4193  010AEC  EC56  F086         	call	_IdleI2C	;wreg free
  4194                           
  4195                           ;I2C_UTILS.c: 44: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  4196  010AF0  80C5               	bsf	4037,0,c	;volatile
  4197  010AF2                     l31:
  4198  010AF2  B0C5               	btfsc	4037,0,c	;volatile
  4199  010AF4  D7FE               	goto	l31
  4200                           
  4201                           ;I2C_UTILS.c: 45: WriteI2C(device | 0b00000001);
  4202  010AF6  5003               	movf	I2C_Read_Byte_Single_Reg@device,w,c
  4203  010AF8  0901               	iorlw	1
  4204  010AFA  EC7D  F084         	call	_WriteI2C
  4205                           
  4206                           ;I2C_UTILS.c: 46: b = ReadI2C();
  4207  010AFE  EC01  F086         	call	_ReadI2C	;wreg free
  4208  010B02  6E04               	movwf	I2C_Read_Byte_Single_Reg@b,c
  4209                           
  4210                           ;I2C_UTILS.c: 49: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  4211  010B04  84C5               	bsf	4037,2,c	;volatile
  4212  010B06                     l34:
  4213  010B06  B4C5               	btfsc	4037,2,c	;volatile
  4214  010B08  D7FE               	goto	l34
  4215                           
  4216                           ;I2C_UTILS.c: 50: return b;
  4217  010B0A  5004               	movf	I2C_Read_Byte_Single_Reg@b,w,c
  4218  010B0C  0012               	return	
  4219  010B0E                     __end_of_I2C_Read_Byte_Single_Reg:
  4220                           	opt stack 0
  4221                           tblptru	equ	0xFF8
  4222                           tblptrh	equ	0xFF7
  4223                           tblptrl	equ	0xFF6
  4224                           tablat	equ	0xFF5
  4225                           prodh	equ	0xFF4
  4226                           prodl	equ	0xFF3
  4227                           postinc0	equ	0xFEE
  4228                           wreg	equ	0xFE8
  4229                           postdec1	equ	0xFE5
  4230                           fsr1l	equ	0xFE1
  4231                           indf2	equ	0xFDF
  4232                           postinc2	equ	0xFDE
  4233                           postdec2	equ	0xFDD
  4234                           fsr2h	equ	0xFDA
  4235                           fsr2l	equ	0xFD9
  4236                           status	equ	0xFD8
  4237                           
  4238 ;; *************** function _ReadI2C *****************
  4239 ;; Defined at:
  4240 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c_read.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      unsigned char 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2, status,0
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;Total ram usage:        0 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_I2C_Read_Byte_Single_Reg
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text32
  4268  010C02                     __ptext32:
  4269                           	opt stack 0
  4270  010C02                     _ReadI2C:
  4271                           	opt stack 22
  4272                           
  4273                           ;incstack = 0
  4274  010C02  50C6               	movf	4038,w,c	;volatile
  4275  010C04  0B0F               	andlw	15
  4276  010C06  0A08               	xorlw	8
  4277  010C08  B4D8               	btfsc	status,2,c
  4278  010C0A  D004               	goto	l470
  4279  010C0C  50C6               	movf	4038,w,c	;volatile
  4280  010C0E  0B0F               	andlw	15
  4281  010C10  0A0B               	xorlw	11
  4282  010C12  B4D8               	btfsc	status,2,c
  4283  010C14                     l470:
  4284  010C14  86C5               	bsf	4037,3,c	;volatile
  4285  010C16                     l471:
  4286  010C16  A0C7               	btfss	4039,0,c	;volatile
  4287  010C18  D7FE               	goto	l471
  4288  010C1A  50C9               	movf	4041,w,c	;volatile
  4289  010C1C  0012               	return	
  4290  010C1E                     __end_of_ReadI2C:
  4291                           	opt stack 0
  4292                           tblptru	equ	0xFF8
  4293                           tblptrh	equ	0xFF7
  4294                           tblptrl	equ	0xFF6
  4295                           tablat	equ	0xFF5
  4296                           prodh	equ	0xFF4
  4297                           prodl	equ	0xFF3
  4298                           postinc0	equ	0xFEE
  4299                           wreg	equ	0xFE8
  4300                           postdec1	equ	0xFE5
  4301                           fsr1l	equ	0xFE1
  4302                           indf2	equ	0xFDF
  4303                           postinc2	equ	0xFDE
  4304                           postdec2	equ	0xFDD
  4305                           fsr2h	equ	0xFDA
  4306                           fsr2l	equ	0xFD9
  4307                           status	equ	0xFD8
  4308                           
  4309 ;; *************** function _LCD_Write_Str *****************
  4310 ;; Defined at:
  4311 ;;		line 249 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  message         2   12[COMRAM] PTR const unsigned char 
  4314 ;;		 -> STR_37(3), STR_36(19), STR_35(3), STR_34(5), 
  4315 ;;		 -> STR_33(3), STR_32(13), STR_31(3), STR_30(16), 
  4316 ;;		 -> STR_29(21), STR_28(20), STR_27(21), STR_26(20), 
  4317 ;;		 -> STR_25(20), STR_24(12), STR_23(10), STR_22(9), 
  4318 ;;		 -> STR_21(10), STR_20(11), STR_19(9), STR_18(6), 
  4319 ;;		 -> STR_17(6), STR_16(6), STR_15(6), STR_14(14), 
  4320 ;;		 -> STR_13(14), STR_12(14), STR_11(13), STR_10(14), 
  4321 ;;		 -> STR_9(13), STR_8(12), STR_7(12), STR_6(12), 
  4322 ;;		 -> STR_5(12), STR_4(6), STR_3(13), STR_2(6), 
  4323 ;;		 -> STR_1(13), 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  message_ptr     2   14[COMRAM] PTR unsigned char 
  4326 ;;		 -> STR_37(3), STR_36(19), STR_35(3), STR_34(5), 
  4327 ;;		 -> STR_33(3), STR_32(13), STR_31(3), STR_30(16), 
  4328 ;;		 -> STR_29(21), STR_28(20), STR_27(21), STR_26(20), 
  4329 ;;		 -> STR_25(20), STR_24(12), STR_23(10), STR_22(9), 
  4330 ;;		 -> STR_21(10), STR_20(11), STR_19(9), STR_18(6), 
  4331 ;;		 -> STR_17(6), STR_16(6), STR_15(6), STR_14(14), 
  4332 ;;		 -> STR_13(14), STR_12(14), STR_11(13), STR_10(14), 
  4333 ;;		 -> STR_9(13), STR_8(12), STR_7(12), STR_6(12), 
  4334 ;;		 -> STR_5(12), STR_4(6), STR_3(13), STR_2(6), 
  4335 ;;		 -> STR_1(13), 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;		None               void
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4349 ;;Total ram usage:        4 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    8
  4352 ;; This function calls:
  4353 ;;		_LCDdataWrite
  4354 ;; This function is called by:
  4355 ;;		_displayLeftRightScroll
  4356 ;;		_displayOnOff
  4357 ;;		_backLightControl
  4358 ;;		_printAt
  4359 ;;		_cursorControl
  4360 ;;		_printLeftAndRight
  4361 ;;		_controlMemoryReading
  4362 ;;		_dataMemoryReading
  4363 ;;		_putHexString
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text33
  4368  010A02                     __ptext33:
  4369                           	opt stack 0
  4370  010A02                     _LCD_Write_Str:
  4371                           	opt stack 20
  4372                           
  4373                           ;LCD_I2C_PCF8574.c: 251: unsigned char *message_ptr = (unsigned char *) message;
  4374                           
  4375                           ;incstack = 0
  4376  010A02  C00D  F00F         	movff	LCD_Write_Str@message,LCD_Write_Str@message_ptr
  4377  010A06  C00E  F010         	movff	LCD_Write_Str@message+1,LCD_Write_Str@message_ptr+1
  4378                           
  4379                           ;LCD_I2C_PCF8574.c: 253: while (*message_ptr)
  4380  010A0A  D00A               	goto	l1970
  4381  010A0C                     l1966:
  4382                           
  4383                           ;LCD_I2C_PCF8574.c: 254: LCDdataWrite((unsigned char) (*message_ptr++));
  4384  010A0C  C00F  FFF6         	movff	LCD_Write_Str@message_ptr,tblptrl
  4385  010A10  C010  FFF7         	movff	LCD_Write_Str@message_ptr+1,tblptrh
  4386  010A14                     	if	0	;tblptru may be non-zero
  4387  010A14                     	endif
  4388  010A14                     	if	0	;tblptru may be non-zero
  4389  010A14                     	endif
  4390  010A14  0008               	tblrd		*
  4391  010A16  50F5               	movf	tablat,w,c
  4392  010A18  EC7D  F086         	call	_LCDdataWrite
  4393  010A1C  4A0F               	infsnz	LCD_Write_Str@message_ptr,f,c
  4394  010A1E  2A10               	incf	LCD_Write_Str@message_ptr+1,f,c
  4395  010A20                     l1970:
  4396  010A20  C00F  FFF6         	movff	LCD_Write_Str@message_ptr,tblptrl
  4397  010A24  C010  FFF7         	movff	LCD_Write_Str@message_ptr+1,tblptrh
  4398  010A28                     	if	0	;tblptru may be non-zero
  4399  010A28                     	endif
  4400  010A28                     	if	0	;tblptru may be non-zero
  4401  010A28                     	endif
  4402  010A28  0008               	tblrd		*
  4403  010A2A  50F5               	movf	tablat,w,c
  4404  010A2C  0900               	iorlw	0
  4405  010A2E  B4D8               	btfsc	status,2,c
  4406  010A30  0012               	return	
  4407  010A32  D7EC               	goto	l1966
  4408  010A34                     __end_of_LCD_Write_Str:
  4409                           	opt stack 0
  4410                           tblptru	equ	0xFF8
  4411                           tblptrh	equ	0xFF7
  4412                           tblptrl	equ	0xFF6
  4413                           tablat	equ	0xFF5
  4414                           prodh	equ	0xFF4
  4415                           prodl	equ	0xFF3
  4416                           postinc0	equ	0xFEE
  4417                           wreg	equ	0xFE8
  4418                           postdec1	equ	0xFE5
  4419                           fsr1l	equ	0xFE1
  4420                           indf2	equ	0xFDF
  4421                           postinc2	equ	0xFDE
  4422                           postdec2	equ	0xFDD
  4423                           fsr2h	equ	0xFDA
  4424                           fsr2l	equ	0xFD9
  4425                           status	equ	0xFD8
  4426                           
  4427 ;; *************** function _autoIncrement *****************
  4428 ;; Defined at:
  4429 ;;		line 104 in file "main.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  NoAutoscroll   14   22[COMRAM] unsigned char [14]
  4434 ;;  Autoscroll     11   36[COMRAM] unsigned char [11]
  4435 ;;  p               2   47[COMRAM] PTR unsigned char 
  4436 ;;		 -> autoIncrement@NoAutoscroll(14), autoIncrement@Autoscroll(11), 
  4437 ;; Return value:  Size  Location     Type
  4438 ;;		None               void
  4439 ;; Registers used:
  4440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;      Locals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4450 ;;Total ram usage:       27 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    9
  4453 ;; This function calls:
  4454 ;;		_DelayMilliseconds
  4455 ;;		_LCD_Write_Char
  4456 ;;		_LCDautoscroll
  4457 ;;		_LCDblinkOff
  4458 ;;		_LCDclear
  4459 ;;		_LCDcursorOff
  4460 ;;		_LCDnoAutoscroll
  4461 ;;		_LCDsetCursor
  4462 ;; This function is called by:
  4463 ;;		_exerciseDisplay
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text34
  4468  010282                     __ptext34:
  4469                           	opt stack 0
  4470  010282                     _autoIncrement:
  4471                           	opt stack 20
  4472                           
  4473                           ;main.c: 106: char Autoscroll[] = "Autoscroll";
  4474                           
  4475                           ;incstack = 0
  4476  010282  EE20  F07E         	lfsr	2,autoIncrement@F16646
  4477  010286  EE10  F025         	lfsr	1,autoIncrement@Autoscroll
  4478  01028A  0E0A               	movlw	10
  4479  01028C                     u731:
  4480  01028C  CFDB FFE3          	movff	plusw2,plusw1
  4481  010290  06E8               	decf	wreg,f,c
  4482  010292  E2FC               	bc	u731
  4483                           
  4484                           ;main.c: 107: char NoAutoscroll[] = "No Autoscroll";
  4485  010294  EE20  F070         	lfsr	2,autoIncrement@F16648
  4486  010298  EE10  F017         	lfsr	1,autoIncrement@NoAutoscroll
  4487  01029C  0E0D               	movlw	13
  4488  01029E                     u741:
  4489  01029E  CFDB FFE3          	movff	plusw2,plusw1
  4490  0102A2  06E8               	decf	wreg,f,c
  4491  0102A4  E2FC               	bc	u741
  4492                           
  4493                           ;main.c: 108: unsigned char * p;
  4494                           ;main.c: 110: LCDclear();
  4495  0102A6  EC30  F086         	call	_LCDclear	;wreg free
  4496                           
  4497                           ;main.c: 111: LCDcursorOff();
  4498  0102AA  ECB5  F086         	call	_LCDcursorOff	;wreg free
  4499                           
  4500                           ;main.c: 112: LCDblinkOff();
  4501  0102AE  ECBB  F086         	call	_LCDblinkOff	;wreg free
  4502                           
  4503                           ;main.c: 113: LCDautoscroll();
  4504  0102B2  ECC1  F086         	call	_LCDautoscroll	;wreg free
  4505                           
  4506                           ;main.c: 114: p = Autoscroll;
  4507  0102B6  0E25               	movlw	low autoIncrement@Autoscroll
  4508  0102B8  6E30               	movwf	autoIncrement@p,c
  4509  0102BA  0E00               	movlw	high autoIncrement@Autoscroll
  4510  0102BC  6E31               	movwf	autoIncrement@p+1,c
  4511                           
  4512                           ;main.c: 115: LCDsetCursor(15,1);
  4513  0102BE  0E01               	movlw	1
  4514  0102C0  6E0D               	movwf	LCDsetCursor@row,c
  4515  0102C2  0E0F               	movlw	15
  4516  0102C4  ECE3  F084         	call	_LCDsetCursor
  4517                           
  4518                           ;main.c: 116: while (*p)
  4519  0102C8  D00F               	goto	l2192
  4520  0102CA                     l2186:
  4521                           
  4522                           ;main.c: 117: {
  4523                           ;main.c: 118: LCD_Write_Char((char) *p++);
  4524  0102CA  C030  FFD9         	movff	autoIncrement@p,fsr2l
  4525  0102CE  C031  FFDA         	movff	autoIncrement@p+1,fsr2h
  4526  0102D2  50DF               	movf	indf2,w,c
  4527  0102D4  ECD8  F086         	call	_LCD_Write_Char
  4528  0102D8  4A30               	infsnz	autoIncrement@p,f,c
  4529  0102DA  2A31               	incf	autoIncrement@p+1,f,c
  4530                           
  4531                           ;main.c: 119: DelayMilliseconds(400);
  4532  0102DC  0E01               	movlw	1
  4533  0102DE  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  4534  0102E0  0E90               	movlw	144
  4535  0102E2  6E01               	movwf	DelayMilliseconds@delayTime,c
  4536  0102E4  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  4537  0102E8                     l2192:
  4538  0102E8  C030  FFD9         	movff	autoIncrement@p,fsr2l
  4539  0102EC  C031  FFDA         	movff	autoIncrement@p+1,fsr2h
  4540  0102F0  50DF               	movf	indf2,w,c
  4541  0102F2  A4D8               	btfss	status,2,c
  4542  0102F4  D7EA               	goto	l2186
  4543                           
  4544                           ;main.c: 120: }
  4545                           ;main.c: 121: DelayMilliseconds(5000);
  4546  0102F6  0E13               	movlw	19
  4547  0102F8  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  4548  0102FA  0E88               	movlw	136
  4549  0102FC  6E01               	movwf	DelayMilliseconds@delayTime,c
  4550  0102FE  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  4551                           
  4552                           ;main.c: 123: LCDclear();
  4553  010302  EC30  F086         	call	_LCDclear	;wreg free
  4554                           
  4555                           ;main.c: 124: LCDnoAutoscroll();
  4556  010306  ECAF  F086         	call	_LCDnoAutoscroll	;wreg free
  4557                           
  4558                           ;main.c: 125: p = NoAutoscroll;
  4559  01030A  0E17               	movlw	low autoIncrement@NoAutoscroll
  4560  01030C  6E30               	movwf	autoIncrement@p,c
  4561  01030E  0E00               	movlw	high autoIncrement@NoAutoscroll
  4562  010310  6E31               	movwf	autoIncrement@p+1,c
  4563                           
  4564                           ;main.c: 126: LCDsetCursor(3,1);
  4565  010312  0E01               	movlw	1
  4566  010314  6E0D               	movwf	LCDsetCursor@row,c
  4567  010316  0E03               	movlw	3
  4568  010318  ECE3  F084         	call	_LCDsetCursor
  4569                           
  4570                           ;main.c: 127: while (*p)
  4571  01031C  D00F               	goto	l2206
  4572  01031E                     l2200:
  4573                           
  4574                           ;main.c: 128: {
  4575                           ;main.c: 129: LCD_Write_Char((char) *p++);
  4576  01031E  C030  FFD9         	movff	autoIncrement@p,fsr2l
  4577  010322  C031  FFDA         	movff	autoIncrement@p+1,fsr2h
  4578  010326  50DF               	movf	indf2,w,c
  4579  010328  ECD8  F086         	call	_LCD_Write_Char
  4580  01032C  4A30               	infsnz	autoIncrement@p,f,c
  4581  01032E  2A31               	incf	autoIncrement@p+1,f,c
  4582                           
  4583                           ;main.c: 130: DelayMilliseconds(400);
  4584  010330  0E01               	movlw	1
  4585  010332  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  4586  010334  0E90               	movlw	144
  4587  010336  6E01               	movwf	DelayMilliseconds@delayTime,c
  4588  010338  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  4589  01033C                     l2206:
  4590  01033C  C030  FFD9         	movff	autoIncrement@p,fsr2l
  4591  010340  C031  FFDA         	movff	autoIncrement@p+1,fsr2h
  4592  010344  50DF               	movf	indf2,w,c
  4593  010346  A4D8               	btfss	status,2,c
  4594  010348  D7EA               	goto	l2200
  4595                           
  4596                           ;main.c: 131: }
  4597                           ;main.c: 132: DelayMilliseconds(5000);
  4598  01034A  0E13               	movlw	19
  4599  01034C  6E02               	movwf	DelayMilliseconds@delayTime+1,c
  4600  01034E  0E88               	movlw	136
  4601  010350  6E01               	movwf	DelayMilliseconds@delayTime,c
  4602  010352  EC1A  F085         	call	_DelayMilliseconds	;wreg free
  4603  010356  0012               	return		;funcret
  4604  010358                     __end_of_autoIncrement:
  4605                           	opt stack 0
  4606                           tblptru	equ	0xFF8
  4607                           tblptrh	equ	0xFF7
  4608                           tblptrl	equ	0xFF6
  4609                           tablat	equ	0xFF5
  4610                           prodh	equ	0xFF4
  4611                           prodl	equ	0xFF3
  4612                           postinc0	equ	0xFEE
  4613                           wreg	equ	0xFE8
  4614                           postdec1	equ	0xFE5
  4615                           plusw1	equ	0xFE3
  4616                           fsr1l	equ	0xFE1
  4617                           indf2	equ	0xFDF
  4618                           postinc2	equ	0xFDE
  4619                           postdec2	equ	0xFDD
  4620                           plusw2	equ	0xFDB
  4621                           fsr2h	equ	0xFDA
  4622                           fsr2l	equ	0xFD9
  4623                           status	equ	0xFD8
  4624                           
  4625 ;; *************** function _LCDsetCursor *****************
  4626 ;; Defined at:
  4627 ;;		line 276 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  col             1    wreg     unsigned char 
  4630 ;;  row             1   12[COMRAM] unsigned char 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  col             1   21[COMRAM] unsigned char 
  4633 ;;  row_offsets     8   13[COMRAM] int [4]
  4634 ;; Return value:  Size  Location     Type
  4635 ;;		None               void
  4636 ;; Registers used:
  4637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4643 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;Total ram usage:       10 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    8
  4650 ;; This function calls:
  4651 ;;		_LCDcommandWrite
  4652 ;; This function is called by:
  4653 ;;		_autoIncrement
  4654 ;;		_displayLeftRightScroll
  4655 ;;		_displayOnOff
  4656 ;;		_backLightControl
  4657 ;;		_printAt
  4658 ;;		_printLeftAndRight
  4659 ;;		_controlMemoryReading
  4660 ;;		_dataMemoryReading
  4661 ;;		_putHexString
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text35
  4666  0109C6                     __ptext35:
  4667                           	opt stack 0
  4668  0109C6                     _LCDsetCursor:
  4669                           	opt stack 20
  4670                           
  4671                           ;incstack = 0
  4672                           ;LCDsetCursor@col stored from wreg
  4673  0109C6  6E16               	movwf	LCDsetCursor@col,c
  4674                           
  4675                           ;LCD_I2C_PCF8574.c: 278: int row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
  4676  0109C8  EE20  F043         	lfsr	2,LCDsetCursor@F113
  4677  0109CC  EE10  F00E         	lfsr	1,LCDsetCursor@row_offsets
  4678  0109D0  0E07               	movlw	7
  4679  0109D2                     u671:
  4680  0109D2  CFDB FFE3          	movff	plusw2,plusw1
  4681  0109D6  06E8               	decf	wreg,f,c
  4682  0109D8  E2FC               	bc	u671
  4683                           
  4684                           ;LCD_I2C_PCF8574.c: 279: if ( row >= _numlines ) {
  4685  0109DA  5059               	movf	__numlines,w,c
  4686  0109DC  5C0D               	subwf	LCDsetCursor@row,w,c
  4687  0109DE  A0D8               	btfss	status,0,c
  4688  0109E0  D002               	goto	l1978
  4689                           
  4690                           ;LCD_I2C_PCF8574.c: 280: row = _numlines-1;
  4691  0109E2  0459               	decf	__numlines,w,c
  4692  0109E4  6E0D               	movwf	LCDsetCursor@row,c
  4693  0109E6                     l1978:
  4694                           
  4695                           ;LCD_I2C_PCF8574.c: 281: }
  4696                           ;LCD_I2C_PCF8574.c: 283: LCDcommandWrite(0x80 | (col + row_offsets[row]));
  4697  0109E6  500D               	movf	LCDsetCursor@row,w,c
  4698  0109E8  0D02               	mullw	2
  4699  0109EA  0E0E               	movlw	low LCDsetCursor@row_offsets
  4700  0109EC  24F3               	addwf	prodl,w,c
  4701  0109EE  6ED9               	movwf	fsr2l,c
  4702  0109F0  0E00               	movlw	high LCDsetCursor@row_offsets
  4703  0109F2  20F4               	addwfc	prodh,w,c
  4704  0109F4  6EDA               	movwf	fsr2h,c
  4705  0109F6  50DF               	movf	indf2,w,c
  4706  0109F8  2416               	addwf	LCDsetCursor@col,w,c
  4707  0109FA  0980               	iorlw	128
  4708  0109FC  EC84  F086         	call	_LCDcommandWrite
  4709  010A00  0012               	return		;funcret
  4710  010A02                     __end_of_LCDsetCursor:
  4711                           	opt stack 0
  4712                           tblptru	equ	0xFF8
  4713                           tblptrh	equ	0xFF7
  4714                           tblptrl	equ	0xFF6
  4715                           tablat	equ	0xFF5
  4716                           prodh	equ	0xFF4
  4717                           prodl	equ	0xFF3
  4718                           postinc0	equ	0xFEE
  4719                           wreg	equ	0xFE8
  4720                           postdec1	equ	0xFE5
  4721                           plusw1	equ	0xFE3
  4722                           fsr1l	equ	0xFE1
  4723                           indf2	equ	0xFDF
  4724                           postinc2	equ	0xFDE
  4725                           postdec2	equ	0xFDD
  4726                           plusw2	equ	0xFDB
  4727                           fsr2h	equ	0xFDA
  4728                           fsr2l	equ	0xFD9
  4729                           status	equ	0xFD8
  4730                           
  4731 ;; *************** function _LCDnoAutoscroll *****************
  4732 ;; Defined at:
  4733 ;;		line 354 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;		None
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;		None
  4738 ;; Return value:  Size  Location     Type
  4739 ;;		None               void
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4751 ;;Total ram usage:        0 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    8
  4754 ;; This function calls:
  4755 ;;		_LCDcommandWrite
  4756 ;; This function is called by:
  4757 ;;		_autoIncrement
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text36
  4762  010D5E                     __ptext36:
  4763                           	opt stack 0
  4764  010D5E                     _LCDnoAutoscroll:
  4765                           	opt stack 20
  4766                           
  4767                           ;LCD_I2C_PCF8574.c: 355: _entrymodeset &= ~0x01;
  4768                           
  4769                           ;incstack = 0
  4770  010D5E  9056               	bcf	__entrymodeset,0,c
  4771                           
  4772                           ;LCD_I2C_PCF8574.c: 357: LCDcommandWrite(0x04 | _entrymodeset);
  4773  010D60  5056               	movf	__entrymodeset,w,c
  4774  010D62  0904               	iorlw	4
  4775  010D64  EC84  F086         	call	_LCDcommandWrite
  4776  010D68  0012               	return		;funcret
  4777  010D6A                     __end_of_LCDnoAutoscroll:
  4778                           	opt stack 0
  4779                           tblptru	equ	0xFF8
  4780                           tblptrh	equ	0xFF7
  4781                           tblptrl	equ	0xFF6
  4782                           tablat	equ	0xFF5
  4783                           prodh	equ	0xFF4
  4784                           prodl	equ	0xFF3
  4785                           postinc0	equ	0xFEE
  4786                           wreg	equ	0xFE8
  4787                           postdec1	equ	0xFE5
  4788                           plusw1	equ	0xFE3
  4789                           fsr1l	equ	0xFE1
  4790                           indf2	equ	0xFDF
  4791                           postinc2	equ	0xFDE
  4792                           postdec2	equ	0xFDD
  4793                           plusw2	equ	0xFDB
  4794                           fsr2h	equ	0xFDA
  4795                           fsr2l	equ	0xFD9
  4796                           status	equ	0xFD8
  4797                           
  4798 ;; *************** function _LCDcursorOff *****************
  4799 ;; Defined at:
  4800 ;;		line 298 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;		None
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;		None
  4805 ;; Return value:  Size  Location     Type
  4806 ;;		None               void
  4807 ;; Registers used:
  4808 ;;		wreg, status,2, status,0, cstack
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;Total ram usage:        0 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    8
  4821 ;; This function calls:
  4822 ;;		_LCDcommandWrite
  4823 ;; This function is called by:
  4824 ;;		_autoIncrement
  4825 ;;		_displayLeftRightScroll
  4826 ;;		_displayOnOff
  4827 ;;		_backLightControl
  4828 ;;		_printAt
  4829 ;;		_cursorControl
  4830 ;;		_printLeftAndRight
  4831 ;;		_controlMemoryReading
  4832 ;;		_dataMemoryReading
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text37
  4837  010D6A                     __ptext37:
  4838                           	opt stack 0
  4839  010D6A                     _LCDcursorOff:
  4840                           	opt stack 20
  4841                           
  4842                           ;LCD_I2C_PCF8574.c: 299: _displayfunction &= ~0x02;
  4843                           
  4844                           ;incstack = 0
  4845  010D6A  9255               	bcf	__displayfunction,1,c
  4846                           
  4847                           ;LCD_I2C_PCF8574.c: 300: LCDcommandWrite(0x08 | _displayfunction);
  4848  010D6C  5055               	movf	__displayfunction,w,c
  4849  010D6E  0908               	iorlw	8
  4850  010D70  EC84  F086         	call	_LCDcommandWrite
  4851  010D74  0012               	return		;funcret
  4852  010D76                     __end_of_LCDcursorOff:
  4853                           	opt stack 0
  4854                           tblptru	equ	0xFF8
  4855                           tblptrh	equ	0xFF7
  4856                           tblptrl	equ	0xFF6
  4857                           tablat	equ	0xFF5
  4858                           prodh	equ	0xFF4
  4859                           prodl	equ	0xFF3
  4860                           postinc0	equ	0xFEE
  4861                           wreg	equ	0xFE8
  4862                           postdec1	equ	0xFE5
  4863                           plusw1	equ	0xFE3
  4864                           fsr1l	equ	0xFE1
  4865                           indf2	equ	0xFDF
  4866                           postinc2	equ	0xFDE
  4867                           postdec2	equ	0xFDD
  4868                           plusw2	equ	0xFDB
  4869                           fsr2h	equ	0xFDA
  4870                           fsr2l	equ	0xFD9
  4871                           status	equ	0xFD8
  4872                           
  4873 ;; *************** function _LCDblinkOff *****************
  4874 ;; Defined at:
  4875 ;;		line 309 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;		None
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;		None
  4880 ;; Return value:  Size  Location     Type
  4881 ;;		None               void
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0, cstack
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4893 ;;Total ram usage:        0 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    8
  4896 ;; This function calls:
  4897 ;;		_LCDcommandWrite
  4898 ;; This function is called by:
  4899 ;;		_autoIncrement
  4900 ;;		_displayLeftRightScroll
  4901 ;;		_displayOnOff
  4902 ;;		_cursorControl
  4903 ;;		_printLeftAndRight
  4904 ;;		_controlMemoryReading
  4905 ;;		_dataMemoryReading
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text38
  4910  010D76                     __ptext38:
  4911                           	opt stack 0
  4912  010D76                     _LCDblinkOff:
  4913                           	opt stack 20
  4914                           
  4915                           ;LCD_I2C_PCF8574.c: 310: _displayfunction &= ~0x01;
  4916                           
  4917                           ;incstack = 0
  4918  010D76  9055               	bcf	__displayfunction,0,c
  4919                           
  4920                           ;LCD_I2C_PCF8574.c: 311: LCDcommandWrite(0x08 | _displayfunction);
  4921  010D78  5055               	movf	__displayfunction,w,c
  4922  010D7A  0908               	iorlw	8
  4923  010D7C  EC84  F086         	call	_LCDcommandWrite
  4924  010D80  0012               	return		;funcret
  4925  010D82                     __end_of_LCDblinkOff:
  4926                           	opt stack 0
  4927                           tblptru	equ	0xFF8
  4928                           tblptrh	equ	0xFF7
  4929                           tblptrl	equ	0xFF6
  4930                           tablat	equ	0xFF5
  4931                           prodh	equ	0xFF4
  4932                           prodl	equ	0xFF3
  4933                           postinc0	equ	0xFEE
  4934                           wreg	equ	0xFE8
  4935                           postdec1	equ	0xFE5
  4936                           plusw1	equ	0xFE3
  4937                           fsr1l	equ	0xFE1
  4938                           indf2	equ	0xFDF
  4939                           postinc2	equ	0xFDE
  4940                           postdec2	equ	0xFDD
  4941                           plusw2	equ	0xFDB
  4942                           fsr2h	equ	0xFDA
  4943                           fsr2l	equ	0xFD9
  4944                           status	equ	0xFD8
  4945                           
  4946 ;; *************** function _LCDautoscroll *****************
  4947 ;; Defined at:
  4948 ;;		line 347 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;		None               void
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0, cstack
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;Total ram usage:        0 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    8
  4969 ;; This function calls:
  4970 ;;		_LCDcommandWrite
  4971 ;; This function is called by:
  4972 ;;		_autoIncrement
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text39
  4977  010D82                     __ptext39:
  4978                           	opt stack 0
  4979  010D82                     _LCDautoscroll:
  4980                           	opt stack 20
  4981                           
  4982                           ;LCD_I2C_PCF8574.c: 348: _entrymodeset |= 0x01;
  4983                           
  4984                           ;incstack = 0
  4985  010D82  8056               	bsf	__entrymodeset,0,c
  4986                           
  4987                           ;LCD_I2C_PCF8574.c: 350: LCDcommandWrite(0x04 | _entrymodeset);
  4988  010D84  5056               	movf	__entrymodeset,w,c
  4989  010D86  0904               	iorlw	4
  4990  010D88  EC84  F086         	call	_LCDcommandWrite
  4991  010D8C  0012               	return		;funcret
  4992  010D8E                     __end_of_LCDautoscroll:
  4993                           	opt stack 0
  4994                           tblptru	equ	0xFF8
  4995                           tblptrh	equ	0xFF7
  4996                           tblptrl	equ	0xFF6
  4997                           tablat	equ	0xFF5
  4998                           prodh	equ	0xFF4
  4999                           prodl	equ	0xFF3
  5000                           postinc0	equ	0xFEE
  5001                           wreg	equ	0xFE8
  5002                           postdec1	equ	0xFE5
  5003                           plusw1	equ	0xFE3
  5004                           fsr1l	equ	0xFE1
  5005                           indf2	equ	0xFDF
  5006                           postinc2	equ	0xFDE
  5007                           postdec2	equ	0xFDD
  5008                           plusw2	equ	0xFDB
  5009                           fsr2h	equ	0xFDA
  5010                           fsr2l	equ	0xFD9
  5011                           status	equ	0xFD8
  5012                           
  5013 ;; *************** function _LCD_Write_Char *****************
  5014 ;; Defined at:
  5015 ;;		line 244 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  message         1    wreg     unsigned char 
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;  message         1   12[COMRAM] unsigned char 
  5020 ;; Return value:  Size  Location     Type
  5021 ;;		None               void
  5022 ;; Registers used:
  5023 ;;		wreg, status,2, status,0, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;Total ram usage:        1 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    8
  5036 ;; This function calls:
  5037 ;;		_LCDdataWrite
  5038 ;; This function is called by:
  5039 ;;		_autoIncrement
  5040 ;;		_controlMemoryReading
  5041 ;;		_dataMemoryReading
  5042 ;;		_putHexString
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text40
  5047  010DB0                     __ptext40:
  5048                           	opt stack 0
  5049  010DB0                     _LCD_Write_Char:
  5050                           	opt stack 19
  5051                           
  5052                           ;incstack = 0
  5053                           ;LCD_Write_Char@message stored from wreg
  5054  010DB0  6E0D               	movwf	LCD_Write_Char@message,c
  5055                           
  5056                           ;LCD_I2C_PCF8574.c: 246: LCDdataWrite((unsigned char) message);
  5057  010DB2  500D               	movf	LCD_Write_Char@message,w,c
  5058  010DB4  EC7D  F086         	call	_LCDdataWrite
  5059  010DB8  0012               	return		;funcret
  5060  010DBA                     __end_of_LCD_Write_Char:
  5061                           	opt stack 0
  5062                           tblptru	equ	0xFF8
  5063                           tblptrh	equ	0xFF7
  5064                           tblptrl	equ	0xFF6
  5065                           tablat	equ	0xFF5
  5066                           prodh	equ	0xFF4
  5067                           prodl	equ	0xFF3
  5068                           postinc0	equ	0xFEE
  5069                           wreg	equ	0xFE8
  5070                           postdec1	equ	0xFE5
  5071                           plusw1	equ	0xFE3
  5072                           fsr1l	equ	0xFE1
  5073                           indf2	equ	0xFDF
  5074                           postinc2	equ	0xFDE
  5075                           postdec2	equ	0xFDD
  5076                           plusw2	equ	0xFDB
  5077                           fsr2h	equ	0xFDA
  5078                           fsr2l	equ	0xFD9
  5079                           status	equ	0xFD8
  5080                           
  5081 ;; *************** function _LCDdataWrite *****************
  5082 ;; Defined at:
  5083 ;;		line 392 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  value           1    wreg     unsigned char 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  value           1   11[COMRAM] unsigned char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;		None               void
  5090 ;; Registers used:
  5091 ;;		wreg, status,2, status,0, cstack
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5101 ;;Total ram usage:        1 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    7
  5104 ;; This function calls:
  5105 ;;		_LCDsend
  5106 ;; This function is called by:
  5107 ;;		_LCD_Write_Char
  5108 ;;		_LCD_Write_Str
  5109 ;;		_LCDcreateChar
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text41
  5114  010CFA                     __ptext41:
  5115                           	opt stack 0
  5116  010CFA                     _LCDdataWrite:
  5117                           	opt stack 20
  5118                           
  5119                           ;incstack = 0
  5120                           ;LCDdataWrite@value stored from wreg
  5121  010CFA  6E0C               	movwf	LCDdataWrite@value,c
  5122                           
  5123                           ;LCD_I2C_PCF8574.c: 393: LCDsend(value, 0b00000001);
  5124  010CFC  0E01               	movlw	1
  5125  010CFE  6E08               	movwf	LCDsend@RsMode,c
  5126  010D00  500C               	movf	LCDdataWrite@value,w,c
  5127  010D02  EC87  F085         	call	_LCDsend
  5128  010D06  0012               	return		;funcret
  5129  010D08                     __end_of_LCDdataWrite:
  5130                           	opt stack 0
  5131                           tblptru	equ	0xFF8
  5132                           tblptrh	equ	0xFF7
  5133                           tblptrl	equ	0xFF6
  5134                           tablat	equ	0xFF5
  5135                           prodh	equ	0xFF4
  5136                           prodl	equ	0xFF3
  5137                           postinc0	equ	0xFEE
  5138                           wreg	equ	0xFE8
  5139                           postdec1	equ	0xFE5
  5140                           plusw1	equ	0xFE3
  5141                           fsr1l	equ	0xFE1
  5142                           indf2	equ	0xFDF
  5143                           postinc2	equ	0xFDE
  5144                           postdec2	equ	0xFDD
  5145                           plusw2	equ	0xFDB
  5146                           fsr2h	equ	0xFDA
  5147                           fsr2l	equ	0xFD9
  5148                           status	equ	0xFD8
  5149                           
  5150 ;; *************** function _DelayMilliseconds *****************
  5151 ;; Defined at:
  5152 ;;		line 31 in file "timer_files/DELAY.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  delayTime       2    0[COMRAM] unsigned short 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  x               2    2[COMRAM] unsigned short 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;		None               void
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;Total ram usage:        4 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_autoIncrement
  5176 ;;		_displayLeftRightScroll
  5177 ;;		_displayOnOff
  5178 ;;		_backLightControl
  5179 ;;		_printAt
  5180 ;;		_cursorControl
  5181 ;;		_printLeftAndRight
  5182 ;;		_controlMemoryReading
  5183 ;;		_dataMemoryReading
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text42
  5188  010A34                     __ptext42:
  5189                           	opt stack 0
  5190  010A34                     _DelayMilliseconds:
  5191                           	opt stack 28
  5192                           
  5193                           ;DELAY.c: 33: T1CONbits.TMR1ON = 0;
  5194                           
  5195                           ;incstack = 0
  5196  010A34  90CD               	bcf	4045,0,c	;volatile
  5197                           
  5198                           ;DELAY.c: 34: for (unsigned short x = 0; x < delayTime; x++)
  5199  010A36  0E00               	movlw	0
  5200  010A38  6E04               	movwf	DelayMilliseconds@x+1,c
  5201  010A3A  0E00               	movlw	0
  5202  010A3C  6E03               	movwf	DelayMilliseconds@x,c
  5203  010A3E  D00B               	goto	l2104
  5204  010A40                     l2096:
  5205                           
  5206                           ;DELAY.c: 35: {
  5207                           ;DELAY.c: 36: TMR1 = (unsigned short) (65535 - 1000);
  5208  010A40  0EFC               	movlw	252
  5209  010A42  6ECF               	movwf	4047,c	;volatile
  5210  010A44  0E17               	movlw	23
  5211  010A46  6ECE               	movwf	4046,c	;volatile
  5212                           
  5213                           ;DELAY.c: 37: PIR1bits.TMR1IF = 0;
  5214  010A48  909E               	bcf	3998,0,c	;volatile
  5215                           
  5216                           ;DELAY.c: 38: T1CONbits.TMR1ON = 1;
  5217  010A4A  80CD               	bsf	4045,0,c	;volatile
  5218  010A4C                     l267:
  5219  010A4C  A09E               	btfss	3998,0,c	;volatile
  5220  010A4E  D7FE               	goto	l267
  5221                           
  5222                           ;DELAY.c: 40: T1CONbits.TMR1ON = 0;
  5223  010A50  90CD               	bcf	4045,0,c	;volatile
  5224  010A52  4A03               	infsnz	DelayMilliseconds@x,f,c
  5225  010A54  2A04               	incf	DelayMilliseconds@x+1,f,c
  5226  010A56                     l2104:
  5227  010A56  5001               	movf	DelayMilliseconds@delayTime,w,c
  5228  010A58  5C03               	subwf	DelayMilliseconds@x,w,c
  5229  010A5A  5002               	movf	DelayMilliseconds@delayTime+1,w,c
  5230  010A5C  5804               	subwfb	DelayMilliseconds@x+1,w,c
  5231  010A5E  B0D8               	btfsc	status,0,c
  5232  010A60  0012               	return	
  5233  010A62  D7EE               	goto	l2096
  5234  010A64                     __end_of_DelayMilliseconds:
  5235                           	opt stack 0
  5236                           tblptru	equ	0xFF8
  5237                           tblptrh	equ	0xFF7
  5238                           tblptrl	equ	0xFF6
  5239                           tablat	equ	0xFF5
  5240                           prodh	equ	0xFF4
  5241                           prodl	equ	0xFF3
  5242                           postinc0	equ	0xFEE
  5243                           wreg	equ	0xFE8
  5244                           postdec1	equ	0xFE5
  5245                           plusw1	equ	0xFE3
  5246                           fsr1l	equ	0xFE1
  5247                           indf2	equ	0xFDF
  5248                           postinc2	equ	0xFDE
  5249                           postdec2	equ	0xFDD
  5250                           plusw2	equ	0xFDB
  5251                           fsr2h	equ	0xFDA
  5252                           fsr2l	equ	0xFD9
  5253                           status	equ	0xFD8
  5254                           
  5255 ;; *************** function _SYSTEM_Initialize *****************
  5256 ;; Defined at:
  5257 ;;		line 100 in file "mcc_generated_files/mcc.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;		None
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;		None
  5262 ;; Return value:  Size  Location     Type
  5263 ;;		None               void
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0, cstack
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;Total ram usage:        0 bytes
  5276 ;; Hardware stack levels used:    1
  5277 ;; Hardware stack levels required when called:   10
  5278 ;; This function calls:
  5279 ;;		_DELAY_Init
  5280 ;;		_I2C_Init
  5281 ;;		_LCD_Init
  5282 ;;		_OSCILLATOR_Initialize
  5283 ;;		_PIN_MANAGER_Initialize
  5284 ;; This function is called by:
  5285 ;;		_main
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	text43
  5290  010C36                     __ptext43:
  5291                           	opt stack 0
  5292  010C36                     _SYSTEM_Initialize:
  5293                           	opt stack 20
  5294                           
  5295                           ;mcc.c: 102: OSCILLATOR_Initialize();
  5296                           
  5297                           ;incstack = 0
  5298  010C36  ECF1  F086         	call	_OSCILLATOR_Initialize	;wreg free
  5299                           
  5300                           ;mcc.c: 103: PIN_MANAGER_Initialize();
  5301  010C3A  ECC1  F085         	call	_PIN_MANAGER_Initialize	;wreg free
  5302                           
  5303                           ;mcc.c: 104: I2C_Init();
  5304  010C3E  EC0F  F086         	call	_I2C_Init	;wreg free
  5305                           
  5306                           ;mcc.c: 105: DELAY_Init();
  5307  010C42  EC67  F086         	call	_DELAY_Init	;wreg free
  5308                           
  5309                           ;mcc.c: 106: LCD_Init();
  5310  010C46  ECCF  F082         	call	_LCD_Init	;wreg free
  5311  010C4A  0012               	return		;funcret
  5312  010C4C                     __end_of_SYSTEM_Initialize:
  5313                           	opt stack 0
  5314                           tblptru	equ	0xFF8
  5315                           tblptrh	equ	0xFF7
  5316                           tblptrl	equ	0xFF6
  5317                           tablat	equ	0xFF5
  5318                           prodh	equ	0xFF4
  5319                           prodl	equ	0xFF3
  5320                           postinc0	equ	0xFEE
  5321                           wreg	equ	0xFE8
  5322                           postdec1	equ	0xFE5
  5323                           plusw1	equ	0xFE3
  5324                           fsr1l	equ	0xFE1
  5325                           indf2	equ	0xFDF
  5326                           postinc2	equ	0xFDE
  5327                           postdec2	equ	0xFDD
  5328                           plusw2	equ	0xFDB
  5329                           fsr2h	equ	0xFDA
  5330                           fsr2l	equ	0xFD9
  5331                           status	equ	0xFD8
  5332                           
  5333 ;; *************** function _PIN_MANAGER_Initialize *****************
  5334 ;; Defined at:
  5335 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;		None
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;		None
  5340 ;; Return value:  Size  Location     Type
  5341 ;;		None               void
  5342 ;; Registers used:
  5343 ;;		None
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;Total ram usage:        0 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; This function calls:
  5356 ;;		Nothing
  5357 ;; This function is called by:
  5358 ;;		_SYSTEM_Initialize
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           	psect	text44
  5363  010B82                     __ptext44:
  5364                           	opt stack 0
  5365  010B82                     _PIN_MANAGER_Initialize:
  5366                           	opt stack 29
  5367                           
  5368                           ;pin_manager.c: 54: TRISA1 = 1;
  5369                           
  5370                           ;incstack = 0
  5371  010B82  8292               	bsf	3986,1,c	;volatile
  5372                           
  5373                           ;pin_manager.c: 55: TRISA2 = 1;
  5374  010B84  8492               	bsf	3986,2,c	;volatile
  5375                           
  5376                           ;pin_manager.c: 56: TRISA3 = 1;
  5377  010B86  8692               	bsf	3986,3,c	;volatile
  5378                           
  5379                           ;pin_manager.c: 57: TRISA4 = 1;
  5380  010B88  8892               	bsf	3986,4,c	;volatile
  5381                           
  5382                           ;pin_manager.c: 58: TRISA5 = 1;
  5383  010B8A  8A92               	bsf	3986,5,c	;volatile
  5384                           
  5385                           ;pin_manager.c: 61: ADCON1bits.PCFG0 = 1;
  5386  010B8C  80C1               	bsf	4033,0,c	;volatile
  5387                           
  5388                           ;pin_manager.c: 62: ADCON1bits.PCFG1 = 1;
  5389  010B8E  82C1               	bsf	4033,1,c	;volatile
  5390                           
  5391                           ;pin_manager.c: 63: ADCON1bits.PCFG2 = 1;
  5392  010B90  84C1               	bsf	4033,2,c	;volatile
  5393                           
  5394                           ;pin_manager.c: 64: ADCON1bits.PCFG3 = 1;
  5395  010B92  86C1               	bsf	4033,3,c	;volatile
  5396                           
  5397                           ;pin_manager.c: 67: TRISB0 = 1;
  5398  010B94  8093               	bsf	3987,0,c	;volatile
  5399                           
  5400                           ;pin_manager.c: 68: TRISB1 = 1;
  5401  010B96  8293               	bsf	3987,1,c	;volatile
  5402                           
  5403                           ;pin_manager.c: 69: TRISB2 = 1;
  5404  010B98  8493               	bsf	3987,2,c	;volatile
  5405                           
  5406                           ;pin_manager.c: 70: TRISB4 = 1;
  5407  010B9A  8893               	bsf	3987,4,c	;volatile
  5408                           
  5409                           ;pin_manager.c: 71: TRISB5 = 1;
  5410  010B9C  8A93               	bsf	3987,5,c	;volatile
  5411                           
  5412                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 1;
  5413  010B9E  8EF1               	bsf	intcon2,7,c	;volatile
  5414                           
  5415                           ;pin_manager.c: 76: TRISC1 = 1;
  5416  010BA0  8294               	bsf	3988,1,c	;volatile
  5417                           
  5418                           ;pin_manager.c: 77: TRISC2 = 1;
  5419  010BA2  8494               	bsf	3988,2,c	;volatile
  5420  010BA4  0012               	return		;funcret
  5421  010BA6                     __end_of_PIN_MANAGER_Initialize:
  5422                           	opt stack 0
  5423                           tblptru	equ	0xFF8
  5424                           tblptrh	equ	0xFF7
  5425                           tblptrl	equ	0xFF6
  5426                           tablat	equ	0xFF5
  5427                           prodh	equ	0xFF4
  5428                           prodl	equ	0xFF3
  5429                           intcon2	equ	0xFF1
  5430                           postinc0	equ	0xFEE
  5431                           wreg	equ	0xFE8
  5432                           postdec1	equ	0xFE5
  5433                           plusw1	equ	0xFE3
  5434                           fsr1l	equ	0xFE1
  5435                           indf2	equ	0xFDF
  5436                           postinc2	equ	0xFDE
  5437                           postdec2	equ	0xFDD
  5438                           plusw2	equ	0xFDB
  5439                           fsr2h	equ	0xFDA
  5440                           fsr2l	equ	0xFD9
  5441                           status	equ	0xFD8
  5442                           
  5443 ;; *************** function _OSCILLATOR_Initialize *****************
  5444 ;; Defined at:
  5445 ;;		line 109 in file "mcc_generated_files/mcc.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;		None
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;		None               void
  5452 ;; Registers used:
  5453 ;;		None
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5463 ;;Total ram usage:        0 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; This function calls:
  5466 ;;		Nothing
  5467 ;; This function is called by:
  5468 ;;		_SYSTEM_Initialize
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           	psect	text45
  5473  010DE2                     __ptext45:
  5474                           	opt stack 0
  5475  010DE2                     _OSCILLATOR_Initialize:
  5476                           	opt stack 29
  5477                           
  5478                           ;incstack = 0
  5479  010DE2  0012               	return		;funcret
  5480  010DE4                     __end_of_OSCILLATOR_Initialize:
  5481                           	opt stack 0
  5482                           tblptru	equ	0xFF8
  5483                           tblptrh	equ	0xFF7
  5484                           tblptrl	equ	0xFF6
  5485                           tablat	equ	0xFF5
  5486                           prodh	equ	0xFF4
  5487                           prodl	equ	0xFF3
  5488                           intcon2	equ	0xFF1
  5489                           postinc0	equ	0xFEE
  5490                           wreg	equ	0xFE8
  5491                           postdec1	equ	0xFE5
  5492                           plusw1	equ	0xFE3
  5493                           fsr1l	equ	0xFE1
  5494                           indf2	equ	0xFDF
  5495                           postinc2	equ	0xFDE
  5496                           postdec2	equ	0xFDD
  5497                           plusw2	equ	0xFDB
  5498                           fsr2h	equ	0xFDA
  5499                           fsr2l	equ	0xFD9
  5500                           status	equ	0xFD8
  5501                           
  5502 ;; *************** function _LCD_Init *****************
  5503 ;; Defined at:
  5504 ;;		line 180 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;		None
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;		None
  5509 ;; Return value:  Size  Location     Type
  5510 ;;		None               void
  5511 ;; Registers used:
  5512 ;;		wreg, status,2, status,0, cstack
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5522 ;;Total ram usage:        0 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; Hardware stack levels required when called:    9
  5525 ;; This function calls:
  5526 ;;		_DelayMicroseconds
  5527 ;;		_I2C_Write_Byte_Single_Reg
  5528 ;;		_LCDclear
  5529 ;;		_LCDcommandWrite
  5530 ;;		_LCDdisplayOff
  5531 ;;		_LCDdisplayOn
  5532 ;;		_LCDwrite4bits
  5533 ;; This function is called by:
  5534 ;;		_SYSTEM_Initialize
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text46
  5539  01059E                     __ptext46:
  5540                           	opt stack 0
  5541  01059E                     _LCD_Init:
  5542                           	opt stack 20
  5543                           
  5544                           ;LCD_I2C_PCF8574.c: 182: _backlightval |= 0b00001000;
  5545                           
  5546                           ;incstack = 0
  5547  01059E  8653               	bsf	__backlightval,3,c
  5548                           
  5549                           ;LCD_I2C_PCF8574.c: 183: _numlines = 4;
  5550  0105A0  0E04               	movlw	4
  5551  0105A2  6E59               	movwf	__numlines,c
  5552                           
  5553                           ;LCD_I2C_PCF8574.c: 186: DelayMicroseconds(50000);
  5554  0105A4  0EC3               	movlw	195
  5555  0105A6  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5556  0105A8  0E50               	movlw	80
  5557  0105AA  6E01               	movwf	DelayMicroseconds@delayTime,c
  5558  0105AC  EC5E  F085         	call	_DelayMicroseconds	;wreg free
  5559                           
  5560                           ;LCD_I2C_PCF8574.c: 189: I2C_Write_Byte_Single_Reg((0x27<<1), ((0b00000000 | 0b00000100)
      +                           & ~0b00000001) & (~0b00000010));
  5561  0105B0  0E04               	movlw	4
  5562  0105B2  6E03               	movwf	I2C_Write_Byte_Single_Reg@info,c
  5563  0105B4  0E4E               	movlw	78
  5564  0105B6  ECAE  F085         	call	_I2C_Write_Byte_Single_Reg
  5565                           
  5566                           ;LCD_I2C_PCF8574.c: 190: DelayMicroseconds(100);
  5567  0105BA  0E00               	movlw	0
  5568  0105BC  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5569  0105BE  0E64               	movlw	100
  5570  0105C0  6E01               	movwf	DelayMicroseconds@delayTime,c
  5571  0105C2  EC5E  F085         	call	_DelayMicroseconds	;wreg free
  5572                           
  5573                           ;LCD_I2C_PCF8574.c: 195: LCDwrite4bits(0b00110000);
  5574  0105C6  0E30               	movlw	48
  5575  0105C8  EC3A  F086         	call	_LCDwrite4bits
  5576                           
  5577                           ;LCD_I2C_PCF8574.c: 196: DelayMicroseconds(4500);
  5578  0105CC  0E11               	movlw	17
  5579  0105CE  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5580  0105D0  0E94               	movlw	148
  5581  0105D2  6E01               	movwf	DelayMicroseconds@delayTime,c
  5582  0105D4  EC5E  F085         	call	_DelayMicroseconds	;wreg free
  5583                           
  5584                           ;LCD_I2C_PCF8574.c: 199: LCDwrite4bits(0b00110000);
  5585  0105D8  0E30               	movlw	48
  5586  0105DA  EC3A  F086         	call	_LCDwrite4bits
  5587                           
  5588                           ;LCD_I2C_PCF8574.c: 200: DelayMicroseconds(150);
  5589  0105DE  0E00               	movlw	0
  5590  0105E0  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5591  0105E2  0E96               	movlw	150
  5592  0105E4  6E01               	movwf	DelayMicroseconds@delayTime,c
  5593  0105E6  EC5E  F085         	call	_DelayMicroseconds	;wreg free
  5594                           
  5595                           ;LCD_I2C_PCF8574.c: 203: LCDwrite4bits(0b00110000);
  5596  0105EA  0E30               	movlw	48
  5597  0105EC  EC3A  F086         	call	_LCDwrite4bits
  5598                           
  5599                           ;LCD_I2C_PCF8574.c: 204: DelayMicroseconds(150);
  5600  0105F0  0E00               	movlw	0
  5601  0105F2  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5602  0105F4  0E96               	movlw	150
  5603  0105F6  6E01               	movwf	DelayMicroseconds@delayTime,c
  5604  0105F8  EC5E  F085         	call	_DelayMicroseconds	;wreg free
  5605                           
  5606                           ;LCD_I2C_PCF8574.c: 207: LCDwrite4bits(0b00100000);
  5607  0105FC  0E20               	movlw	32
  5608  0105FE  EC3A  F086         	call	_LCDwrite4bits
  5609                           
  5610                           ;LCD_I2C_PCF8574.c: 208: DelayMicroseconds(150);
  5611  010602  0E00               	movlw	0
  5612  010604  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5613  010606  0E96               	movlw	150
  5614  010608  6E01               	movwf	DelayMicroseconds@delayTime,c
  5615  01060A  EC5E  F085         	call	_DelayMicroseconds	;wreg free
  5616                           
  5617                           ;LCD_I2C_PCF8574.c: 211: _functionset = 0x00 | 0x08 | 0x00;
  5618  01060E  0E08               	movlw	8
  5619  010610  6E57               	movwf	__functionset,c
  5620                           
  5621                           ;LCD_I2C_PCF8574.c: 212: LCDcommandWrite(0x20 | _functionset);
  5622  010612  5057               	movf	__functionset,w,c
  5623  010614  0920               	iorlw	32
  5624  010616  EC84  F086         	call	_LCDcommandWrite
  5625                           
  5626                           ;LCD_I2C_PCF8574.c: 215: _displayfunction = 0x00 | 0x00 | 0x00;
  5627  01061A  0E00               	movlw	0
  5628  01061C  6E55               	movwf	__displayfunction,c
  5629                           
  5630                           ;LCD_I2C_PCF8574.c: 216: LCDdisplayOff();
  5631  01061E  ECCD  F086         	call	_LCDdisplayOff	;wreg free
  5632                           
  5633                           ;LCD_I2C_PCF8574.c: 219: LCDdisplayOn();
  5634  010622  ECC7  F086         	call	_LCDdisplayOn	;wreg free
  5635                           
  5636                           ;LCD_I2C_PCF8574.c: 222: _entrymodeset = 0x02 | 0x00;
  5637  010626  0E02               	movlw	2
  5638  010628  6E56               	movwf	__entrymodeset,c
  5639                           
  5640                           ;LCD_I2C_PCF8574.c: 223: LCDcommandWrite(0x04 | _entrymodeset);
  5641  01062A  5056               	movf	__entrymodeset,w,c
  5642  01062C  0904               	iorlw	4
  5643  01062E  EC84  F086         	call	_LCDcommandWrite
  5644                           
  5645                           ;LCD_I2C_PCF8574.c: 227: LCDcommandWrite(0x08 | _displayfunction);
  5646  010632  5055               	movf	__displayfunction,w,c
  5647  010634  0908               	iorlw	8
  5648  010636  EC84  F086         	call	_LCDcommandWrite
  5649                           
  5650                           ;LCD_I2C_PCF8574.c: 230: _displaycontrol = 0x08 | 0x00;
  5651  01063A  0E08               	movlw	8
  5652  01063C  6E54               	movwf	__displaycontrol,c
  5653                           
  5654                           ;LCD_I2C_PCF8574.c: 231: LCDcommandWrite(0x10 | _displaycontrol);
  5655  01063E  5054               	movf	__displaycontrol,w,c
  5656  010640  0910               	iorlw	16
  5657  010642  EC84  F086         	call	_LCDcommandWrite
  5658                           
  5659                           ;LCD_I2C_PCF8574.c: 234: LCDclear();
  5660  010646  EC30  F086         	call	_LCDclear	;wreg free
  5661  01064A  0012               	return		;funcret
  5662  01064C                     __end_of_LCD_Init:
  5663                           	opt stack 0
  5664                           tblptru	equ	0xFF8
  5665                           tblptrh	equ	0xFF7
  5666                           tblptrl	equ	0xFF6
  5667                           tablat	equ	0xFF5
  5668                           prodh	equ	0xFF4
  5669                           prodl	equ	0xFF3
  5670                           intcon2	equ	0xFF1
  5671                           postinc0	equ	0xFEE
  5672                           wreg	equ	0xFE8
  5673                           postdec1	equ	0xFE5
  5674                           plusw1	equ	0xFE3
  5675                           fsr1l	equ	0xFE1
  5676                           indf2	equ	0xFDF
  5677                           postinc2	equ	0xFDE
  5678                           postdec2	equ	0xFDD
  5679                           plusw2	equ	0xFDB
  5680                           fsr2h	equ	0xFDA
  5681                           fsr2l	equ	0xFD9
  5682                           status	equ	0xFD8
  5683                           
  5684 ;; *************** function _LCDdisplayOn *****************
  5685 ;; Defined at:
  5686 ;;		line 292 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;		None
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;		None
  5691 ;; Return value:  Size  Location     Type
  5692 ;;		None               void
  5693 ;; Registers used:
  5694 ;;		wreg, status,2, status,0, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;Total ram usage:        0 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:    8
  5707 ;; This function calls:
  5708 ;;		_LCDcommandWrite
  5709 ;; This function is called by:
  5710 ;;		_LCD_Init
  5711 ;;		_displayOnOff
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text47
  5716  010D8E                     __ptext47:
  5717                           	opt stack 0
  5718  010D8E                     _LCDdisplayOn:
  5719                           	opt stack 20
  5720                           
  5721                           ;LCD_I2C_PCF8574.c: 293: _displayfunction |= 0x04;
  5722                           
  5723                           ;incstack = 0
  5724  010D8E  8455               	bsf	__displayfunction,2,c
  5725                           
  5726                           ;LCD_I2C_PCF8574.c: 294: LCDcommandWrite(0x08 | _displayfunction);
  5727  010D90  5055               	movf	__displayfunction,w,c
  5728  010D92  0908               	iorlw	8
  5729  010D94  EC84  F086         	call	_LCDcommandWrite
  5730  010D98  0012               	return		;funcret
  5731  010D9A                     __end_of_LCDdisplayOn:
  5732                           	opt stack 0
  5733                           tblptru	equ	0xFF8
  5734                           tblptrh	equ	0xFF7
  5735                           tblptrl	equ	0xFF6
  5736                           tablat	equ	0xFF5
  5737                           prodh	equ	0xFF4
  5738                           prodl	equ	0xFF3
  5739                           intcon2	equ	0xFF1
  5740                           postinc0	equ	0xFEE
  5741                           wreg	equ	0xFE8
  5742                           postdec1	equ	0xFE5
  5743                           plusw1	equ	0xFE3
  5744                           fsr1l	equ	0xFE1
  5745                           indf2	equ	0xFDF
  5746                           postinc2	equ	0xFDE
  5747                           postdec2	equ	0xFDD
  5748                           plusw2	equ	0xFDB
  5749                           fsr2h	equ	0xFDA
  5750                           fsr2l	equ	0xFD9
  5751                           status	equ	0xFD8
  5752                           
  5753 ;; *************** function _LCDdisplayOff *****************
  5754 ;; Defined at:
  5755 ;;		line 287 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;		None
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;		None               void
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0, cstack
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;Total ram usage:        0 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    8
  5776 ;; This function calls:
  5777 ;;		_LCDcommandWrite
  5778 ;; This function is called by:
  5779 ;;		_LCD_Init
  5780 ;;		_displayOnOff
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text48
  5785  010D9A                     __ptext48:
  5786                           	opt stack 0
  5787  010D9A                     _LCDdisplayOff:
  5788                           	opt stack 20
  5789                           
  5790                           ;LCD_I2C_PCF8574.c: 288: _displayfunction &= ~0x04;
  5791                           
  5792                           ;incstack = 0
  5793  010D9A  9455               	bcf	__displayfunction,2,c
  5794                           
  5795                           ;LCD_I2C_PCF8574.c: 289: LCDcommandWrite(0x08 | _displayfunction);
  5796  010D9C  5055               	movf	__displayfunction,w,c
  5797  010D9E  0908               	iorlw	8
  5798  010DA0  EC84  F086         	call	_LCDcommandWrite
  5799  010DA4  0012               	return		;funcret
  5800  010DA6                     __end_of_LCDdisplayOff:
  5801                           	opt stack 0
  5802                           tblptru	equ	0xFF8
  5803                           tblptrh	equ	0xFF7
  5804                           tblptrl	equ	0xFF6
  5805                           tablat	equ	0xFF5
  5806                           prodh	equ	0xFF4
  5807                           prodl	equ	0xFF3
  5808                           intcon2	equ	0xFF1
  5809                           postinc0	equ	0xFEE
  5810                           wreg	equ	0xFE8
  5811                           postdec1	equ	0xFE5
  5812                           plusw1	equ	0xFE3
  5813                           fsr1l	equ	0xFE1
  5814                           indf2	equ	0xFDF
  5815                           postinc2	equ	0xFDE
  5816                           postdec2	equ	0xFDD
  5817                           plusw2	equ	0xFDB
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function _LCDclear *****************
  5823 ;; Defined at:
  5824 ;;		line 258 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    8
  5845 ;; This function calls:
  5846 ;;		_DelayMicroseconds
  5847 ;;		_LCDcommandWrite
  5848 ;; This function is called by:
  5849 ;;		_LCD_Init
  5850 ;;		_autoIncrement
  5851 ;;		_displayLeftRightScroll
  5852 ;;		_displayOnOff
  5853 ;;		_backLightControl
  5854 ;;		_printAt
  5855 ;;		_cursorControl
  5856 ;;		_printLeftAndRight
  5857 ;;		_controlMemoryReading
  5858 ;;		_dataMemoryReading
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text49
  5863  010C60                     __ptext49:
  5864                           	opt stack 0
  5865  010C60                     _LCDclear:
  5866                           	opt stack 20
  5867                           
  5868                           ;LCD_I2C_PCF8574.c: 259: LCDcommandWrite(0x01);
  5869                           
  5870                           ;incstack = 0
  5871  010C60  0E01               	movlw	1
  5872  010C62  EC84  F086         	call	_LCDcommandWrite
  5873                           
  5874                           ;LCD_I2C_PCF8574.c: 263: DelayMicroseconds(30000);
  5875  010C66  0E75               	movlw	117
  5876  010C68  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  5877  010C6A  0E30               	movlw	48
  5878  010C6C  6E01               	movwf	DelayMicroseconds@delayTime,c
  5879  010C6E  EC5E  F085         	call	_DelayMicroseconds	;wreg free
  5880  010C72  0012               	return		;funcret
  5881  010C74                     __end_of_LCDclear:
  5882                           	opt stack 0
  5883                           tblptru	equ	0xFF8
  5884                           tblptrh	equ	0xFF7
  5885                           tblptrl	equ	0xFF6
  5886                           tablat	equ	0xFF5
  5887                           prodh	equ	0xFF4
  5888                           prodl	equ	0xFF3
  5889                           intcon2	equ	0xFF1
  5890                           postinc0	equ	0xFEE
  5891                           wreg	equ	0xFE8
  5892                           postdec1	equ	0xFE5
  5893                           plusw1	equ	0xFE3
  5894                           fsr1l	equ	0xFE1
  5895                           indf2	equ	0xFDF
  5896                           postinc2	equ	0xFDE
  5897                           postdec2	equ	0xFDD
  5898                           plusw2	equ	0xFDB
  5899                           fsr2h	equ	0xFDA
  5900                           fsr2l	equ	0xFD9
  5901                           status	equ	0xFD8
  5902                           
  5903 ;; *************** function _LCDcommandWrite *****************
  5904 ;; Defined at:
  5905 ;;		line 384 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  value           1    wreg     unsigned char 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  value           1   11[COMRAM] unsigned char 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;		None               void
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5923 ;;Total ram usage:        1 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    7
  5926 ;; This function calls:
  5927 ;;		_LCDsend
  5928 ;; This function is called by:
  5929 ;;		_LCD_Init
  5930 ;;		_LCDclear
  5931 ;;		_LCDhome
  5932 ;;		_LCDsetCursor
  5933 ;;		_LCDdisplayOff
  5934 ;;		_LCDdisplayOn
  5935 ;;		_LCDcursorOff
  5936 ;;		_LCDcursorOn
  5937 ;;		_LCDblinkOff
  5938 ;;		_LCDblinkOn
  5939 ;;		_LCDscrollDisplayLeft
  5940 ;;		_LCDscrollDisplayRight
  5941 ;;		_LCDleftToRight
  5942 ;;		_LCDrightToLeft
  5943 ;;		_LCDautoscroll
  5944 ;;		_LCDnoAutoscroll
  5945 ;;		_LCDcreateChar
  5946 ;;		_LCDreadDDRam
  5947 ;;		_LCDreadCGRam
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text50
  5952  010D08                     __ptext50:
  5953                           	opt stack 0
  5954  010D08                     _LCDcommandWrite:
  5955                           	opt stack 20
  5956                           
  5957                           ;incstack = 0
  5958                           ;LCDcommandWrite@value stored from wreg
  5959  010D08  6E0C               	movwf	LCDcommandWrite@value,c
  5960                           
  5961                           ;LCD_I2C_PCF8574.c: 385: LCDsend(value, 0b00000001 & ~0b00000001);
  5962  010D0A  0E00               	movlw	0
  5963  010D0C  6E08               	movwf	LCDsend@RsMode,c
  5964  010D0E  500C               	movf	LCDcommandWrite@value,w,c
  5965  010D10  EC87  F085         	call	_LCDsend
  5966  010D14  0012               	return		;funcret
  5967  010D16                     __end_of_LCDcommandWrite:
  5968                           	opt stack 0
  5969                           tblptru	equ	0xFF8
  5970                           tblptrh	equ	0xFF7
  5971                           tblptrl	equ	0xFF6
  5972                           tablat	equ	0xFF5
  5973                           prodh	equ	0xFF4
  5974                           prodl	equ	0xFF3
  5975                           intcon2	equ	0xFF1
  5976                           postinc0	equ	0xFEE
  5977                           wreg	equ	0xFE8
  5978                           postdec1	equ	0xFE5
  5979                           plusw1	equ	0xFE3
  5980                           fsr1l	equ	0xFE1
  5981                           indf2	equ	0xFDF
  5982                           postinc2	equ	0xFDE
  5983                           postdec2	equ	0xFDD
  5984                           plusw2	equ	0xFDB
  5985                           fsr2h	equ	0xFDA
  5986                           fsr2l	equ	0xFD9
  5987                           status	equ	0xFD8
  5988                           
  5989 ;; *************** function _LCDsend *****************
  5990 ;; Defined at:
  5991 ;;		line 425 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  value           1    wreg     unsigned char 
  5994 ;;  RsMode          1    7[COMRAM] unsigned char 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  value           1   10[COMRAM] unsigned char 
  5997 ;;  lownib          1    9[COMRAM] unsigned char 
  5998 ;;  highnib         1    8[COMRAM] unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;		None               void
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6008 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;Total ram usage:        4 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    6
  6015 ;; This function calls:
  6016 ;;		_LCDwrite4bits
  6017 ;; This function is called by:
  6018 ;;		_LCDcommandWrite
  6019 ;;		_LCDdataWrite
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text51
  6024  010B0E                     __ptext51:
  6025                           	opt stack 0
  6026  010B0E                     _LCDsend:
  6027                           	opt stack 20
  6028                           
  6029                           ;incstack = 0
  6030                           ;LCDsend@value stored from wreg
  6031  010B0E  6E0B               	movwf	LCDsend@value,c
  6032                           
  6033                           ;LCD_I2C_PCF8574.c: 426: unsigned char highnib = value & 0xF0;
  6034  010B10  500B               	movf	LCDsend@value,w,c
  6035  010B12  0BF0               	andlw	240
  6036  010B14  6E09               	movwf	LCDsend@highnib,c
  6037                           
  6038                           ;LCD_I2C_PCF8574.c: 428: unsigned char lownib = value << 4;
  6039  010B16  380B               	swapf	LCDsend@value,w,c
  6040  010B18  0BF0               	andlw	240
  6041  010B1A  6E0A               	movwf	LCDsend@lownib,c
  6042                           
  6043                           ;LCD_I2C_PCF8574.c: 429: lownib &= 0xF0;
  6044  010B1C  0EF0               	movlw	240
  6045  010B1E  160A               	andwf	LCDsend@lownib,f,c
  6046                           
  6047                           ;LCD_I2C_PCF8574.c: 431: LCDwrite4bits((highnib) | 0b00000100 | RsMode);
  6048  010B20  5009               	movf	LCDsend@highnib,w,c
  6049  010B22  1008               	iorwf	LCDsend@RsMode,w,c
  6050  010B24  0904               	iorlw	4
  6051  010B26  EC3A  F086         	call	_LCDwrite4bits
  6052                           
  6053                           ;LCD_I2C_PCF8574.c: 432: LCDwrite4bits((lownib ) | 0b00000100 | RsMode);
  6054  010B2A  500A               	movf	LCDsend@lownib,w,c
  6055  010B2C  1008               	iorwf	LCDsend@RsMode,w,c
  6056  010B2E  0904               	iorlw	4
  6057  010B30  EC3A  F086         	call	_LCDwrite4bits
  6058  010B34  0012               	return		;funcret
  6059  010B36                     __end_of_LCDsend:
  6060                           	opt stack 0
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           prodh	equ	0xFF4
  6066                           prodl	equ	0xFF3
  6067                           intcon2	equ	0xFF1
  6068                           postinc0	equ	0xFEE
  6069                           wreg	equ	0xFE8
  6070                           postdec1	equ	0xFE5
  6071                           plusw1	equ	0xFE3
  6072                           fsr1l	equ	0xFE1
  6073                           indf2	equ	0xFDF
  6074                           postinc2	equ	0xFDE
  6075                           postdec2	equ	0xFDD
  6076                           plusw2	equ	0xFDB
  6077                           fsr2h	equ	0xFDA
  6078                           fsr2l	equ	0xFD9
  6079                           status	equ	0xFD8
  6080                           
  6081 ;; *************** function _LCDwrite4bits *****************
  6082 ;; Defined at:
  6083 ;;		line 451 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  nibEnRsMode     1    wreg     unsigned char 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  nibEnRsMode     1    6[COMRAM] unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;		None               void
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, status,0, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6101 ;;Total ram usage:        1 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    5
  6104 ;; This function calls:
  6105 ;;		_LCDpulseEnableNeg
  6106 ;;		_LCDwritePCF8574
  6107 ;; This function is called by:
  6108 ;;		_LCD_Init
  6109 ;;		_LCDsend
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text52
  6114  010C74                     __ptext52:
  6115                           	opt stack 0
  6116  010C74                     _LCDwrite4bits:
  6117                           	opt stack 20
  6118                           
  6119                           ;incstack = 0
  6120                           ;LCDwrite4bits@nibEnRsMode stored from wreg
  6121  010C74  6E07               	movwf	LCDwrite4bits@nibEnRsMode,c
  6122                           
  6123                           ;LCD_I2C_PCF8574.c: 452: LCDwritePCF8574(nibEnRsMode & ~0b00000010);
  6124  010C76  5007               	movf	LCDwrite4bits@nibEnRsMode,w,c
  6125  010C78  0BFD               	andlw	253
  6126  010C7A  EC5F  F086         	call	_LCDwritePCF8574
  6127                           
  6128                           ;LCD_I2C_PCF8574.c: 453: LCDpulseEnableNeg(nibEnRsMode & ~0b00000010);
  6129  010C7E  5007               	movf	LCDwrite4bits@nibEnRsMode,w,c
  6130  010C80  0BFD               	andlw	253
  6131  010C82  EC48  F085         	call	_LCDpulseEnableNeg
  6132  010C86  0012               	return		;funcret
  6133  010C88                     __end_of_LCDwrite4bits:
  6134                           	opt stack 0
  6135                           tblptru	equ	0xFF8
  6136                           tblptrh	equ	0xFF7
  6137                           tblptrl	equ	0xFF6
  6138                           tablat	equ	0xFF5
  6139                           prodh	equ	0xFF4
  6140                           prodl	equ	0xFF3
  6141                           intcon2	equ	0xFF1
  6142                           postinc0	equ	0xFEE
  6143                           wreg	equ	0xFE8
  6144                           postdec1	equ	0xFE5
  6145                           plusw1	equ	0xFE3
  6146                           fsr1l	equ	0xFE1
  6147                           indf2	equ	0xFDF
  6148                           postinc2	equ	0xFDE
  6149                           postdec2	equ	0xFDD
  6150                           plusw2	equ	0xFDB
  6151                           fsr2h	equ	0xFDA
  6152                           fsr2l	equ	0xFD9
  6153                           status	equ	0xFD8
  6154                           
  6155 ;; *************** function _LCDpulseEnableNeg *****************
  6156 ;; Defined at:
  6157 ;;		line 465 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  _data           1    wreg     unsigned char 
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;  _data           1    5[COMRAM] unsigned char 
  6162 ;; Return value:  Size  Location     Type
  6163 ;;		None               void
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0, cstack
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6175 ;;Total ram usage:        1 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; Hardware stack levels required when called:    4
  6178 ;; This function calls:
  6179 ;;		_DelayMicroseconds
  6180 ;;		_LCDwritePCF8574
  6181 ;; This function is called by:
  6182 ;;		_LCDwrite4bits
  6183 ;;		_LCDread4bits
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           	psect	text53
  6188  010A90                     __ptext53:
  6189                           	opt stack 0
  6190  010A90                     _LCDpulseEnableNeg:
  6191                           	opt stack 20
  6192                           
  6193                           ;incstack = 0
  6194                           ;LCDpulseEnableNeg@_data stored from wreg
  6195  010A90  6E06               	movwf	LCDpulseEnableNeg@_data,c
  6196                           
  6197                           ;LCD_I2C_PCF8574.c: 466: LCDwritePCF8574(_data | 0b00000100);
  6198  010A92  5006               	movf	LCDpulseEnableNeg@_data,w,c
  6199  010A94  0904               	iorlw	4
  6200  010A96  EC5F  F086         	call	_LCDwritePCF8574
  6201                           
  6202                           ;LCD_I2C_PCF8574.c: 467: DelayMicroseconds(1);
  6203  010A9A  0E00               	movlw	0
  6204  010A9C  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  6205  010A9E  0E01               	movlw	1
  6206  010AA0  6E01               	movwf	DelayMicroseconds@delayTime,c
  6207  010AA2  EC5E  F085         	call	_DelayMicroseconds	;wreg free
  6208                           
  6209                           ;LCD_I2C_PCF8574.c: 469: LCDwritePCF8574(_data & ~0b00000100);
  6210  010AA6  5006               	movf	LCDpulseEnableNeg@_data,w,c
  6211  010AA8  0BFB               	andlw	251
  6212  010AAA  EC5F  F086         	call	_LCDwritePCF8574
  6213                           
  6214                           ;LCD_I2C_PCF8574.c: 470: DelayMicroseconds(50);
  6215  010AAE  0E00               	movlw	0
  6216  010AB0  6E02               	movwf	DelayMicroseconds@delayTime+1,c
  6217  010AB2  0E32               	movlw	50
  6218  010AB4  6E01               	movwf	DelayMicroseconds@delayTime,c
  6219  010AB6  EC5E  F085         	call	_DelayMicroseconds	;wreg free
  6220  010ABA  0012               	return		;funcret
  6221  010ABC                     __end_of_LCDpulseEnableNeg:
  6222                           	opt stack 0
  6223                           tblptru	equ	0xFF8
  6224                           tblptrh	equ	0xFF7
  6225                           tblptrl	equ	0xFF6
  6226                           tablat	equ	0xFF5
  6227                           prodh	equ	0xFF4
  6228                           prodl	equ	0xFF3
  6229                           intcon2	equ	0xFF1
  6230                           postinc0	equ	0xFEE
  6231                           wreg	equ	0xFE8
  6232                           postdec1	equ	0xFE5
  6233                           plusw1	equ	0xFE3
  6234                           fsr1l	equ	0xFE1
  6235                           indf2	equ	0xFDF
  6236                           postinc2	equ	0xFDE
  6237                           postdec2	equ	0xFDD
  6238                           plusw2	equ	0xFDB
  6239                           fsr2h	equ	0xFDA
  6240                           fsr2l	equ	0xFD9
  6241                           status	equ	0xFD8
  6242                           
  6243 ;; *************** function _LCDwritePCF8574 *****************
  6244 ;; Defined at:
  6245 ;;		line 482 in file "lcd_i2c_pcf8574_files/LCD_I2C_PCF8574.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  value           1    wreg     unsigned char 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  value           1    4[COMRAM] unsigned char 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;		None               void
  6252 ;; Registers used:
  6253 ;;		wreg, status,2, status,0, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;Total ram usage:        1 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:    3
  6266 ;; This function calls:
  6267 ;;		_I2C_Write_Byte_Single_Reg
  6268 ;; This function is called by:
  6269 ;;		_LCDnoBacklight
  6270 ;;		_LCDbacklight
  6271 ;;		_LCDreceive
  6272 ;;		_LCDwrite4bits
  6273 ;;		_LCDpulseEnableNeg
  6274 ;;		_LCDpulseEnablePos
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text54
  6279  010CBE                     __ptext54:
  6280                           	opt stack 0
  6281  010CBE                     _LCDwritePCF8574:
  6282                           	opt stack 21
  6283                           
  6284                           ;incstack = 0
  6285                           ;LCDwritePCF8574@value stored from wreg
  6286  010CBE  6E05               	movwf	LCDwritePCF8574@value,c
  6287                           
  6288                           ;LCD_I2C_PCF8574.c: 483: I2C_Write_Byte_Single_Reg((0x27<<1), value | _backlightval);
  6289  010CC0  5005               	movf	LCDwritePCF8574@value,w,c
  6290  010CC2  1053               	iorwf	__backlightval,w,c
  6291  010CC4  6E03               	movwf	I2C_Write_Byte_Single_Reg@info,c
  6292  010CC6  0E4E               	movlw	78
  6293  010CC8  ECAE  F085         	call	_I2C_Write_Byte_Single_Reg
  6294  010CCC  0012               	return		;funcret
  6295  010CCE                     __end_of_LCDwritePCF8574:
  6296                           	opt stack 0
  6297                           tblptru	equ	0xFF8
  6298                           tblptrh	equ	0xFF7
  6299                           tblptrl	equ	0xFF6
  6300                           tablat	equ	0xFF5
  6301                           prodh	equ	0xFF4
  6302                           prodl	equ	0xFF3
  6303                           intcon2	equ	0xFF1
  6304                           postinc0	equ	0xFEE
  6305                           wreg	equ	0xFE8
  6306                           postdec1	equ	0xFE5
  6307                           plusw1	equ	0xFE3
  6308                           fsr1l	equ	0xFE1
  6309                           indf2	equ	0xFDF
  6310                           postinc2	equ	0xFDE
  6311                           postdec2	equ	0xFDD
  6312                           plusw2	equ	0xFDB
  6313                           fsr2h	equ	0xFDA
  6314                           fsr2l	equ	0xFD9
  6315                           status	equ	0xFD8
  6316                           
  6317 ;; *************** function _I2C_Write_Byte_Single_Reg *****************
  6318 ;; Defined at:
  6319 ;;		line 29 in file "i2c_utils_files/I2C_UTILS.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  device          1    wreg     unsigned char 
  6322 ;;  info            1    2[COMRAM] unsigned char 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  device          1    3[COMRAM] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;		None               void
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6334 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;Total ram usage:        2 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    2
  6341 ;; This function calls:
  6342 ;;		_IdleI2C
  6343 ;;		_WriteI2C
  6344 ;; This function is called by:
  6345 ;;		_LCD_Init
  6346 ;;		_LCDwritePCF8574
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text55
  6351  010B5C                     __ptext55:
  6352                           	opt stack 0
  6353  010B5C                     _I2C_Write_Byte_Single_Reg:
  6354                           	opt stack 21
  6355                           
  6356                           ;incstack = 0
  6357                           ;I2C_Write_Byte_Single_Reg@device stored from wreg
  6358  010B5C  6E04               	movwf	I2C_Write_Byte_Single_Reg@device,c
  6359                           
  6360                           ;I2C_UTILS.c: 31: IdleI2C();
  6361  010B5E  EC56  F086         	call	_IdleI2C	;wreg free
  6362                           
  6363                           ;I2C_UTILS.c: 32: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  6364  010B62  80C5               	bsf	4037,0,c	;volatile
  6365  010B64                     l22:
  6366  010B64  B0C5               	btfsc	4037,0,c	;volatile
  6367  010B66  D7FE               	goto	l22
  6368                           
  6369                           ;I2C_UTILS.c: 33: WriteI2C(device & 0b11111110);
  6370  010B68  5004               	movf	I2C_Write_Byte_Single_Reg@device,w,c
  6371  010B6A  0BFE               	andlw	254
  6372  010B6C  EC7D  F084         	call	_WriteI2C
  6373                           
  6374                           ;I2C_UTILS.c: 34: IdleI2C();
  6375  010B70  EC56  F086         	call	_IdleI2C	;wreg free
  6376                           
  6377                           ;I2C_UTILS.c: 35: WriteI2C(info);
  6378  010B74  5003               	movf	I2C_Write_Byte_Single_Reg@info,w,c
  6379  010B76  EC7D  F084         	call	_WriteI2C
  6380                           
  6381                           ;I2C_UTILS.c: 36: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  6382  010B7A  84C5               	bsf	4037,2,c	;volatile
  6383  010B7C                     l25:
  6384  010B7C  A4C5               	btfss	4037,2,c	;volatile
  6385  010B7E  0012               	return	
  6386  010B80  D7FD               	goto	l25
  6387  010B82                     __end_of_I2C_Write_Byte_Single_Reg:
  6388                           	opt stack 0
  6389                           tblptru	equ	0xFF8
  6390                           tblptrh	equ	0xFF7
  6391                           tblptrl	equ	0xFF6
  6392                           tablat	equ	0xFF5
  6393                           prodh	equ	0xFF4
  6394                           prodl	equ	0xFF3
  6395                           intcon2	equ	0xFF1
  6396                           postinc0	equ	0xFEE
  6397                           wreg	equ	0xFE8
  6398                           postdec1	equ	0xFE5
  6399                           plusw1	equ	0xFE3
  6400                           fsr1l	equ	0xFE1
  6401                           indf2	equ	0xFDF
  6402                           postinc2	equ	0xFDE
  6403                           postdec2	equ	0xFDD
  6404                           plusw2	equ	0xFDB
  6405                           fsr2h	equ	0xFDA
  6406                           fsr2l	equ	0xFD9
  6407                           status	equ	0xFD8
  6408                           
  6409 ;; *************** function _WriteI2C *****************
  6410 ;; Defined at:
  6411 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c_writ.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  data_out        1    wreg     unsigned char 
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;  data_out        1    1[COMRAM] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      char 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0, cstack
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;Total ram usage:        1 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:    1
  6432 ;; This function calls:
  6433 ;;		_IdleI2C
  6434 ;; This function is called by:
  6435 ;;		_I2C_Write_Byte_Single_Reg
  6436 ;;		_I2C_Read_Byte_Single_Reg
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text56
  6441  0108FA                     __ptext56:
  6442                           	opt stack 0
  6443  0108FA                     _WriteI2C:
  6444                           	opt stack 21
  6445                           
  6446                           ;incstack = 0
  6447                           ;WriteI2C@data_out stored from wreg
  6448  0108FA  6E02               	movwf	WriteI2C@data_out,c
  6449  0108FC  C002  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  6450  010900  BEC6               	btfsc	4038,7,c	;volatile
  6451  010902  0012               	return	
  6452                           
  6453                           ;	Return value of _WriteI2C is never used
  6454  010904  50C6               	movf	4038,w,c	;volatile
  6455  010906  0B0F               	andlw	15
  6456  010908  0A08               	xorlw	8
  6457  01090A  B4D8               	btfsc	status,2,c
  6458  01090C  D00C               	goto	l1878
  6459  01090E  50C6               	movf	4038,w,c	;volatile
  6460  010910  0B0F               	andlw	15
  6461  010912  0A0B               	xorlw	11
  6462  010914  B4D8               	btfsc	status,2,c
  6463  010916  D007               	goto	l1878
  6464  010918  88C6               	bsf	4038,4,c	;volatile
  6465  01091A                     l495:
  6466  01091A  A69E               	btfss	3998,3,c	;volatile
  6467  01091C  D7FE               	goto	l495
  6468  01091E  B4C7               	btfsc	4039,2,c	;volatile
  6469  010920  0012               	return	
  6470  010922  50C7               	movf	4039,w,c	;volatile
  6471                           
  6472                           ;	Return value of _WriteI2C is never used
  6473                           
  6474                           ;	Return value of _WriteI2C is never used
  6475  010924  0012               	return	
  6476  010926                     l1878:
  6477  010926  50C6               	movf	4038,w,c	;volatile
  6478  010928  0B0F               	andlw	15
  6479  01092A  0A08               	xorlw	8
  6480  01092C  B4D8               	btfsc	status,2,c
  6481  01092E  D005               	goto	l504
  6482  010930  50C6               	movf	4038,w,c	;volatile
  6483  010932  0B0F               	andlw	15
  6484  010934  0A0B               	xorlw	11
  6485  010936  A4D8               	btfss	status,2,c
  6486  010938  0012               	return	
  6487  01093A                     l504:
  6488  01093A  B0C7               	btfsc	4039,0,c	;volatile
  6489  01093C  D7FE               	goto	l504
  6490  01093E  EC56  F086         	call	_IdleI2C	;wreg free
  6491  010942  50C5               	movf	4037,w,c	;volatile
  6492                           
  6493                           ;	Return value of _WriteI2C is never used
  6494                           
  6495                           ;	Return value of _WriteI2C is never used
  6496  010944  0012               	return	
  6497  010946                     __end_of_WriteI2C:
  6498                           	opt stack 0
  6499                           tblptru	equ	0xFF8
  6500                           tblptrh	equ	0xFF7
  6501                           tblptrl	equ	0xFF6
  6502                           tablat	equ	0xFF5
  6503                           prodh	equ	0xFF4
  6504                           prodl	equ	0xFF3
  6505                           intcon2	equ	0xFF1
  6506                           postinc0	equ	0xFEE
  6507                           wreg	equ	0xFE8
  6508                           postdec1	equ	0xFE5
  6509                           plusw1	equ	0xFE3
  6510                           fsr1l	equ	0xFE1
  6511                           indf2	equ	0xFDF
  6512                           postinc2	equ	0xFDE
  6513                           postdec2	equ	0xFDD
  6514                           plusw2	equ	0xFDB
  6515                           fsr2h	equ	0xFDA
  6516                           fsr2l	equ	0xFD9
  6517                           status	equ	0xFD8
  6518                           
  6519 ;; *************** function _IdleI2C *****************
  6520 ;; Defined at:
  6521 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c_idle.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;		None
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;		None
  6526 ;; Return value:  Size  Location     Type
  6527 ;;		None               void
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6537 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6539 ;;Total ram usage:        1 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_I2C_Write_Byte_Single_Reg
  6545 ;;		_I2C_Read_Byte_Single_Reg
  6546 ;;		_WriteI2C
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550                           	psect	text57
  6551  010CAC                     __ptext57:
  6552                           	opt stack 0
  6553  010CAC                     _IdleI2C:
  6554                           	opt stack 21
  6555  010CAC                     l1854:
  6556  010CAC  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  6557  010CB0  0E1F               	movlw	31
  6558  010CB2  1601               	andwf	??_IdleI2C,f,c
  6559  010CB4  A4D8               	btfss	status,2,c
  6560  010CB6  D7FA               	goto	l1854
  6561  010CB8  A4C7               	btfss	4039,2,c	;volatile
  6562  010CBA  0012               	return	
  6563  010CBC  D7F7               	goto	l1854
  6564  010CBE                     __end_of_IdleI2C:
  6565                           	opt stack 0
  6566                           tblptru	equ	0xFF8
  6567                           tblptrh	equ	0xFF7
  6568                           tblptrl	equ	0xFF6
  6569                           tablat	equ	0xFF5
  6570                           prodh	equ	0xFF4
  6571                           prodl	equ	0xFF3
  6572                           intcon2	equ	0xFF1
  6573                           postinc0	equ	0xFEE
  6574                           wreg	equ	0xFE8
  6575                           postdec1	equ	0xFE5
  6576                           plusw1	equ	0xFE3
  6577                           fsr1l	equ	0xFE1
  6578                           indf2	equ	0xFDF
  6579                           postinc2	equ	0xFDE
  6580                           postdec2	equ	0xFDD
  6581                           plusw2	equ	0xFDB
  6582                           fsr2h	equ	0xFDA
  6583                           fsr2l	equ	0xFD9
  6584                           status	equ	0xFD8
  6585                           
  6586 ;; *************** function _DelayMicroseconds *****************
  6587 ;; Defined at:
  6588 ;;		line 20 in file "timer_files/DELAY.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;  delayTime       2    0[COMRAM] unsigned short 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;		None               void
  6595 ;; Registers used:
  6596 ;;		wreg, status,2, status,0
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6605 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6606 ;;Total ram usage:        4 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; This function calls:
  6609 ;;		Nothing
  6610 ;; This function is called by:
  6611 ;;		_LCD_Init
  6612 ;;		_LCDclear
  6613 ;;		_LCDhome
  6614 ;;		_LCDpulseEnableNeg
  6615 ;;		_LCDpulseEnablePos
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           	psect	text58
  6620  010ABC                     __ptext58:
  6621                           	opt stack 0
  6622  010ABC                     _DelayMicroseconds:
  6623                           	opt stack 23
  6624                           
  6625                           ;DELAY.c: 22: T1CONbits.TMR1ON = 0;
  6626                           
  6627                           ;incstack = 0
  6628  010ABC  90CD               	bcf	4045,0,c	;volatile
  6629                           
  6630                           ;DELAY.c: 23: TMR1 = (unsigned short) (65535 - delayTime);
  6631  010ABE  C001  F003         	movff	DelayMicroseconds@delayTime,??_DelayMicroseconds
  6632  010AC2  C002  F004         	movff	DelayMicroseconds@delayTime+1,??_DelayMicroseconds+1
  6633  010AC6  1E03               	comf	??_DelayMicroseconds,f,c
  6634  010AC8  1E04               	comf	??_DelayMicroseconds+1,f,c
  6635  010ACA  4A03               	infsnz	??_DelayMicroseconds,f,c
  6636  010ACC  2A04               	incf	??_DelayMicroseconds+1,f,c
  6637  010ACE  0EFF               	movlw	255
  6638  010AD0  2403               	addwf	??_DelayMicroseconds,w,c
  6639  010AD2  6ECE               	movwf	4046,c	;volatile
  6640  010AD4  0EFF               	movlw	255
  6641  010AD6  2004               	addwfc	??_DelayMicroseconds+1,w,c
  6642  010AD8  6ECF               	movwf	4047,c	;volatile
  6643                           
  6644                           ;DELAY.c: 24: PIR1bits.TMR1IF = 0;
  6645  010ADA  909E               	bcf	3998,0,c	;volatile
  6646                           
  6647                           ;DELAY.c: 25: T1CONbits.TMR1ON = 1;
  6648  010ADC  80CD               	bsf	4045,0,c	;volatile
  6649  010ADE                     l259:
  6650  010ADE  A09E               	btfss	3998,0,c	;volatile
  6651  010AE0  D7FE               	goto	l259
  6652                           
  6653                           ;DELAY.c: 27: T1CONbits.TMR1ON = 0;
  6654  010AE2  90CD               	bcf	4045,0,c	;volatile
  6655  010AE4  0012               	return		;funcret
  6656  010AE6                     __end_of_DelayMicroseconds:
  6657                           	opt stack 0
  6658                           tblptru	equ	0xFF8
  6659                           tblptrh	equ	0xFF7
  6660                           tblptrl	equ	0xFF6
  6661                           tablat	equ	0xFF5
  6662                           prodh	equ	0xFF4
  6663                           prodl	equ	0xFF3
  6664                           intcon2	equ	0xFF1
  6665                           postinc0	equ	0xFEE
  6666                           wreg	equ	0xFE8
  6667                           postdec1	equ	0xFE5
  6668                           plusw1	equ	0xFE3
  6669                           fsr1l	equ	0xFE1
  6670                           indf2	equ	0xFDF
  6671                           postinc2	equ	0xFDE
  6672                           postdec2	equ	0xFDD
  6673                           plusw2	equ	0xFDB
  6674                           fsr2h	equ	0xFDA
  6675                           fsr2l	equ	0xFD9
  6676                           status	equ	0xFD8
  6677                           
  6678 ;; *************** function _I2C_Init *****************
  6679 ;; Defined at:
  6680 ;;		line 16 in file "i2c_utils_files/I2C_UTILS.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;		None
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;		None
  6685 ;; Return value:  Size  Location     Type
  6686 ;;		None               void
  6687 ;; Registers used:
  6688 ;;		wreg, status,2, status,0, cstack
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6698 ;;Total ram usage:        0 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:    1
  6701 ;; This function calls:
  6702 ;;		_OpenI2C
  6703 ;; This function is called by:
  6704 ;;		_SYSTEM_Initialize
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           	psect	text59
  6709  010C1E                     __ptext59:
  6710                           	opt stack 0
  6711  010C1E                     _I2C_Init:
  6712                           	opt stack 28
  6713                           
  6714                           ;I2C_UTILS.c: 18: TRISCbits.RC4 = 1;
  6715                           
  6716                           ;incstack = 0
  6717  010C1E  8894               	bsf	3988,4,c	;volatile
  6718                           
  6719                           ;I2C_UTILS.c: 19: TRISCbits.RC3 = 1;
  6720  010C20  8694               	bsf	3988,3,c	;volatile
  6721                           
  6722                           ;I2C_UTILS.c: 20: PORTCbits.SCL = 0;
  6723  010C22  9682               	bcf	3970,3,c	;volatile
  6724                           
  6725                           ;I2C_UTILS.c: 21: PORTCbits.SDA = 0;
  6726  010C24  9882               	bcf	3970,4,c	;volatile
  6727                           
  6728                           ;I2C_UTILS.c: 23: OpenI2C(0b00001000, 0b10000000);
  6729  010C26  0E80               	movlw	128
  6730  010C28  6E01               	movwf	OpenI2C@slew,c
  6731  010C2A  0E08               	movlw	8
  6732  010C2C  ECE4  F085         	call	_OpenI2C
  6733                           
  6734                           ;I2C_UTILS.c: 24: SSPADD=0x09;
  6735  010C30  0E09               	movlw	9
  6736  010C32  6EC8               	movwf	4040,c	;volatile
  6737  010C34  0012               	return		;funcret
  6738  010C36                     __end_of_I2C_Init:
  6739                           	opt stack 0
  6740                           tblptru	equ	0xFF8
  6741                           tblptrh	equ	0xFF7
  6742                           tblptrl	equ	0xFF6
  6743                           tablat	equ	0xFF5
  6744                           prodh	equ	0xFF4
  6745                           prodl	equ	0xFF3
  6746                           intcon2	equ	0xFF1
  6747                           postinc0	equ	0xFEE
  6748                           wreg	equ	0xFE8
  6749                           postdec1	equ	0xFE5
  6750                           plusw1	equ	0xFE3
  6751                           fsr1l	equ	0xFE1
  6752                           indf2	equ	0xFDF
  6753                           postinc2	equ	0xFDE
  6754                           postdec2	equ	0xFDD
  6755                           plusw2	equ	0xFDB
  6756                           fsr2h	equ	0xFDA
  6757                           fsr2l	equ	0xFD9
  6758                           status	equ	0xFD8
  6759                           
  6760 ;; *************** function _OpenI2C *****************
  6761 ;; Defined at:
  6762 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\i2c\i2c_open.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;  sync_mode       1    wreg     unsigned char 
  6765 ;;  slew            1    0[COMRAM] unsigned char 
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;  sync_mode       1    1[COMRAM] unsigned char 
  6768 ;; Return value:  Size  Location     Type
  6769 ;;		None               void
  6770 ;; Registers used:
  6771 ;;		wreg, status,2, status,0
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6777 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;Total ram usage:        2 bytes
  6782 ;; Hardware stack levels used:    1
  6783 ;; This function calls:
  6784 ;;		Nothing
  6785 ;; This function is called by:
  6786 ;;		_I2C_Init
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text60
  6791  010BC8                     __ptext60:
  6792                           	opt stack 0
  6793  010BC8                     _OpenI2C:
  6794                           	opt stack 28
  6795                           
  6796                           ;incstack = 0
  6797                           ;OpenI2C@sync_mode stored from wreg
  6798  010BC8  6E02               	movwf	OpenI2C@sync_mode,c
  6799  010BCA  0E3F               	movlw	63
  6800  010BCC  16C7               	andwf	4039,f,c	;volatile
  6801  010BCE  0E00               	movlw	0
  6802  010BD0  6EC6               	movwf	4038,c	;volatile
  6803  010BD2  0E00               	movlw	0
  6804  010BD4  6EC5               	movwf	4037,c	;volatile
  6805  010BD6  5002               	movf	OpenI2C@sync_mode,w,c
  6806  010BD8  12C6               	iorwf	4038,f,c	;volatile
  6807  010BDA  5001               	movf	OpenI2C@slew,w,c
  6808  010BDC  12C7               	iorwf	4039,f,c	;volatile
  6809  010BDE  8694               	bsf	3988,3,c	;volatile
  6810  010BE0  8894               	bsf	3988,4,c	;volatile
  6811  010BE2  8AC6               	bsf	4038,5,c	;volatile
  6812  010BE4  0012               	return		;funcret
  6813  010BE6                     __end_of_OpenI2C:
  6814                           	opt stack 0
  6815                           tblptru	equ	0xFF8
  6816                           tblptrh	equ	0xFF7
  6817                           tblptrl	equ	0xFF6
  6818                           tablat	equ	0xFF5
  6819                           prodh	equ	0xFF4
  6820                           prodl	equ	0xFF3
  6821                           intcon2	equ	0xFF1
  6822                           postinc0	equ	0xFEE
  6823                           wreg	equ	0xFE8
  6824                           postdec1	equ	0xFE5
  6825                           plusw1	equ	0xFE3
  6826                           fsr1l	equ	0xFE1
  6827                           indf2	equ	0xFDF
  6828                           postinc2	equ	0xFDE
  6829                           postdec2	equ	0xFDD
  6830                           plusw2	equ	0xFDB
  6831                           fsr2h	equ	0xFDA
  6832                           fsr2l	equ	0xFD9
  6833                           status	equ	0xFD8
  6834                           
  6835 ;; *************** function _DELAY_Init *****************
  6836 ;; Defined at:
  6837 ;;		line 6 in file "timer_files/DELAY.c"
  6838 ;; Parameters:    Size  Location     Type
  6839 ;;		None
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;		None
  6842 ;; Return value:  Size  Location     Type
  6843 ;;		None               void
  6844 ;; Registers used:
  6845 ;;		None
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6855 ;;Total ram usage:        0 bytes
  6856 ;; Hardware stack levels used:    1
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_SYSTEM_Initialize
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text61
  6865  010CCE                     __ptext61:
  6866                           	opt stack 0
  6867  010CCE                     _DELAY_Init:
  6868                           	opt stack 29
  6869                           
  6870                           ;DELAY.c: 8: T1CONbits.RD16 = 1;
  6871                           
  6872                           ;incstack = 0
  6873  010CCE  8ECD               	bsf	4045,7,c	;volatile
  6874                           
  6875                           ;DELAY.c: 9: T1CONbits.T1RUN = 0;
  6876  010CD0  9CCD               	bcf	4045,6,c	;volatile
  6877                           
  6878                           ;DELAY.c: 10: T1CONbits.T1CKPS1 = 0;
  6879  010CD2  9ACD               	bcf	4045,5,c	;volatile
  6880                           
  6881                           ;DELAY.c: 11: T1CONbits.T1CKPS0 = 0;
  6882  010CD4  98CD               	bcf	4045,4,c	;volatile
  6883                           
  6884                           ;DELAY.c: 12: T1CONbits.T1OSCEN = 0;
  6885  010CD6  96CD               	bcf	4045,3,c	;volatile
  6886                           
  6887                           ;DELAY.c: 14: T1CONbits.TMR1CS = 0;
  6888  010CD8  92CD               	bcf	4045,1,c	;volatile
  6889                           
  6890                           ;DELAY.c: 15: T1CONbits.TMR1ON = 0;
  6891  010CDA  90CD               	bcf	4045,0,c	;volatile
  6892  010CDC  0012               	return		;funcret
  6893  010CDE                     __end_of_DELAY_Init:
  6894                           	opt stack 0
  6895                           tblptru	equ	0xFF8
  6896                           tblptrh	equ	0xFF7
  6897                           tblptrl	equ	0xFF6
  6898                           tablat	equ	0xFF5
  6899                           prodh	equ	0xFF4
  6900                           prodl	equ	0xFF3
  6901                           intcon2	equ	0xFF1
  6902                           postinc0	equ	0xFEE
  6903                           wreg	equ	0xFE8
  6904                           postdec1	equ	0xFE5
  6905                           plusw1	equ	0xFE3
  6906                           fsr1l	equ	0xFE1
  6907                           indf2	equ	0xFDF
  6908                           postinc2	equ	0xFDE
  6909                           postdec2	equ	0xFDD
  6910                           plusw2	equ	0xFDB
  6911                           fsr2h	equ	0xFDA
  6912                           fsr2l	equ	0xFD9
  6913                           status	equ	0xFD8
  6914                           tblptru	equ	0xFF8
  6915                           tblptrh	equ	0xFF7
  6916                           tblptrl	equ	0xFF6
  6917                           tablat	equ	0xFF5
  6918                           prodh	equ	0xFF4
  6919                           prodl	equ	0xFF3
  6920                           intcon2	equ	0xFF1
  6921                           postinc0	equ	0xFEE
  6922                           wreg	equ	0xFE8
  6923                           postdec1	equ	0xFE5
  6924                           plusw1	equ	0xFE3
  6925                           fsr1l	equ	0xFE1
  6926                           indf2	equ	0xFDF
  6927                           postinc2	equ	0xFDE
  6928                           postdec2	equ	0xFDD
  6929                           plusw2	equ	0xFDB
  6930                           fsr2h	equ	0xFDA
  6931                           fsr2l	equ	0xFD9
  6932                           status	equ	0xFD8
  6933                           
  6934                           	psect	rparam
  6935  0000                     tblptru	equ	0xFF8
  6936                           tblptrh	equ	0xFF7
  6937                           tblptrl	equ	0xFF6
  6938                           tablat	equ	0xFF5
  6939                           prodh	equ	0xFF4
  6940                           prodl	equ	0xFF3
  6941                           intcon2	equ	0xFF1
  6942                           postinc0	equ	0xFEE
  6943                           wreg	equ	0xFE8
  6944                           postdec1	equ	0xFE5
  6945                           plusw1	equ	0xFE3
  6946                           fsr1l	equ	0xFE1
  6947                           indf2	equ	0xFDF
  6948                           postinc2	equ	0xFDE
  6949                           postdec2	equ	0xFDD
  6950                           plusw2	equ	0xFDB
  6951                           fsr2h	equ	0xFDA
  6952                           fsr2l	equ	0xFD9
  6953                           status	equ	0xFD8


Data Sizes:
    Strings     339
    Constant    0
    Data        130
    BSS         6
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      89
    BANK0           160      0      97
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    autoIncrement@p	PTR unsigned char  size(2) Largest target is 14
		 -> autoIncrement@NoAutoscroll(COMRAM[14]), autoIncrement@Autoscroll(COMRAM[11]), 

    charmap	PTR unsigned char [8] size(2) Largest target is 8
		 -> retarrow(BANK0[8]), cross(BANK0[8]), check(BANK0[8]), duck(BANK0[8]), 
		 -> heart(BANK0[8]), clock(BANK0[8]), note(BANK0[8]), bell(COMRAM[8]), 

    LCDcreateChar@charmap	PTR unsigned char  size(2) Largest target is 8
		 -> retarrow(BANK0[8]), cross(BANK0[8]), check(BANK0[8]), duck(BANK0[8]), 
		 -> heart(BANK0[8]), clock(BANK0[8]), note(BANK0[8]), bell(COMRAM[8]), 

    LCD_Write_Str@message	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_37(CODE[3]), STR_36(CODE[19]), STR_35(CODE[3]), STR_34(CODE[5]), 
		 -> STR_33(CODE[3]), STR_32(CODE[13]), STR_31(CODE[3]), STR_30(CODE[16]), 
		 -> STR_29(CODE[21]), STR_28(CODE[20]), STR_27(CODE[21]), STR_26(CODE[20]), 
		 -> STR_25(CODE[20]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[9]), 
		 -> STR_21(CODE[10]), STR_20(CODE[11]), STR_19(CODE[9]), STR_18(CODE[6]), 
		 -> STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[6]), STR_14(CODE[14]), 
		 -> STR_13(CODE[14]), STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[14]), 
		 -> STR_9(CODE[13]), STR_8(CODE[12]), STR_7(CODE[12]), STR_6(CODE[12]), 
		 -> STR_5(CODE[12]), STR_4(CODE[6]), STR_3(CODE[13]), STR_2(CODE[6]), 
		 -> STR_1(CODE[13]), 

    LCD_Write_Str@message_ptr	PTR unsigned char  size(2) Largest target is 21
		 -> STR_37(CODE[3]), STR_36(CODE[19]), STR_35(CODE[3]), STR_34(CODE[5]), 
		 -> STR_33(CODE[3]), STR_32(CODE[13]), STR_31(CODE[3]), STR_30(CODE[16]), 
		 -> STR_29(CODE[21]), STR_28(CODE[20]), STR_27(CODE[21]), STR_26(CODE[20]), 
		 -> STR_25(CODE[20]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[9]), 
		 -> STR_21(CODE[10]), STR_20(CODE[11]), STR_19(CODE[9]), STR_18(CODE[6]), 
		 -> STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[6]), STR_14(CODE[14]), 
		 -> STR_13(CODE[14]), STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[14]), 
		 -> STR_9(CODE[13]), STR_8(CODE[12]), STR_7(CODE[12]), STR_6(CODE[12]), 
		 -> STR_5(CODE[12]), STR_4(CODE[6]), STR_3(CODE[13]), STR_2(CODE[6]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _exerciseDisplay->_autoIncrement
    _printLeftAndRight->_LCDsetCursor
    _LCDrightToLeft->_LCDcommandWrite
    _LCDleftToRight->_LCDcommandWrite
    _printAt->_LCDsetCursor
    _displayOnOff->_LCDsetCursor
    _displayLeftRightScroll->_LCDsetCursor
    _LCDscrollDisplayRight->_LCDcommandWrite
    _LCDscrollDisplayLeft->_LCDcommandWrite
    _dataMemoryReading->_putHexString
    _putHexString->_LCDsetCursor
    _LCDreadDDRam->_LCDcommandWrite
    _LCDreadCGRam->_LCDcommandWrite
    _LCDdataRead->_LCDreceive
    _LCDcreateChar->_LCDcommandWrite
    _LCDcreateChar->_LCDdataWrite
    _cursorControl->_LCD_Write_Str
    _LCDhome->_LCDcommandWrite
    _controlMemoryReading->_LCDsetCursor
    _LCDcursorOn->_LCDcommandWrite
    _LCDblinkOn->_LCDcommandWrite
    _LCDcommandRead->_LCDreceive
    _LCDreceive->_LCDread4bits
    _LCDread4bits->_LCDpulseEnableNeg
    _LCDread4bits->_LCDpulseEnablePos
    _LCDpulseEnablePos->_LCDwritePCF8574
    _backLightControl->_LCDsetCursor
    _LCDnoBacklight->_LCDwritePCF8574
    _LCDbacklight->_LCDwritePCF8574
    _LCDreadPCF8574->_I2C_Read_Byte_Single_Reg
    _I2C_Read_Byte_Single_Reg->_WriteI2C
    _LCD_Write_Str->_LCDdataWrite
    _autoIncrement->_LCDsetCursor
    _LCDsetCursor->_LCDcommandWrite
    _LCDnoAutoscroll->_LCDcommandWrite
    _LCDcursorOff->_LCDcommandWrite
    _LCDblinkOff->_LCDcommandWrite
    _LCDautoscroll->_LCDcommandWrite
    _LCD_Write_Char->_LCDdataWrite
    _LCDdataWrite->_LCDsend
    _LCD_Init->_LCDcommandWrite
    _LCDdisplayOn->_LCDcommandWrite
    _LCDdisplayOff->_LCDcommandWrite
    _LCDclear->_LCDcommandWrite
    _LCDcommandWrite->_LCDsend
    _LCDsend->_LCDwrite4bits
    _LCDwrite4bits->_LCDpulseEnableNeg
    _LCDpulseEnableNeg->_LCDwritePCF8574
    _LCDwritePCF8574->_I2C_Write_Byte_Single_Reg
    _I2C_Write_Byte_Single_Reg->_WriteI2C
    _WriteI2C->_IdleI2C
    _I2C_Init->_OpenI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  193835
                  _SYSTEM_Initialize
                    _exerciseDisplay
 ---------------------------------------------------------------------------------
 (1) _exerciseDisplay                                      0     0      0  184263
                      _autoIncrement
                   _backLightControl
               _controlMemoryReading
                      _cursorControl
                  _dataMemoryReading
             _displayLeftRightScroll
                       _displayOnOff
                            _printAt
                  _printLeftAndRight
 ---------------------------------------------------------------------------------
 (2) _printLeftAndRight                                    0     0      0   18304
                  _DelayMilliseconds
                      _LCD_Write_Str
                        _LCDblinkOff
                           _LCDclear
                       _LCDcursorOff
                     _LCDleftToRight
                     _LCDrightToLeft
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (3) _LCDrightToLeft                                       0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDleftToRight                                       0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (2) _printAt                                              0     0      0   13519
                  _DelayMilliseconds
                      _LCD_Write_Str
                           _LCDclear
                       _LCDcursorOff
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (2) _displayOnOff                                         1     1      0   20757
                                             22 COMRAM     1     1      0
                  _DelayMilliseconds
                      _LCD_Write_Str
                        _LCDblinkOff
                           _LCDclear
                       _LCDcursorOff
                      _LCDdisplayOff
                       _LCDdisplayOn
                            _LCDhome
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (2) _displayLeftRightScroll                               2     2      0   18396
                                             22 COMRAM     2     2      0
                  _DelayMilliseconds
                      _LCD_Write_Str
                        _LCDblinkOff
                           _LCDclear
                       _LCDcursorOff
               _LCDscrollDisplayLeft
              _LCDscrollDisplayRight
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (3) _LCDscrollDisplayRight                                0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDscrollDisplayLeft                                 0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (2) _dataMemoryReading                                    7     7      0   41215
                                             27 COMRAM     7     7      0
                  _DelayMilliseconds
                     _LCD_Write_Char
                      _LCD_Write_Str
                        _LCDblinkOff
                           _LCDclear
                      _LCDcreateChar
                       _LCDcursorOff
                            _LCDhome
                       _LCDreadCGRam
                       _LCDreadDDRam
                       _LCDsetCursor
                       _putHexString
 ---------------------------------------------------------------------------------
 (3) _putHexString                                         5     3      2    9942
                                             22 COMRAM     5     3      2
                     _LCD_Write_Char
                      _LCD_Write_Str
                       _LCDreadCGRam (ARG)
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (3) _LCDreadDDRam                                         1     1      0    4202
                                             12 COMRAM     1     1      0
                    _LCDcommandWrite
                        _LCDdataRead
 ---------------------------------------------------------------------------------
 (3) _LCDreadCGRam                                         1     1      0    4202
                                             12 COMRAM     1     1      0
                    _LCDcommandWrite
                        _LCDdataRead
 ---------------------------------------------------------------------------------
 (4) _LCDdataRead                                          0     0      0    2585
                         _LCDreceive
 ---------------------------------------------------------------------------------
 (3) _LCDcreateChar                                        5     3      2    3367
                                             12 COMRAM     5     3      2
                    _LCDcommandWrite
                       _LCDdataWrite
 ---------------------------------------------------------------------------------
 (2) _cursorControl                                        0     0      0   16699
                  _DelayMilliseconds
                      _LCD_Write_Str
                        _LCDblinkOff
                         _LCDblinkOn
                           _LCDclear
                       _LCDcursorOff
                        _LCDcursorOn
                            _LCDhome
 ---------------------------------------------------------------------------------
 (3) _LCDhome                                              0     0      0    2385
                  _DelayMicroseconds
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (2) _controlMemoryReading                                 3     3      0   25182
                                             22 COMRAM     3     3      0
                  _DelayMilliseconds
                     _LCD_Write_Char
                      _LCD_Write_Str
                  _LCDaddressCounter
                        _LCDblinkOff
                         _LCDblinkOn
                            _LCDbusy
                           _LCDclear
                       _LCDcursorOff
                        _LCDcursorOn
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (3) _LCDcursorOn                                          0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDbusy                                              0     0      0    2585
                     _LCDcommandRead
 ---------------------------------------------------------------------------------
 (3) _LCDblinkOn                                           0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDaddressCounter                                    0     0      0    2585
                     _LCDcommandRead
 ---------------------------------------------------------------------------------
 (4) _LCDcommandRead                                       0     0      0    2585
                         _LCDreceive
 ---------------------------------------------------------------------------------
 (5) _LCDreceive                                           4     4      0    2585
                                              8 COMRAM     4     4      0
                       _LCDread4bits
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (6) _LCDread4bits                                         2     2      0    2235
                                              6 COMRAM     2     2      0
                  _LCDpulseEnableNeg
                  _LCDpulseEnablePos
                     _LCDreadPCF8574
 ---------------------------------------------------------------------------------
 (7) _LCDpulseEnablePos                                    1     1      0    1050
                                              5 COMRAM     1     1      0
                  _DelayMicroseconds
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (2) _backLightControl                                     1     1      0   14155
                                             22 COMRAM     1     1      0
                  _DelayMilliseconds
                      _LCD_Write_Str
                       _LCDbacklight
                           _LCDclear
                       _LCDcursorOff
                     _LCDnoBacklight
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (3) _LCDnoBacklight                                       0     0      0     284
                     _LCDreadPCF8574
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (3) _LCDbacklight                                         0     0      0     284
                     _LCDreadPCF8574
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (7) _LCDreadPCF8574                                       0     0      0      68
           _I2C_Read_Byte_Single_Reg
 ---------------------------------------------------------------------------------
 (8) _I2C_Read_Byte_Single_Reg                             2     2      0      68
                                              2 COMRAM     2     2      0
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (9) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Str                                        4     2      2    4031
                                             12 COMRAM     4     2      2
                       _LCDdataWrite
 ---------------------------------------------------------------------------------
 (2) _autoIncrement                                       27    27      0   16036
                                             22 COMRAM    27    27      0
                  _DelayMilliseconds
                     _LCD_Write_Char
                      _LCDautoscroll
                        _LCDblinkOff
                           _LCDclear
                       _LCDcursorOff
                    _LCDnoAutoscroll
                       _LCDsetCursor
 ---------------------------------------------------------------------------------
 (3) _LCDsetCursor                                        10     9      1    3990
                                             12 COMRAM    10     9      1
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDnoAutoscroll                                      0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDcursorOff                                         0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDblinkOff                                          0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDautoscroll                                        0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       1     1      0    1617
                                             12 COMRAM     1     1      0
                       _LCDdataWrite
 ---------------------------------------------------------------------------------
 (4) _LCDdataWrite                                         1     1      0    1595
                                             11 COMRAM     1     1      0
                            _LCDsend
 ---------------------------------------------------------------------------------
 (3) _DelayMilliseconds                                    4     2      2    1518
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    9572
                         _DELAY_Init
                           _I2C_Init
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    9464
                  _DelayMicroseconds
          _I2C_Write_Byte_Single_Reg
                           _LCDclear
                    _LCDcommandWrite
                      _LCDdisplayOff
                       _LCDdisplayOn
                      _LCDwrite4bits
 ---------------------------------------------------------------------------------
 (3) _LCDdisplayOn                                         0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDdisplayOff                                        0     0      0    1595
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (3) _LCDclear                                             0     0      0    2385
                  _DelayMicroseconds
                    _LCDcommandWrite
 ---------------------------------------------------------------------------------
 (4) _LCDcommandWrite                                      1     1      0    1595
                                             11 COMRAM     1     1      0
                            _LCDsend
 ---------------------------------------------------------------------------------
 (5) _LCDsend                                              4     3      1    1573
                                              7 COMRAM     4     3      1
                      _LCDwrite4bits
 ---------------------------------------------------------------------------------
 (6) _LCDwrite4bits                                        1     1      0    1310
                                              6 COMRAM     1     1      0
                  _LCDpulseEnableNeg
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (7) _LCDpulseEnableNeg                                    1     1      0    1050
                                              5 COMRAM     1     1      0
                  _DelayMicroseconds
                    _LCDwritePCF8574
 ---------------------------------------------------------------------------------
 (7) _LCDwritePCF8574                                      1     1      0     216
                                              4 COMRAM     1     1      0
          _I2C_Write_Byte_Single_Reg
 ---------------------------------------------------------------------------------
 (8) _I2C_Write_Byte_Single_Reg                            2     1      1     194
                                              2 COMRAM     2     1      1
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (9) _WriteI2C                                             1     1      0      22
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (10) _IdleI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _DelayMicroseconds                                    4     2      2     790
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0     108
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (3) _OpenI2C                                              2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _DELAY_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _DELAY_Init
     _I2C_Init
       _OpenI2C
     _LCD_Init
       _DelayMicroseconds
       _I2C_Write_Byte_Single_Reg
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcommandWrite
         _LCDsend
           _LCDwrite4bits
             _LCDpulseEnableNeg
               _DelayMicroseconds
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _IdleI2C
                 _WriteI2C
                   _IdleI2C
       _LCDdisplayOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDdisplayOn
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDwrite4bits
         _LCDpulseEnableNeg
           _DelayMicroseconds
           _LCDwritePCF8574
             _I2C_Write_Byte_Single_Reg
               _IdleI2C
               _WriteI2C
                 _IdleI2C
         _LCDwritePCF8574
           _I2C_Write_Byte_Single_Reg
             _IdleI2C
             _WriteI2C
               _IdleI2C
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _exerciseDisplay
     _autoIncrement
       _DelayMilliseconds
       _LCD_Write_Char
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDautoscroll
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDnoAutoscroll
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _backLightControl
       _DelayMilliseconds
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDbacklight
         _LCDreadPCF8574
           _I2C_Read_Byte_Single_Reg
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         _LCDwritePCF8574
           _I2C_Write_Byte_Single_Reg
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDnoBacklight
         _LCDreadPCF8574
           _I2C_Read_Byte_Single_Reg
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         _LCDwritePCF8574
           _I2C_Write_Byte_Single_Reg
             _IdleI2C
             _WriteI2C
               _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _controlMemoryReading
       _DelayMilliseconds
       _LCD_Write_Char
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDaddressCounter
         _LCDcommandRead
           _LCDreceive
             _LCDread4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDpulseEnablePos
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDreadPCF8574
                 _I2C_Read_Byte_Single_Reg
                   _IdleI2C
                   _ReadI2C
                   _WriteI2C
                     _IdleI2C
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _IdleI2C
                 _WriteI2C
                   _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOn
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDbusy
         _LCDcommandRead
           _LCDreceive
             _LCDread4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDpulseEnablePos
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDreadPCF8574
                 _I2C_Read_Byte_Single_Reg
                   _IdleI2C
                   _ReadI2C
                   _WriteI2C
                     _IdleI2C
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _IdleI2C
                 _WriteI2C
                   _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOn
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _cursorControl
       _DelayMilliseconds
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOn
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOn
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDhome
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _dataMemoryReading
       _DelayMilliseconds
       _LCD_Write_Char
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcreateChar
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDhome
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDreadCGRam
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
         _LCDdataRead
           _LCDreceive
             _LCDread4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDpulseEnablePos
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDreadPCF8574
                 _I2C_Read_Byte_Single_Reg
                   _IdleI2C
                   _ReadI2C
                   _WriteI2C
                     _IdleI2C
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _IdleI2C
                 _WriteI2C
                   _IdleI2C
       _LCDreadDDRam
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
         _LCDdataRead
           _LCDreceive
             _LCDread4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDpulseEnablePos
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDreadPCF8574
                 _I2C_Read_Byte_Single_Reg
                   _IdleI2C
                   _ReadI2C
                   _WriteI2C
                     _IdleI2C
             _LCDwritePCF8574
               _I2C_Write_Byte_Single_Reg
                 _IdleI2C
                 _WriteI2C
                   _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _putHexString
         _LCD_Write_Char
           _LCDdataWrite
             _LCDsend
               _LCDwrite4bits
                 _LCDpulseEnableNeg
                   _DelayMicroseconds
                   _LCDwritePCF8574
                     _I2C_Write_Byte_Single_Reg
                       _IdleI2C
                       _WriteI2C
                         _IdleI2C
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
         _LCD_Write_Str
           _LCDdataWrite
             _LCDsend
               _LCDwrite4bits
                 _LCDpulseEnableNeg
                   _DelayMicroseconds
                   _LCDwritePCF8574
                     _I2C_Write_Byte_Single_Reg
                       _IdleI2C
                       _WriteI2C
                         _IdleI2C
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
         _LCDreadCGRam (ARG)
           _LCDcommandWrite
             _LCDsend
               _LCDwrite4bits
                 _LCDpulseEnableNeg
                   _DelayMicroseconds
                   _LCDwritePCF8574
                     _I2C_Write_Byte_Single_Reg
                       _IdleI2C
                       _WriteI2C
                         _IdleI2C
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
           _LCDdataRead
             _LCDreceive
               _LCDread4bits
                 _LCDpulseEnableNeg
                   _DelayMicroseconds
                   _LCDwritePCF8574
                     _I2C_Write_Byte_Single_Reg
                       _IdleI2C
                       _WriteI2C
                         _IdleI2C
                 _LCDpulseEnablePos
                   _DelayMicroseconds
                   _LCDwritePCF8574
                     _I2C_Write_Byte_Single_Reg
                       _IdleI2C
                       _WriteI2C
                         _IdleI2C
                 _LCDreadPCF8574
                   _I2C_Read_Byte_Single_Reg
                     _IdleI2C
                     _ReadI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
         _LCDsetCursor (ARG)
           _LCDcommandWrite
             _LCDsend
               _LCDwrite4bits
                 _LCDpulseEnableNeg
                   _DelayMicroseconds
                   _LCDwritePCF8574
                     _I2C_Write_Byte_Single_Reg
                       _IdleI2C
                       _WriteI2C
                         _IdleI2C
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
     _displayLeftRightScroll
       _DelayMilliseconds
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDscrollDisplayLeft
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDscrollDisplayRight
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _displayOnOff
       _DelayMilliseconds
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDdisplayOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDdisplayOn
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDhome
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _printAt
       _DelayMilliseconds
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
     _printLeftAndRight
       _DelayMilliseconds
       _LCD_Write_Str
         _LCDdataWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDblinkOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDclear
         _DelayMicroseconds
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDcursorOff
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDleftToRight
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDrightToLeft
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C
       _LCDsetCursor
         _LCDcommandWrite
           _LCDsend
             _LCDwrite4bits
               _LCDpulseEnableNeg
                 _DelayMicroseconds
                 _LCDwritePCF8574
                   _I2C_Write_Byte_Single_Reg
                     _IdleI2C
                     _WriteI2C
                       _IdleI2C
               _LCDwritePCF8574
                 _I2C_Write_Byte_Single_Reg
                   _IdleI2C
                   _WriteI2C
                     _IdleI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      61       5       60.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      59       1       93.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BA      20        0.0%
DATA                 0      0      BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Oct 01 09:27:54 2015

           displayLeftRightScroll@x 0017                   _DelayMilliseconds 0A34  
                                 _x 0058                LCD_Write_Str@message 000D  
                       _SSPSTATbits 000FC7                       putHexString@c 001B  
                                l22 0B64                                  l31 0AF2  
                     putHexString@r 0017                                  l25 0B7C  
                                l34 0B06                  ?_DelayMilliseconds 0001  
                  ?_LCDcommandWrite 0001                         __CFG_BORV$3 000000  
                     ?_displayOnOff 0001                        __CFG_CP0$OFF 000000  
                      __CFG_CP1$OFF 000000                        __CFG_CP2$OFF 000000  
                      __CFG_CP3$OFF 000000                        __CFG_CP4$OFF 000000  
                      __CFG_CP5$OFF 000000                         __CFG_OSC$XT 000000  
                               l146 0988                                 l406 03C8  
                               l504 093A                                 l259 0ADE  
                               l267 0A4C                                 l470 0C14  
                               l471 0C16                                 l495 091A  
                               l399 06EA                        __CFG_CPB$OFF 000000  
                      __CFG_CPD$OFF 000000                                 u731 028C  
                               u741 029E                                 u671 09D2  
                  _backLightControl 0358           __end_of_DelayMicroseconds 0AE6  
                               _hex 0032                         ?_LCDblinkOn 0001  
               ??_DelayMilliseconds 0003                                 prod 000FF3  
                               wreg 000FE8            __size_of_LCDwritePCF8574 0010  
                      __CFG_LVP$OFF 000000                 __size_of_DELAY_Init 0010  
                       ?_LCDreceive 0001                        __CFG_WDT$OFF 000000  
                              l2104 0A56                                l2200 031E  
                              l2206 033C                                l2062 0970  
                              l2222 0524                                l2232 0540  
                              l2306 03C0                                l2058 0960  
                              l2226 052C                                l2324 0412  
                              l2244 0574                                l2260 06E2  
                              l2318 03FE                                l2510 00DC  
                              l2254 0590                                l2096 0A40  
                              l2192 02E8                                l2248 057C  
                              l2280 0744                                l2272 0714  
                              l2186 02CA                                l2530 0118  
                              l2506 00D4                                l2532 011C  
                              l2526 0110                                l2518 00F2  
                              l2544 013C                                l2536 0124  
                              l2472 0014                                l2482 003E  
                              l2548 0140                                l2476 001C  
                              l1854 0CAC                     __end_of_LCDhome 0C60  
                              l2576 0DAA                                l1970 0A20  
                              l1878 0926                                l1966 0A0C  
                   __end_of_LCDbusy 0DCA                                l1978 09E6  
                   __end_of_LCDsend 0B36                                STR_1 FF70  
                              STR_2 FFF0                                STR_3 FF56  
                              STR_4 FFD2                                STR_5 FF21  
                              STR_6 FF7D                                STR_7 FF21  
                              STR_8 FF95                                STR_9 FF63  
                              _TMR1 000FCE                        ?_LCDdataRead 0001  
                              _bell 004B                                _duck 00A1  
                              _main 0DA6                                _note 00B1  
                  __end_of_I2C_Init 0C36                                fsr2h 000FDA  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                        ?_LCDblinkOff 0001  
                     _autoIncrement 0282                                prodl 000FF3  
                              start 0000                       __CFG_IESO$OFF 000000  
                   __end_of_IdleI2C 0CBE           __end_of_DelayMilliseconds 0A64  
     I2C_Write_Byte_Single_Reg@info 0003                       __CFG_MCLRE$ON 000000  
                      ___param_bank 000010                       _LCD_Write_Str 0A02  
                   __end_of_ReadI2C 0C1E             autoIncrement@Autoscroll 0025  
        __size_of_LCDaddressCounter 0008                     __end_of_OpenI2C 0BE6  
                      ?_LCDcursorOn 0001              __size_of_LCDcreateChar 0044  
                  __end_of_LCD_Init 064C                      ??_displayOnOff 0017  
    __size_of_OSCILLATOR_Initialize 0002       __end_of_OSCILLATOR_Initialize 0DE4  
                  __end_of_LCDclear 0C74                       ?_LCDbacklight 0001  
                             ?_main 0001                               STR_10 FF3B  
                             STR_11 FF63                               STR_20 FFA1  
                             STR_12 FF1F       __size_of_controlMemoryReading 0134  
                             STR_21 FFB6                               STR_13 FF2D  
                             STR_14 FF3B                               STR_22 FFC0  
                             STR_30 FF0F                               STR_31 FFFB  
                             STR_15 FFD8                               STR_23 FFAC  
                             STR_16 FFDE                               STR_24 FF89  
                             STR_32 FF49                               STR_33 FFFB  
                             STR_17 FFE4                               STR_25 FEC0  
                             STR_34 FFF6                               STR_18 FFEA  
                             STR_26 FEE8                               STR_35 FFFB  
                             STR_19 FFC9                               STR_27 FEAB  
                             STR_36 FEFC                               STR_28 FED4  
                             STR_29 FEAB                               STR_37 FFFB  
            __size_of_LCDdisplayOff 000C                       __CFG_PWRT$OFF 000000  
                     __CFG_WRT0$OFF 000000                       __CFG_WRT1$OFF 000000  
                     __CFG_WRT2$OFF 000000                       __CFG_WRT3$OFF 000000  
                     __CFG_WRT4$OFF 000000                       __CFG_WRT5$OFF 000000  
                    __CFG_EBTR0$OFF 000000                      __CFG_FCMEN$OFF 000000  
                    __CFG_EBTR1$OFF 000000                      __CFG_EBTR2$OFF 000000  
                    __CFG_EBTR3$OFF 000000                      __CFG_EBTR4$OFF 000000  
                    __CFG_EBTR5$OFF 000000                    ?_LCDnoAutoscroll 0001  
                     ?_LCDdataWrite 0001                       __CFG_WRTB$OFF 000000  
                     __CFG_WRTC$OFF 000000                       __CFG_WRTD$OFF 000000  
                             _check 0089                      __CFG_EBTRB$OFF 000000  
                             _clock 0091                               _heart 00A9  
                             _cross 0099                   _printLeftAndRight 07CE  
                             tablat 000FF5                     __end_of_printAt 07CE  
                             plusw1 000FE3                               plusw2 000FDB  
                ?_printLeftAndRight 0001                               status 000FD8  
                    ?_autoIncrement 0001                      __CFG_PBADEN$ON 000000  
            __size_of_LCDautoscroll 000C                  dataMemoryReading@c 001F  
                dataMemoryReading@i 0022                  dataMemoryReading@p 0021  
                dataMemoryReading@r 001E                  dataMemoryReading@x 0020  
                     ?_LCDdisplayOn 0001                      ?_LCD_Write_Str 000D  
               __size_of_LCDblinkOn 000C                      _LCD_Write_Char 0DB0  
                   __initialization 08A4                 ??_printLeftAndRight 0017  
                     ?_LCDreadDDRam 0001                       ?_LCDreadCGRam 0001  
                      __end_of_main 0DB0                       ?_LCDread4bits 0001  
               __size_of_LCDreceive 003C            LCD_Write_Str@message_ptr 000F  
                    ??_LCDbacklight 0006                       ?_LCDcursorOff 0001  
                  LCDreceive@RsMode 000C                              ??_main 0032  
              _LCDscrollDisplayLeft 0CEC                       __activetblptr 000002  
        __size_of_DelayMicroseconds 002A                           ??_LCDhome 000D  
                         ??_LCDbusy 000D                           ??_LCDsend 0009  
                    ??_LCDdataWrite 000C                   _LCDpulseEnableNeg 0A90  
                 _LCDpulseEnablePos 0A64                       ?_LCDsetCursor 000D  
           __size_of_LCDnoBacklight 000C           __end_of_printLeftAndRight 0842  
                  LCDreceive@lownib 000B                  ?_LCDpulseEnableNeg 0001  
                ?_LCDpulseEnablePos 0001                    __end_of_WriteI2C 0946  
                   __CFG_BBSIZ$1024 000000                       _LCDcreateChar 0946  
                       OpenI2C@slew 0001             __size_of_LCDcommandRead 0008  
                         ??_IdleI2C 0001                   ??_LCDwritePCF8574 0005  
                            _SSPADD 000FC8                              _TRISA1 007C91  
                            _TRISB0 007C98                              _TRISA2 007C92  
                            _TRISB1 007C99                              _TRISA3 007C93  
                            _TRISB2 007C9A                              _TRISA4 007C94  
                            _TRISC1 007CA1                              _TRISA5 007C95  
                            _TRISC2 007CA2                              _TRISB4 007C9C  
                            _TRISB5 007C9D                              _SSPBUF 000FC9  
               ??_LCDpulseEnableNeg 0006                           ??_ReadI2C 0001  
               ??_LCDpulseEnablePos 0006                      ??_LCDdisplayOn 000D  
            __end_of_LCD_Write_Char 0DBA                       _LCDdisplayOff 0D9A  
                         ??_OpenI2C 0002          __size_of_DelayMilliseconds 0030  
                    __CFG_XINST$OFF 000000                        ??_DELAY_Init 0001  
                    ??_LCDreadDDRam 000D                      ??_LCDreadCGRam 000D  
                    ??_LCDread4bits 0007                      __CFG_STVREN$ON 000000  
                     displayOnOff@x 0017                      ??_LCDcursorOff 000D  
                   _exerciseDisplay 0B36               ?_LCDscrollDisplayLeft 0001  
           __size_of_LCDleftToRight 000C           __end_of_LCDpulseEnableNeg 0ABC  
           __size_of_LCDreadPCF8574 0008                     __CFG_BOREN$BOHW 000000  
         __end_of_LCDpulseEnablePos 0A90                       _LCDautoscroll 0D82  
                      __pdataCOMRAM 0032                           ?_I2C_Init 0001  
                   LCDsetCursor@col 0016                      ??_LCDsetCursor 000E  
                   LCDsetCursor@row 000D                        __mediumconst FEAA  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8              __size_of_cursorControl 00C6  
                         ??_printAt 0017                      ?_LCDcreateChar 000D  
                __end_of_DELAY_Init 0CDE                     ??_autoIncrement 0017  
                 _SYSTEM_Initialize 0C36               LCD_Write_Char@message 000D  
                    LCDcreateChar@i 0010                __end_of_displayOnOff 0754  
                        __accesstop 0060             __end_of__initialization 08F0  
                         ?_LCD_Init 0001                  ?_SYSTEM_Initialize 0001  
                    ?_LCDdisplayOff 0001                           ?_LCDclear 0001  
                   ??_LCD_Write_Str 000F                __size_of_LCDdataRead 0008  
                     ___rparam_used 000001            __end_of_backLightControl 0422  
                   ?_LCD_Write_Char 0001              __size_of_LCDwrite4bits 0014  
              __size_of_LCDblinkOff 000C                      __pcstackCOMRAM 0001  
                      __pidataBANK0 0842                 ??_SYSTEM_Initialize 000D  
                      __functionset 0057                __size_of_LCDcursorOn 000C  
                    ?_LCDautoscroll 0001                          ??_I2C_Init 0003  
                      ??_LCDblinkOn 000D          __size_of_printLeftAndRight 0074  
 __size_of_I2C_Read_Byte_Single_Reg 0028                        ??_LCDreceive 0009  
         ?_I2C_Read_Byte_Single_Reg 0001           __end_of_SYSTEM_Initialize 0C4C  
             _LCDscrollDisplayRight 0CDE                 LCDreadDDRam@address 000D  
              __end_of_LCDbacklight 0D5E                          ??_LCD_Init 000D  
                        __pnvCOMRAM 0059                          ??_LCDclear 000D  
                 LCDreceive@highnib 000A                       _cursorControl 0422  
           __end_of_exerciseDisplay 0B5C                __end_of_LCDdataWrite 0D08  
                __end_of_LCDblinkOn 0D46              ??_LCDscrollDisplayLeft 000D  
                __end_of_LCDreceive 09C6                           ?_WriteI2C 0001  
               LCDreadCGRam@address 000D                LCDcommandWrite@value 000C  
        __size_of_LCDpulseEnableNeg 002C               controlMemoryReading@x 0019  
        __size_of_LCDpulseEnablePos 002C             __size_of_LCDrightToLeft 000C  
                     _LCDwrite4bits 0C74                  putHexString@hexval 0018  
              __end_of_LCDdisplayOn 0D9A                             _LCDhome 0C4C  
                           _LCDbusy 0DC2                             _LCDsend 0B0E  
                    _LCDnoBacklight 0D46                     ??_LCDcreateChar 000F  
          __size_of_LCDcommandWrite 000E                __end_of_LCDreadDDRam 0C9A  
              __end_of_LCDreadCGRam 0CAC                __end_of_LCDread4bits 0C02  
                           _SSPCON1 000FC6                             _SSPCON2 000FC5  
                           _SSPSTAT 000FC7            ??_displayLeftRightScroll 0017  
                    _LCDcommandRead 0DD2                             _IdleI2C 0CAC  
                   ??_LCDdisplayOff 000D        __end_of_controlMemoryReading 0282  
              __end_of_LCDcursorOff 0D76                             _ReadI2C 0C02  
                           _OpenI2C 0BC8                      ?_cursorControl 0001  
                           __Hparam 0000                        LCDsend@value 000B  
                           __Lparam 0000                __end_of_LCDsetCursor 0A02  
                   ??_LCDautoscroll 000D                             __pcinit 08A4  
                        ??_WriteI2C 0002                             _charmap 0060  
                           __ramtop 0D00                   backLightControl@x 0017  
                    _LCDleftToRight 0D22                             __ptext0 0DA6  
                           __ptext1 0B36                             __ptext2 07CE  
                           __ptext3 0D16                             __ptext4 0D22  
                           __ptext5 0754                             __ptext6 06D2  
                           __ptext7 04E8                             __ptext8 0CDE  
                           __ptext9 0CEC                      _LCDreadPCF8574 0DDA  
                    ?_LCDwrite4bits 0001              __end_of_LCDnoBacklight 0D52  
                         _T1CONbits 000FCD               _OSCILLATOR_Initialize 0DE2  
                   _LCDwritePCF8574 0CBE            ??_PIN_MANAGER_Initialize 0001  
                   __displaycontrol 0054                             _printAt 0754  
             __size_of_displayOnOff 0082              __end_of_LCDcommandRead 0DDA  
            ?_LCDscrollDisplayRight 0001          __size_of_SYSTEM_Initialize 0016  
              end_of_initialization 08F0                    LCDsetCursor@F113 0043  
                     __Lmediumconst FEAA            __size_of_LCDnoAutoscroll 000C  
                     ?_putHexString 0017                    ?_exerciseDisplay 0001  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
            __end_of_LCDleftToRight 0D2E              __end_of_LCDreadPCF8574 0DE2  
                      _displayOnOff 06D2                           _PORTCbits 000F82  
                   ?_LCDnoBacklight 0001                           _TRISCbits 000F94  
__size_of_I2C_Write_Byte_Single_Reg 0026                   __size_of_I2C_Init 0018  
             __size_of_LCDbacklight 000C                     ?_LCDcommandRead 0001  
        ?_I2C_Write_Byte_Single_Reg 0003                    ??_LCD_Write_Char 000D  
   __size_of_displayLeftRightScroll 00B6                   ??_LCDcommandWrite 000C  
             __size_of_LCDdataWrite 000E                     ??_cursorControl 0011  
                     __entrymodeset 0056                   __size_of_LCD_Init 00AE  
                 ?_backLightControl 0001                      ??_putHexString 0019  
                 __size_of_LCDclear 0014                  ??_backLightControl 0017  
                   ?_LCDleftToRight 0001             __end_of_LCDwritePCF8574 0CCE  
  __end_of_I2C_Read_Byte_Single_Reg 0B0E                     ?_LCDreadPCF8574 0001  
             __size_of_LCDdisplayOn 000C                     ??_LCDwrite4bits 0007  
                     __pidataCOMRAM 0BA6                        _LCDbacklight 0D52  
            ?_OSCILLATOR_Initialize 0001                _controlMemoryReading 014E  
                    _LCDrightToLeft 0D16               __size_of_LCDreadDDRam 0012  
             __size_of_LCDreadCGRam 0012               __size_of_LCDread4bits 001C  
               start_initialization 08A4     __size_of_PIN_MANAGER_Initialize 0024  
                      _LCDdataWrite 0CFA               __size_of_LCDcursorOff 000C  
                    LCDsend@highnib 0009                    WriteI2C@data_out 0002  
 __end_of_I2C_Write_Byte_Single_Reg 0B82                       ??_LCDdataRead 000D  
             __size_of_LCDsetCursor 003C                       ??_LCDblinkOff 000D  
             __end_of_autoIncrement 0358                        _LCDdisplayOn 0D8E  
             __end_of_LCD_Write_Str 0A34                   ??_LCDnoAutoscroll 000D  
                      _LCDreadDDRam 0C88                        _LCDreadCGRam 0C9A  
                     ??_LCDcursorOn 000D                        _LCDread4bits 0BE6  
              LCDread4bits@RsEnMode 0008              _displayLeftRightScroll 04E8  
                       __pdataBANK0 0060                    __CFG_LPT1OSC$OFF 000000  
            __end_of_LCDrightToLeft 0D22           I2C_Read_Byte_Single_Reg@b 0004  
       displayLeftRightScroll@x_713 0018               ?_controlMemoryReading 0001  
                      _LCDcursorOff 0D6A                   _dataMemoryReading 0000  
                 __size_of_WriteI2C 004C                         __pbssCOMRAM 0053  
                          ?_LCDhome 0001                  ?_dataMemoryReading 0001  
                          ?_LCDbusy 0001                            ?_LCDsend 0008  
                      _LCDsetCursor 09C6                 ??_dataMemoryReading 001C  
                          ?_IdleI2C 0001                            ?_ReadI2C 0001  
                          ?_OpenI2C 0001                  DelayMilliseconds@x 0003  
            _PIN_MANAGER_Initialize 0B82                 __end_of_LCDdataRead 0DC2  
                     __pmediumconst FEAA                 __end_of_LCDblinkOff 0D82  
                         __numlines 0059                    ?_LCDwritePCF8574 0001  
         __end_of_dataMemoryReading 014E                     ?_LCDrightToLeft 0001  
     __size_of_LCDscrollDisplayLeft 000E                 __end_of_LCDcursorOn 0D3A  
          _I2C_Read_Byte_Single_Reg 0AE6                            _I2C_Init 0C1E  
           ??_LCDscrollDisplayRight 000D                __end_of_putHexString 06D2  
                     LCDread4bits@b 0007                            ?_printAt 0001  
             __end_of_LCDcreateChar 098A                            _LCD_Init 059E  
             __end_of_LCDdisplayOff 0DA6                            _LCDclear 0C60  
               autoIncrement@F16646 007E                 autoIncrement@F16648 0070  
                          _PIR1bits 000F9E                    __CFG_WDTPS$32768 000000  
                  ??_LCDnoBacklight 0006              ??_controlMemoryReading 0017  
                        _ADCON1bits 000FC1               __end_of_LCDautoscroll 0D8E  
                  ??_LCDcommandRead 000D                     _LCDcommandWrite 0D08  
                  __size_of_LCDhome 0014                    __size_of_LCDbusy 0008  
                  __size_of_LCDsend 0028                      autoIncrement@p 0030  
                       _INTCON2bits 000FF1         ??_I2C_Write_Byte_Single_Reg 0004  
                     LCDsend@RsMode 0008                           copy_data0 08C4  
                         copy_data1 08E4                   LCDdataWrite@value 000C  
                  OpenI2C@sync_mode 0002                         _LCDdataRead 0DBA  
                  __size_of_IdleI2C 0012                         _LCDblinkOff 0D76  
                     LCDsend@lownib 000A                    __size_of_ReadI2C 001C  
                  ??_LCDleftToRight 000D                            __Hrparam 0000  
          LCDwrite4bits@nibEnRsMode 0007                    __size_of_OpenI2C 001E  
                  ??_LCDreadPCF8574 0005                            __Lrparam 0000  
                        _DELAY_Init 0CCE             ??_OSCILLATOR_Initialize 0001  
                       _LCDcursorOn 0D2E          __size_of_dataMemoryReading 014E  
                          _WriteI2C 08FA             LCDsetCursor@row_offsets 000E  
          __size_of_exerciseDisplay 0026           __size_of_backLightControl 00CA  
         autoIncrement@NoAutoscroll 0017              LCDpulseEnableNeg@_data 0006  
                          __ptext10 0000                            __ptext11 064C  
                          __ptext20 0DC2                            __ptext12 0C88  
                          __ptext21 0D3A                            __ptext13 0C9A  
                          __ptext30 0DDA                            __ptext22 0DCA  
                          __ptext14 0DBA                            __ptext31 0AE6  
                          __ptext23 0DD2                            __ptext15 0946  
                          __ptext40 0DB0                            __ptext32 0C02  
                          __ptext24 098A                            __ptext16 0422  
                          __ptext41 0CFA                            __ptext33 0A02  
                          __ptext25 0BE6                            __ptext17 0C4C  
                          __ptext50 0D08                            __ptext42 0A34  
                          __ptext34 0282                            __ptext26 0A64  
                          __ptext18 014E                            __ptext51 0B0E  
                          __ptext43 0C36                            __ptext35 09C6  
                          __ptext27 0358                            __ptext19 0D2E  
                          __ptext60 0BC8                            __ptext52 0C74  
                          __ptext44 0B82                            __ptext36 0D5E  
                          __ptext28 0D46                            __ptext61 0CCE  
                          __ptext53 0A90                            __ptext45 0DE2  
                          __ptext37 0D6A                            __ptext29 0D52  
                          __ptext54 0CBE                            __ptext46 059E  
                          __ptext38 0D76                            __ptext55 0B5C  
                          __ptext47 0D8E                            __ptext39 0D82  
                          __ptext56 08FA                            __ptext48 0D9A  
                          __ptext57 0CAC                            __ptext49 0C60  
                          __ptext58 0ABC                            __ptext59 0C1E  
                  __size_of_printAt 007A                     _LCDnoAutoscroll 0D5E  
   I2C_Write_Byte_Single_Reg@device 0004                       __size_of_main 000A  
             __end_of_cursorControl 04E8             ?_displayLeftRightScroll 0001  
                          _retarrow 00B9              LCDpulseEnablePos@_data 0006  
         _I2C_Write_Byte_Single_Reg 0B5C          DelayMicroseconds@delayTime 0001  
        DelayMilliseconds@delayTime 0001                    __displayfunction 0055  
              LCDwritePCF8574@value 0005             __end_of_LCDcommandWrite 0D16  
                 _LCDaddressCounter 0DCA               __size_of_putHexString 0086  
    I2C_Read_Byte_Single_Reg@device 0003               __end_of_LCDwrite4bits 0C88  
                ?_LCDaddressCounter 0001                          _LCDblinkOn 0D3A  
               ??_LCDaddressCounter 000D                          _LCDreceive 098A  
           ?_PIN_MANAGER_Initialize 0001      __end_of_displayLeftRightScroll 059E  
             LCDcreateChar@location 000F                    ??_LCDrightToLeft 000D  
                       ?_DELAY_Init 0001                        _putHexString 064C  
           __size_of_LCD_Write_Char 000A           __end_of_LCDaddressCounter 0DD2  
        ??_I2C_Read_Byte_Single_Reg 0003                LCDcreateChar@charmap 000D  
            __size_of_autoIncrement 00D6             __end_of_LCDnoAutoscroll 0D6A  
                 _DelayMicroseconds 0ABC      __size_of_LCDscrollDisplayRight 000E  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
            __size_of_LCD_Write_Str 0032       __end_of_LCDscrollDisplayRight 0CEC  
                 ??_exerciseDisplay 0032                  ?_DelayMicroseconds 0001  
    __end_of_PIN_MANAGER_Initialize 0BA6        __end_of_LCDscrollDisplayLeft 0CFA  
               ??_DelayMicroseconds 0003                       __backlightval 0053  
